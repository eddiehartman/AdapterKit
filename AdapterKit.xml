<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig IDIversion="Created by SDI7.2 - 2024-06-26" created="Sun Oct 20 18:27:08 CEST 2024" createdBy="eddiehartman" modified="Wed Nov 06 20:06:36 CET 2024" modifiedBy="eddiehartman" version="7.1.1">
    <Folder name="AssemblyLines">
        <AssemblyLine name="update_IB_AL_config">
            <ModTime>1729441628017</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="doEETNOW" state="Enabled"/>
                    <Component name="BROKER_LDAP" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="doEETNOW">
                    <ModTime>1490289589336</ModTime>
                    <parameter name="script"><![CDATA[errors = [];
adapterName = system.getTDIProperty("adapter.name").trim();
configName = system.getTDIProperty("adapter.config").trim();
fromFolder = system.getTDIProperty("adapter.source.folder").trim();
toFolder = system.getTDIProperty("adapter.destination.folder").trim();
targetDN = system.getTDIProperty("adapter.ib.entry.dn").trim();
if (!fromFolder.endsWith("/") && !fromFolder.endsWith("\\")) {
    fromFolder += "/";
}
if (!toFolder.endsWith("/") && !toFolder.endsWith("\\")) {
    toFolder += "/";
}

inputFilePath = fromFolder + configName + ".xml";
inFile = system.openFileForInput(inputFilePath);
buf = new java.lang.StringBuffer();
do {
	line = inFile.readLine();
	if (line != null){
		buf.append(line + "\n");
	}
} while (line != null);
inFile.close();

sc = system.newSearchCriteria();
sc.addCriteria("$dn",sc.EXACT,targetDN);
e = ldap.findEntry(sc);
if (e == null){
	throw "Cannot find adapter assemblyline entry: " + targetDN;
}

ldap.replaceAttributeValue(targetDN,"erAssemblyLine",buf.toString());]]></parameter>
                </Script>
                <Connector name="BROKER_LDAP">
                    <InheritFrom>/Connectors/BROKER_LDAP</InheritFrom>
                    <ModTime>1490288631454</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_initialize</Name>
                            <Script>ldap = thisConnector.connector;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="importAdapter">
            <ModTime>1729441627422</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">AdapterKitLib</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Set some AL variables" state="Enabled"/>
                    <Component name="Read schema dsml" state="Enabled"/>
                    <Component name="Read service def" state="Enabled"/>
                    <Component name="Read CustomLabels properties" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Set some AL variables">
                    <ModTime>1487773793104</ModTime>
                    <parameter name="script"><![CDATA[adapterName = system.getTDIProperty("adapter.name").trim();
adapterType = system.getTDIProperty("adapter.type").trim().toUpperCase();
adapterCategory = system.getTDIProperty("adapter.category").trim().toLowerCase();
adapterCategory = adapterCategory.substring(0,1).toUpperCase()
					+ adapterCategory.substring(1);
adapterVersion = system.getTDIProperty("adapter.version").trim();
adapterDescription = system.getTDIProperty("adapter.description").trim();

fromFolder = system.getTDIProperty("adapter.source.folder").trim();
toFolder = system.getTDIProperty("adapter.destination.folder").trim();

if (!fromFolder.endsWith("/") && !fromFolder.endsWith("\\")) {
	fromFolder += "/";
}
if (!toFolder.endsWith("/") && !toFolder.endsWith("\\")) {
	toFolder += "/";
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Read schema dsml">
                    <ModTime>1487773933020</ModTime>
                    <parameter name="script">e = readXML("schema.dsml");</parameter>
                </Script>
                <Script name="Read service def">
                    <ModTime>1487771052028</ModTime>
                    <parameter name="script"/>
                </Script>
                <Script name="Read CustomLabels properties">
                    <ModTime>1487771075319</ModTime>
                    <parameter name="script"/>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="exportAdapter">
            <ModTime>1730297073922</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                    <Component name="EmptyScript" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1730297073922</ModTime>
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502391250521</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

attTypeNode("eruid", errors, "string");
attTypeNode("erpassword", errors, "password");

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502390927305</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();
		
		if (classType == "service") {
			continue;
		}

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1503487106103</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
try {
	_zipper.zip(toFolder + adapterName + ".jar", files);
} catch (ex) {
	errors.push(ex);
}]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
                <Script name="EmptyScript">
                    <ModTime>1730297073922</ModTime>
                    <parameter name="script"><![CDATA[defaultLogLevel = "INFO";
function logmsg(lvl, msg) {
	var lvl = (msg) ? lvl : defaultLogLevel;
	var msg = (msg) ? msg : lvl;
	task.logmsg(lvl, msg);
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="exportAdapter 20170927 1042">
            <ModTime>1729441627841</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502391250521</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

attTypeNode("eruid", errors, "string");
attTypeNode("erpassword", errors, "password");

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502390927305</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();
		
		if (classType == "service") {
			continue;
		}

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1503487106103</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
try {
	_zipper.zip(toFolder + adapterName + ".jar", files);
} catch (ex) {
	errors.push(ex);
}]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="exportAdapter 20170810 2109">
            <ModTime>1729441627921</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Write targetProfile json_1" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502391250521</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

attTypeNode("eruid", errors, "string");
attTypeNode("erpassword", errors, "password");

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502390927305</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();
		
		if (classType == "service") {
			continue;
		}

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json_1">
                    <ModTime>1502390611498</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				errors.push("Class attribute ("
							+ classAtts[j]
							+ ") is not defined by 'attribute.*' property");
			continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1502276002504</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
_zipper.zip(toFolder + adapterName + ".jar", files);]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="exportAdapter 20170810 1357">
            <ModTime>1729441628009</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502288182033</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502289734030</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				errors.push("Class attribute ("
							+ classAtts[j]
							+ ") is not defined by 'attribute.*' property");
			continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: className
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
				name: "Custom" + useClassType + "Extension",
				description: "Security adapter view of a " + useClassType,
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else {
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tp.targetSchema = targetSchema;		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1502276002504</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
_zipper.zip(toFolder + adapterName + ".jar", files);]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="copyALFiles">
            <ModTime>1729441627518</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="readProperties" state="Enabled"/>
                    <Component name="copyFiles" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="readProperties">
                    <ModTime>1490041850856</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
    propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
    propName = propNames[i];
    if (propName.startsWith("al.")) {
        propVal = system.getTDIProperty("AdapterKit", propName);
        if (propVal != null && propVal.trim() != "") {
            parts = system.splitString(propVal, ";");

            alName = parts[0];
            desc = (parts.length > 1) ? parts[1] : parts[0];
            operation = propName.substring(3).trim();
            
            op = {assemblyLine: alName, 
                    operation: operation,
                    description: desc};
            
            operations[alName] = op;
            assemblyLines[operation] = op;
        }    
    }    
}]]></parameter>
                </Script>
                <Script name="copyFiles">
                    <ModTime>1494408507322</ModTime>
                    <parameter name="script"><![CDATA[errors = [];
adapterName = system.getTDIProperty("adapter.name").trim();
configName = system.getTDIProperty("adapter.config").trim();
fromFolder = system.getTDIProperty("adapter.source.folder").trim();
toFolder = system.getTDIProperty("adapter.destination.folder").trim();
if (!fromFolder.endsWith("/") && !fromFolder.endsWith("\\")) {
    fromFolder += "/";
}
if (!toFolder.endsWith("/") && !toFolder.endsWith("\\")) {
    toFolder += "/";
}


for (thisAL in operations) {
    try {
    	
        inFileName = fromFolder + configName;
        if (!inFileName.toLowerCase().endsWith(".xml")) {
        	inFileName += ".xml";
        }
        fromFile = system.openFileForInput(inFileName);
    } catch (ex) {
        msg = "Error opening Config xml file " + inFileName + " - ex";
        errors.push(msg);
    }    

    try {
        outFileName = toFolder + thisAL + ".xml";
        toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
        task.logmsg("Writing to :" + outFileName + " for " + operations[thisAL].operation);
    } catch (ex) {
        msg = "Error creating output file " + outFileName + " - " + ex;
        errors.push(msg);
    }
    if (errors.length > 0) {
        try {
            fromFile.close();
        } catch (ex) {
            // do nothing
        }
        try {
            toFile.close();
        } catch (ex) {
            // do nothing
        }
        
        return;
    }
     try {
        do {
            line = fromFile.readLine();
            if (line != null) {
                toFile.write(line);
                toFile.newLine();
            }
        } while (line != null);
    } catch (ex) {
        msg = "Error writing AL file " + toFile + " - " + ex;
        errors.push(msg);
    }
        
        fromFile.close();
        toFile.close();
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_testZip_ReadJarFile">
            <ModTime>1729441627788</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Properties to Variables" state="Enabled"/>
                    <Component name="Init" state="Enabled"/>
                    <Component name="Unzip" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="Properties to Variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853890150</ModTime>
                </Script>
                <Script name="Init">
                    <ModTime>1494930316078</ModTime>
                    <parameter name="script"><![CDATA[toFolder = "X:/TDI/temp/XGSProfile test/";
toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/output/";
fromFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";]]></parameter>
                </Script>
                <Script name="Unzip">
                    <ModTime>1502380643410</ModTime>
                    <parameter name="script"><![CDATA[var usePath1 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile_adt";
var usePath2 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile";
var useName = "targetProfile.json";
_zipper.unzip(usePath1 + "/" + useName);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_sortJson">
            <ModTime>1729441627649</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="functions" state="Enabled"/>
                    <Component name="test" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="functions">
                    <ModTime>1502380819846</ModTime>
                    <parameter name="script"><![CDATA[_padsize = 3;
_padstr = "                                                                ";
function stringify(jobj, lvl, outArr) {
	lvl = lvl || 0;
	outArr = outArr || [];
	
	if (jobj instanceof Array) {
		for (var i = 0; i < jobj.length; i++) {
			var prop = jobj[i];
			stringify(prop, lvl, outArr);
			if ((i+1) < jobj.length) {
				outArr.push(_padstr.substring(0, (lvl+2)*_padsize) + ",")
			}
		}
	} else
	if (typeof jobj == "object") {
		outArr.push(_padstr.substring(0, lvl*_padsize) + "{");
		var propNames = [];
		for (var propName in jobj) {
			propNames.push(propName);
		}
		var propNames = system.splitString(propNames.join(";"), ";");
		java.util.Arrays.sort(propNames);
		
		for (var propName in propNames) {
			var prop = jobj[propName];
			
			if (prop instanceof Array) {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ": [");
				stringify(prop, lvl+2, outArr)				
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + "]");
			} else
			if (typeof prop == "object") {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ":");
				stringify(prop, lvl+2, outArr)				
			} else {
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + propName + ": " + prop);
			}
		}
		outArr.push(_padstr.substring(0, lvl*_padsize) + "}");
	}
		
	if (lvl == 0) {
		task.logmsg("\n" + outArr.join("\n"));
	}
}

function loadObject(path) {
	var file = system.openFileForInput(path);
	var buf = new java.lang.StringBuffer();
	do {
		var line = file.readLine();
		if (line != null) {
			buf.append(line + "\n");
		}
	} while (line != null);
	file.close();
	var obj = fromJson(buf.toString());
	return obj;
}]]></parameter>
                </Script>
                <Script name="test">
                    <ModTime>1502380862809</ModTime>
                    <parameter name="script"><![CDATA[var usePath1 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile_adt";
var usePath2 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile";
var useName = "targetProfile.json";

obj = loadObject(usePath2 + "/" + useName);

stringify(obj);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_setupTargetSchema">
            <ModTime>1729441627397</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="setup ts" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="setup ts">
                    <ModTime>1502387517160</ModTime>
                    <parameter name="script"><![CDATA[padding = 1;
function pad(len) {
	return "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t".substring(0, len);
}

function toJS(obj, lvl) {
	lvl = lvl || 0;
	var js = new java.lang.StringBuffer();
	var props = [];
	for (var pname in obj) {
		var pobj = obj[pname];
		if (pobj instanceof Array) {
			var arr = [];
			for (var i = 0; i < pobj.length; i++) {
				thisObj = pobj[i];
				arr.push(
						"\n" + pad(lvl*padding) + "{"
						+ toJS(thisObj, lvl+1)
						+ "\n" + pad(lvl*padding) + "}"
						);
			}
			props.push(
					"\n" + pad(lvl*padding) 
					+ pname + ": ["
					+ arr.join(",")
					+ "\n" + pad(lvl*padding) + "]"
					);
		} else
		if (pobj instanceof Object) {
			props.push(
					"\n" + pad(lvl*padding) 
					+ pname + ": {"
					+ toJS(pobj, lvl+1)
					+ "\n" + pad(lvl*padding) + "}"
					)
		} else 
		if (typeof pobj == "string") {
			props.push( 
					"\n" + pad(lvl*padding) 
					+ pname + ": "
					+ '"' + pobj + '"'
					);
		} else {
			props.push(
					"\n" + pad(lvl*padding) 
					+ pname + ": "
					+ pobj
					);
		}
	}
	js.append(props.join(","));
	
	return js;
}

ts = system.getScriptText("ts");
tsobj = fromJson(ts);

js = toJS(tsobj);
task.logmsg("\n\n----------\n\n" + js);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_jsonDiff">
            <ModTime>1729441627907</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="jsdiffObj" state="Enabled"/>
                    <Component name="Diff" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="jsdiffObj">
                    <ModTime>1502377194921</ModTime>
                    <parameter name="script"><![CDATA[jsdiffObj = function(debug) {
	debug = debug || true;
	this.jobj = [];
	this.padding = 3;
	
	this.diff = function(path, path2) {
		this.parse(path, path2);
		
		this.log("Comparing files...");
		this.log("------------------");
		
		var report = this.comparison();
		
		this.log("\nDIFF REPORT"
					+ "\nComparing: " + path
					+ "\n     With: " + path2
					+ "\n" + report
					)
	}
	
	this.comparison = function() {
		var report = new java.lang.StringBuffer();
		
		report.append(this.compare(this.jobj[0], this.jobj[1]));
		
		return report.toString();
	}
	
	this.pad = function(len) {
		len = len || 0;
		return ""; // shortcircuited for now
		if (len <= 0) return "";
		return "                                                                      ".substring(0, len);
	}
	
	this.compare = function(obj1, obj2, lvl, propPath) {
		lvl = lvl || 0;
		propPath = propPath || "";
		
		var report = new java.lang.StringBuffer();
		var names = [];
		for (var propName in obj1) {
			names.push(propName);
		}
		names = system.splitString(names.join(";"), ";");
		java.util.Arrays.sort(names);
		for (var propName in names) {
			var propObj = obj1[propName];
			var propObj2 = obj2[propName];
			
			var thisPath = propPath + "." + propName;
			
			this.log("comparing " + thisPath);

			if (typeof propObj2 == "undefined") {
				report.append( "\n" 
						+ this.pad(lvl*this.padding)
						+ thisPath
						+ " missing from obj2" );
			} else {
				if (propObj instanceof Array) {
					if (!(propObj2 instanceof Array)) {
						report.append( "\n" 
								+ this.pad(lvl*this.padding)
								+ thisPath 
								+ " in obj2 is not an Array" );
					} else {
						if (propObj2.length != propObj.length) {
							report.append( "\n" 
									+ this.pad(lvl*this.padding)
									+ thisPath 
									+ " in obj2 has length "
									+ propObj2.length 
									+ " while obj1 has "
									+ propObj.length 
									 );
						} 
						var len = (propObj.length < propObj2.length) ? propObj.length : propObj2.length;
						var arr1 = {};
						var arr2 = {};
						for (var i = 0; i < len; i++) {
							var thisObj = propObj[i];
							var sameObj = this.sameObj(thisObj, propObj2);
							
							report.append(this.compare(thisObj, 
														sameObj, 
														lvl+1, 
														thisPath 
															+ this.id(thisObj)
															+ "[" + i + "]"));
						}	
					}	
				} else
				if (propObj instanceof Object) {
					if (!(propObj2 instanceof Object)) {
						report.append( "\n" 
								+ this.pad(lvl*this.padding)
								+ thisPath 
								+ " in obj2 is not an Object" 
								 );
					} else {
						report.append(this.compare(propObj, 
													propObj2, 
													lvl+1, 
													thisPath));
					}	
				} else 
				if (propObj != propObj2) {
					report.append( "\n" 
							+ this.pad(lvl*this.padding)
							+ thisPath 
							+ " in obj2 has value '"
							+ propObj2 
							+ "' while obj1 has '"
							+ propObj
							+ "'" 
							 );
				}
			}
			
		}
		
		return report.toString();
	}
	
	this.id = function(obj) {
		var id = "";
		if (obj.id) {
			id = obj.id
		} else
		if (obj.name) {
			id = obj.name
		}
		if (id) {
			return "(" + id + ")"
		}
		return id;
	}
	
	this.sameObj = function(thisObj, propObj2) {
		for (var i = 0; i < propObj2.length; i++) {
			var same = propObj2[i];
			if ((thisObj.name && thisObj.name.equalsIgnoreCase(same.name))
				|| (thisObj.id && thisObj.id.equalsIgnoreCase(same.id))) {
				return same;
			}
		}
		return propObj2[0];
	}
	
	this.parse = function(path, path2) {
		this.jobj.push(this.file2jsobj(path));
		this.jobj.push(this.file2jsobj(path2));
	}
	
	this.file2jsobj = function(path) {	
		var fileabbv = "..." + path.substring(path.length-55);
		
		this.log("Opening " + fileabbv);
		var file = system.openFileForInput(path);
		
		this.log("Reading " + fileabbv);
		var lines = new java.lang.StringBuffer();
		do {
			var line = file.readLine();
			if (line == null) {
				break;
			}
			lines.append(line + "\n");
		} while (true);
		
		this.log("Parsing " + fileabbv);
		var jobj = fromJson(lines.toString());
		
		file.close();
		
		return jobj;
	}
	
	this.log = function(lvl, msg) {
		if (typeof lvl == "undefined") {lvl = "INFO"; msg = ""; } 
		if (typeof msg == "undefined") {msg = lvl; lvl = "INFO"; } 
		lvl = lvl.trim().toUpperCase();
		task.logmsg(lvl, msg);
		java.lang.System.out.println("[" + lvl + "] " + msg);
	}
	
	return this;
}]]></parameter>
                </Script>
                <Script name="Diff">
                    <ModTime>1502368508560</ModTime>
                    <parameter name="script"><![CDATA[var usePath1 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile_adt";
var usePath2 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile";
var useName = "targetProfile.json";

var jsdiff = new jsdiffObj();
result = jsdiff.diff(
	usePath1 + "/" + useName,
	usePath2 + "/" + useName
);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_jsonDiff 20170810 1637">
            <ModTime>1729441627569</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="jsdiffObj" state="Enabled"/>
                    <Component name="Diff" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="jsdiffObj">
                    <ModTime>1502375657759</ModTime>
                    <parameter name="script"><![CDATA[jsdiffObj = function(debug) {
	debug = debug || true;
	this.jobj = [];
	this.padding = 3;
	
	this.diff = function(path, path2) {
		this.parse(path, path2);
		
		this.log("Comparing files...");
		this.log("------------------");
		
		var report = this.comparison();
		
		this.log("\nDIFF REPORT"
					+ "\nComparing: " + path
					+ "\n     With: " + path2
					+ "\n" + report
					)
	}
	
	this.comparison = function() {
		var report = new java.lang.StringBuffer();
		
		report.append(this.compare(this.jobj[0], this.jobj[1]));
		
		return report.toString();
	}
	
	this.pad = function(len) {
		len = len || 0;
		return ""; // shortcircuited for now
		if (len <= 0) return "";
		return "                                                                      ".substring(0, len);
	}
	
	this.compare = function(obj1, obj2, lvl, propPath) {
		lvl = lvl || 0;
		propPath = propPath || "";
		
		var report = new java.lang.StringBuffer();
		for (var propName in obj1) {
			this.log("comparing " + propPath + "." + propName);

			var propObj2 = obj2[propName];
			if (typeof propObj2 == "undefined") {
				report.append( "\n" 
						+ this.pad(lvl*this.padding)
						+ propPath + "." + propName 
						+ " missing from obj2" );
			} else {
				var propObj = obj1[propName];
				if (propObj instanceof Array) {
					if (!(propObj2 instanceof Array)) {
						report.append( "\n" 
								+ this.pad(lvl*this.padding)
								+ propPath + "." + propName 
								+ " in obj2 is not an Array" );
					} else {
						if (propObj2.length != propObj.length) {
							report.append( "\n" 
									+ this.pad(lvl*this.padding)
									+ propPath + "." + propName 
									+ " in obj2 has length "
									+ propObj2.length 
									+ " while obj1 has "
									+ propObj.length 
									 );
						} 
						var len = (propObj.length < propObj2.length) ? propObj.length : propObj2.length;
						for (var i = 0; i < len; i++) {
							report.append(this.compare(propObj[i], 
														propObj2[i], 
														lvl+1, 
														propPath + "." + propName + "[" + i + "]"));
						}	
					}	
				} else
				if (propObj instanceof Object) {
					if (!(propObj2 instanceof Object)) {
						report.append( "\n" 
								+ this.pad(lvl*this.padding)
								+ propPath + "." + propName 
								+ " in obj2 is not an Object" 
								 );
					} else {
						report.append(this.compare(propObj, propObj2, lvl+1, propPath + "." + propName));
					}	
				} else 
				if (propObj != propObj2) {
					report.append( "\n" 
							+ this.pad(lvl*this.padding)
							+ propPath + "." + propName 
							+ " in obj2 has value '"
							+ propObj2 
							+ "' while obj1 has '"
							+ propObj
							+ "'" 
							 );
				}
			}
			
		}
		
		return report.toString();
	}
	
	this.parse = function(path, path2) {
		this.jobj.push(this.file2jsobj(path));
		this.jobj.push(this.file2jsobj(path2));
	}
	
	this.file2jsobj = function(path) {	
		var fileabbv = "..." + path.substring(path.length-55);
		
		this.log("Opening " + fileabbv);
		var file = system.openFileForInput(path);
		
		this.log("Reading " + fileabbv);
		var lines = new java.lang.StringBuffer();
		do {
			var line = file.readLine();
			if (line == null) {
				break;
			}
			lines.append(line + "\n");
		} while (true);
		
		this.log("Parsing " + fileabbv);
		var jobj = fromJson(lines.toString());
		
		file.close();
		
		return jobj;
	}
	
	this.log = function(lvl, msg) {
		if (typeof lvl == "undefined") {lvl = "INFO"; msg = ""; } 
		if (typeof msg == "undefined") {msg = lvl; lvl = "INFO"; } 
		lvl = lvl.trim().toUpperCase();
		task.logmsg(lvl, msg);
		java.lang.System.out.println("[" + lvl + "] " + msg);
	}
	
	return this;
}]]></parameter>
                </Script>
                <Script name="Diff">
                    <ModTime>1502368508560</ModTime>
                    <parameter name="script"><![CDATA[var usePath1 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile_adt";
var usePath2 = "AdapterKit/example jars/unpacked/ICBSJIRAAdapterProfile";
var useName = "targetProfile.json";

var jsdiff = new jsdiffObj();
result = jsdiff.diff(
	usePath1 + "/" + useName,
	usePath2 + "/" + useName
);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver_test">
            <ModTime>1729441627438</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ModTime>1499858465329</ModTime>
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[var tcb = system.newTCB();
var testEntry = system.newEntry();

tcb.setInitialWorkEntry(testEntry);

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","test");

// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("PagerDutyConnector","url", "https://api.pagerduty.com");
//tcb.setConnectorParameter("test","password", "Token token=ETZXRLSTVzVgeHBHaJyM");
tcb.setConnectorParameter("PagerDutyConnector","token", "3sY3HG8ThVyTvfuWSxao");
//tcb.setConnectorParameter("PagerDutyConnector","password", "test");

tcb.setTask(task);

main.startAL("Test Connection", tcb );]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver_recon">
            <ModTime>1729441627857</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ModTime>1499855741512</ModTime>
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[var tcb = system.newTCB();

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","search");
tcb.setALSetting("limit","40");
// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("PagerDutyConnector","url", "https://api.pagerduty.com");
tcb.setConnectorParameter("PagerDutyConnector","token", "3sY3HG8ThVyTvfuWSxao");

tcb.setTask(task);

main.startAL("Reconcile Accounts", tcb );]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver_modify">
            <ModTime>1729441627795</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ModTime>1499947801586</ModTime>
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[var tcb = system.newTCB();
var testEntry = system.newEntry();
var attr = system.newAttribute("erpagerdutyrole");
attr.setValue("observer");
//attr.setValue("user");
attr.setValueOper(0, com.ibm.di.entry.AttributeValue.AV_ADD);
//attr.setValueOper(0,com.ibm.di.entry.AttributeValue.AV_DELETE);

// The following attributes are required for all requests
testEntry.setAttribute("eruid","mukamble@in.ibm.com");
testEntry.setAttribute("erpagerdutyid","PKA17H3");
testEntry.setAttribute(attr);
// Uncomment any additional attributes you would like to process

//testEntry.setAttribute("erpassword","");
//testEntry.setAttribute("eraccountstatus","");
testEntry.setAttribute("erpagerdutyemail","mukamble@in.ibm.com");
testEntry.setAttribute("erpagerdutyname","Mukesh B. Kamble");
//testEntry.setAttribute("erpagerdutyjobtitle","Operations Manager");
//testEntry.setAttribute("erpagerdutyrole","observer");
//testEntry.setAttribute("erpagerdutyteams","CustOps");
tcb.setInitialWorkEntry(testEntry);

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","modify");
//tcb.setALSetting("OperationType","suspend");
//tcb.setALSetting("OperationType","restore");
//tcb.setALSetting("OperationType","changepassword");
//tcb.setALSetting("OperationType","validatepassword");

// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("PagerDutyConnector","url", "https://api.pagerduty.com");
tcb.setConnectorParameter("PagerDutyConnector","token", "ETZXRLSTVzVgeHBHaJyM");

tcb.setTask(task);

main.startAL("Modify Existing Account", tcb );]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver_delete">
            <ModTime>1729441627569</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ModTime>1499953533728</ModTime>
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[var tcb = system.newTCB();
var testEntry = system.newEntry();

// The following attributes are required for all requests
testEntry.setAttribute("erpagerdutyid","PXA4E5S");
tcb.setInitialWorkEntry(testEntry);

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","delete");

// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("PagerDutyConnector","url", "https://api.pagerduty.com");
tcb.setConnectorParameter("PagerDutyConnector","token", "ETZXRLSTVzVgeHBHaJyM");
//tcb.setConnectorParameter("PagerDutyConnector","password", "Token token=3sY3HG8ThVyTvfuWSxao");

tcb.setTask(task);

main.startAL("Delete an Account", tcb );]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver_create">
            <ModTime>1729441627454</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ModTime>1499930603010</ModTime>
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[var tcb = system.newTCB();
var testEntry = system.newEntry();

// The following attributes are required for all new accounts
testEntry.setAttribute("eruid","");

// Uncomment any additional attributes you would like to process
//testEntry.setAttribute("erpassword","");
//testEntry.setAttribute("eraccountstatus","");
//testEntry.setAttribute("erpagerdutyid","");
testEntry.setAttribute("erpagerdutyemail","mukamble@in.ibm.com");
testEntry.setAttribute("erpagerdutyname","Mukesh B. Kamble");
testEntry.setAttribute("erpagerdutyjobtitle","");
testEntry.setAttribute("erpagerdutyrole","user");
testEntry.setAttribute("erpagerdutyteams","");
tcb.setInitialWorkEntry(testEntry);

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","add");

// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("PagerDutyConnector","url", "https://api.pagerduty.com");
tcb.setConnectorParameter("PagerDutyConnector","token", "ETZXRLSTVzVgeHBHaJyM");

tcb.setTask(task);

main.startAL("Create New Account", tcb );]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="TestDriver">
            <ModTime>1729441627633</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="TestDriver" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="TestDriver">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var tcb = system.newTCB();

// Set the following values as appropriate. 
// These values will be accessed in the Assembly Line Prolog

tcb.setALSetting("OperationType","search");
tcb.setALSetting("CaseInSensitiveFilter","false");
tcb.setALSetting("groupContainerObjClass","RACFPROFILETYPE");
tcb.setALSetting("ContainerObjClasses","RACFPROFILETYPE");
tcb.setALSetting("GroupOClassOverride","racfGroup");
tcb.setALSetting("groupsContainerDN","");
tcb.setALSetting("HostNameUrl","");
tcb.setALSetting("LdapGroupRDN","racfid");
tcb.setALSetting("LdapMbrshipGrpAttrb","racfgroupuserids");
tcb.setALSetting("ldapSearchFilter","");
tcb.setALSetting("LdapUserRDN","racfid");
tcb.setALSetting("userContainerDN","");
tcb.setALSetting("userContainerObjClass","racfProfileType");
tcb.setALSetting("userOClassOverride","racfUser racfBaseCommon");

// Set the following connector values as appropriate.
// These values will be used by the named connector

tcb.setConnectorParameter("conRACFLDAPUser","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPUser","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPUser","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPUser","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPGroup","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPGroup","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPGroup","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPGroup","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPMembership","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPMembership","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPMembership","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPMembership","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPUserLookup","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPUserLookup","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPUserLookup","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPUserLookup","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPGroupLookup","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPGroupLookup","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPGroupLookup","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPGroupLookup","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPContainer","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPContainer","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPContainer","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPContainer","ldapUseSSL", "false");
tcb.setConnectorParameter("conRACFLDAPGroupContainer","ldapUrl", "ldap://localhost:389");
tcb.setConnectorParameter("conRACFLDAPGroupContainer","ldapUsername", "");
tcb.setConnectorParameter("conRACFLDAPGroupContainer","ldapPassword", "");
tcb.setConnectorParameter("conRACFLDAPGroupContainer","ldapUseSSL", "false");

tcb.setTask(task);

main.startAL("Reconcile Accounts", tcb );
]]></ConnectorScript>
                    <Parser/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="Test Connection">
            <ModTime>1729441627831</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499858564684</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="limit">1</parameter>
                        <parameter name="username">muralidk@in.ibm.com</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[processError();
work.setProperty(com.ibm.di.dispatcher.Defs.CACHE_CONNECTORS, "false");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script><![CDATA[work.removeAllAttributes();
setStatusSuccessful();
var attrToReturn = work.newAttribute(com.ibm.idm.dispatcher.StatusAttributeNames.ADAPTER_VERSION);
setAdpTestAttribute(attrToReturn,adapterVersion);
attrToReturn = work.newAttribute(com.ibm.idm.dispatcher.StatusAttributeNames.RESOURCE_STATUS);
setAdpTestAttribute(attrToReturn, com.ibm.idm.dispatcher.StatusAttributeNames.RESOURCE_STATUS_AVAILABLE);
attrToReturn = work.newAttribute(com.ibm.idm.dispatcher.StatusAttributeNames.ADAPTER_RESOURCE_STATUS_MSG);
setAdpTestAttribute(attrToReturn,"");
attrToReturn = work.newAttribute(com.ibm.idm.dispatcher.StatusAttributeNames.ADAPTER_CONNECTOR_VERSION);
setAdpTestAttribute(attrToReturn, thisConnector.connector.getParam("version"));
attrToReturn = work.newAttribute(com.ibm.idm.dispatcher.StatusAttributeNames.RESOURCE_VERSION);
setAdpTestAttribute(attrToReturn, thisConnector.connector.getParam("version"));]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
work.setProperty(com.ibm.di.dispatcher.Defs.CACHE_CONNECTORS, "false");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <LookupLimit>1</LookupLimit>
                </Connector>
                <Script name="DumpWorkEntry">
                    <ModTime>1499928490522</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toDeltaString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="Reconcile Accounts">
            <ModTime>1729441628034</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
//var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");
var gOperationType = "search";]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="PagerDutyConnector_groups" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499873593707</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="token">ETZXRLSTVzVgeHBHaJyM</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = "eruid=" + conn.getString("email");</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyemail</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>erpagerdutyemail</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.id</Script>
                            <Simple>erpagerdutyid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyjobtitle</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.job_title</Script>
                            <Simple>erpagerdutyjobtitle</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyname</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.name</Script>
                            <Simple>erpagerdutyname</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyrole</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.role</Script>
                            <Simple>erpagerdutyrole</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyteams</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.teams</Script>
                            <Simple>erpagerdutyteams</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eruid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>id</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = gITIMAccountObjectclass;</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>15d369a0555</Key>
                            <Attribute>id</Attribute>
                            <Operator>equals</Operator>
                            <Value>$erpagerdutyid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="addonly_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>addonly_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
id = thisConnector.connector.getParam("id");
work.erpagerdutyid=id;
log("id is : " + id);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Connector name="PagerDutyConnector_groups">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499878813748</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="token">ETZXRLSTVzVgeHBHaJyM</parameter>
                        <parameter name="type">groups</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>"erpagerdutyrole="+conn["erpagerdutyrole"];</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyrole</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>erpagerdutyrole</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>"erICBSPagerDutyRoleAccount"</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>15d369a0555</Key>
                            <Attribute>id</Attribute>
                            <Operator>equals</Operator>
                            <Value>$erpagerdutyid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="addonly_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>addonly_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
id = thisConnector.connector.getParam("id");
work.erpagerdutyid=id;
log("id is : " + id);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="DumpWorkEntry">
                    <ModTime>1499928994829</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toDeltaString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="PIMOULoader">
            <ModTime>1729441628034</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">ScriptLib</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script><![CDATA[rowNum=0;

var strTimeStamp = now;

report("\n\n\nSummary\n");
report("Input File Name: " + inFilePath + "\n");
report("Program Name: PIM OU Loader\n");
report("Date Run: " + strTimeStamp + "\n");
tlog("Total Count:"+count);
report("\n\n\n");

report("Total number of records processed: "+(count) + "\n");
report("Total number of records successful: "+(count-countErr) + "\n");
report("Total number of records skipped due to error: "+countErr + "\n");

closereport();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog</Name>
                    <Script><![CDATA[containerStr = system.getTDIProperty("pim.ou.container");

//erglobalid=00000000000000000000,ou=ibm,DC=COM
rootContainer = system.getTDIProperty("pim.ldap.searchbase");

//ou=orgChart,erglobalid=00000000000000000000,ou=ibm,DC=COM
orgChartContainer = "ou=orgChart," + rootContainer;

//ou=people,erglobalid=00000000000000000000,ou=ibm,DC=COM
usercontainer = "ou=people," +  rootContainer;
parentDN = findContainerDN(pimldap, containerStr);

tlog(parentDN);
//ldapname = new javax.naming.ldap.LdapName(orgChartContainer);
//ldapname.remove(ldapname.getRdns().size() - 1);

//ou=people,erglobalid=00000000000000000000,ou=ibm,DC=COM
//usercontainer = "ou=people," + ldapname.toString();
//pimldap.setParam("ldapSearchBase", usercontainer);

tlog(usercontainer);

var inFilePath = system.getTDIProperty("pim.role.input.filepath");
tlog("DEBUG", "**pim.role.input.filepath:" + inFilePath);

var string_date = now;
tlog("time: "+ now);

report("Role Description, Role Owner");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[//Count for Records
count=0;

//count for retrieving result
countOK = 0;

//error count
countErr = 0;]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="FindOwner" state="Enabled"/>
                    <Component name="PIM LDAPConnector" state="Simulated"/>
                    <Component name="RoleInputFile" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="RoleInputFile">
                    <InheritFrom>/Connectors/RoleInputFile</InheritFrom>
                    <ModTime>1503335505976</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>RoleDescription</Name>
                            <Type>simple</Type>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>RoleOwner</Name>
                            <Type>simple</Type>
                            <Simple>Role Owner</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="FindOwner">
                    <ModTime>1503403209400</ModTime>
                    <parameter name="script"><![CDATA[count++;

var owner = work.getString("RoleOwner");
var role = work.getString("RoleDescription");

var csvRow = role + "," + owner;
tlog("DEBUG","#Row" + count + " csvInputRow='" + csvRow + "'");

e = pimldap.findEntry("uid", owner);

if (e == null) {	
	errormsg = "Error: unable to locate owner '" + owner + "' for role '" + role + "'";
	tlog("ERROR", errormsg);	
	report("ERROR", errormsg);
	countErr++;
	
	system.skipEntry();
}

ownerDN = e.getString("$dn");
tlog("ownerDN=" + ownerDN);

//erglobalid = createGlobalID();
erglobalid = createUniqueGlobalID(pimldap);
dn = "erglobalid=" + erglobalid + "," + orgChartContainer;
tlog("dn=" + dn);]]></parameter>
                </Script>
                <Connector name="PIM LDAPConnector">
                    <InheritFrom>/Connectors/PIM LDAPConnector</InheritFrom>
                    <ModTime>1503403178666</ModTime>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                        <parameter name="ldapSearchFilter">ou=*</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Script>dn</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eradministrator</Name>
                            <Type>advanced</Type>
                            <Script>ownerDN</Script>
                            <Simple>eradministrator</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erglobalid</Name>
                            <Type>advanced</Type>
                            <Script>erglobalid</Script>
                            <Simple>erglobalid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erparent</Name>
                            <Type>advanced</Type>
                            <Script>parentDN</Script>
                            <Simple>erparent</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Script>["top", "SecurityDomain", "erSecurityDomainItem", "erManagedItem"]</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>ou</Name>
                            <Type>advanced</Type>
                            <Script>work.RoleDescription</Script>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15e04f81b8a</Key>
                            <Attribute>ou</Attribute>
                            <Operator>equals</Operator>
                            <Value>$RoleDescription</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_add">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_add</Name>
                            <Script><![CDATA[jsonMsg = work.toJSON();
resultmsg = "Added ou " + jsonMsg.replaceAll(",", ";");

tlog("Added ou " + resultmsg);

report(work.RoleDescription + "," + work.RoleOwner);
countOK++;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_initialize</Name>
                            <Script>var pimldap = thisConnector.connector;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_modify">
                            <Name>after_modify</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[tlog("ERROR", "Error adding ou\n"
		+ error.toJSON()
		+ work.toJSON()
);

jsonMsg = error.toJSON() + work.toJSON();
errormsg = "Error: unable adding ou=" + jsonMsg.replaceAll(",", ";");

//errormsg = "Error: unable adding ou=" + error.toJSON() + work.toJSON();

report("ERROR", errormsg);
countErr++;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="override_modify">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>override_modify</Name>
                            <Script><![CDATA[tlog("Role ou already exists!\n"
		+ work.toJSON()
);

jsonMsg = work.toJSON();
errormsg = "Error: Role ou already exists!" + jsonMsg.replaceAll(",", ";");

report("ERROR", errormsg);
countErr++;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_multiple</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="PIMOULoader 20170822 0622">
            <ModTime>1729441628018</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">ScriptLib</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script><![CDATA[rowNum=0;
while((work=RoleInputFile_1.getnext()) != null){
	error=false;
	roleDescription = work.getString("RoleDescription");
	roleOwner = work.getString("RoleOwner");

	csvRow = roleDescription + "," + roleOwner
	
	resultMsg = resultArray[rowNum];
	tlog("DEBUG", resultMsg);

	if (resultMsg.contains("Error: ")) {	
		tmpMsg = "FAILED";
	}
	else {
		tmpMsg = "SUCCESS";
		//log.write("SUCCESS, " + resultMsg + "\"," + csvRow);
	}
	outMsg = tmpMsg + ", " + resultMsg + "," + csvRow;
	log.newLine();	
	log.write(outMsg);
	rowNum++;
}	

var date = new java.util.Date();
var tstamp = new java.sql.Timestamp( date.getTime() );// Get the timestamp
var strTimeStamp = tstamp.toString();

log.newLine();
log.newLine();
log.newLine();
log.write("Summary");

log.newLine();
log.write("Input File Name: " + inFilePath);
log.newLine();
log.write("Program Name: PIM OU Loader");
log.newLine();
log.write("Date Run: " + strTimeStamp);
log.newLine();
tlog("Total Count:"+count);
log.newLine();
log.newLine();
log.newLine();

log.write("Total number of records processed: "+(count));
log.newLine();
log.write("Total number of records successful: "+(count-countErr));
log.newLine();
log.write("Total number of records skipped due to error: "+countErr);
log.newLine();

log.close();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog</Name>
                    <Script><![CDATA[containerStr = system.getTDIProperty("pim.ou.container");

//erglobalid=00000000000000000000,ou=ibm,DC=COM
rootContainer = system.getTDIProperty("pim.ldap.searchbase");

//ou=orgChart,erglobalid=00000000000000000000,ou=ibm,DC=COM
orgChartContainer = "ou=orgChart," + rootContainer;

//ou=people,erglobalid=00000000000000000000,ou=ibm,DC=COM
usercontainer = "ou=people," +  rootContainer;
parentDN = findContainerDN(pimldap, containerStr);

tlog(parentDN);
//ldapname = new javax.naming.ldap.LdapName(orgChartContainer);
//ldapname.remove(ldapname.getRdns().size() - 1);

//ou=people,erglobalid=00000000000000000000,ou=ibm,DC=COM
//usercontainer = "ou=people," + ldapname.toString();
//pimldap.setParam("ldapSearchBase", usercontainer);

tlog(usercontainer);

var inFilePath = system.getTDIProperty("pim.role.input.filepath");
tlog("DEBUG", "**pim.role.input.filepath:" + inFilePath);

var outFilePath = system.getTDIProperty("pim.role.output.filepath");
tlog("DEBUG", "**pim.role.output.filepath:" + outFilePath);

var calendar = new java.util.GregorianCalendar();
var dateToday = calendar.get(java.util.Calendar.DATE);
var month = calendar.get(java.util.Calendar.MONTH) + 1;
var year = calendar.get(java.util.Calendar.YEAR);
var twoDigitYear = year % 100;

var string_date = dateToday;

if (dateToday <= 9)
{
	string_date = "0" + dateToday;
}

var string_month = month;

if (month <= 9)
{
	string_month = "0" + month;
}
// Generate a timestamp
var TIMESTAMP = "yyyyMMddHHmmss";
var sdf = new java.text.SimpleDateFormat(TIMESTAMP);
var time = sdf.format(calendar.getTime());
tlog("time:"+ sdf.format(calendar.getTime()));

outFileFullPath = outFilePath + "_" + time + ".csv";
tlog("DEBUG", "outFileFullPath: " + outFileFullPath);
var log = system.openFileForAppend(outFileFullPath);

log.write("Status");
log.write(",");
log.write("Result Summary");
log.write(",");

log.write("Role Description");
log.write(",");
log.write("Role Owner");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[//Count for Records
count=0;

//count for retrieving result
countOK = 0;

//error count
countErr = 0;

//HREF array to store HREF
resultArray = new Array();

//Array which contain error details for each input record
errorDetaisArray = new Array();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="FindOwner" state="Enabled"/>
                    <Component name="PIM LDAPConnector" state="Simulated"/>
                    <Component name="Script" state="Enabled"/>
                    <Component name="RoleInputFile_1" state="Enabled"/>
                    <Component name="RoleInputFile" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="RoleInputFile">
                    <InheritFrom>/Connectors/RoleInputFile</InheritFrom>
                    <ModTime>1503335505976</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>RoleDescription</Name>
                            <Type>simple</Type>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>RoleOwner</Name>
                            <Type>simple</Type>
                            <Simple>Role Owner</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="FindOwner">
                    <ModTime>1503346428664</ModTime>
                    <parameter name="script"><![CDATA[var owner = work.getString("RoleOwner");
var role = work.getString("RoleDescription");

var csvRow = role + "," + owner;
tlog("DEBUG","#Row" + count + " csvInputRow='" + csvRow + "'");

e = pimldap.findEntry("uid", owner);

if (e == null) {
	
	errormsg = "Error: unable to locate owner '" + owner + "' for role '" + role + "'";
	tlog("ERROR", errormsg);
	
	resultArray[count] = errormsg;
	count++;
	countErr++;
	
	system.skipEntry();
}

ownerDN = e.getString("$dn");
tlog("ownerDN=" + ownerDN);

//erglobalid = createGlobalID();
erglobalid = createUniqueGlobalID(pimldap);
dn = "erglobalid=" + erglobalid + "," + orgChartContainer;
tlog("dn=" + dn);]]></parameter>
                </Script>
                <Connector name="PIM LDAPConnector">
                    <InheritFrom>/Connectors/PIM LDAPConnector</InheritFrom>
                    <ModTime>1503349199957</ModTime>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                        <parameter name="ldapSearchFilter">ou=*</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Script>dn</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eradministrator</Name>
                            <Type>advanced</Type>
                            <Script>ownerDN</Script>
                            <Simple>eradministrator</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erglobalid</Name>
                            <Type>advanced</Type>
                            <Script>erglobalid</Script>
                            <Simple>erglobalid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erparent</Name>
                            <Type>advanced</Type>
                            <Script>parentDN</Script>
                            <Simple>erparent</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Script>["top", "SecurityDomain", "erSecurityDomainItem", "erManagedItem"]</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>ou</Name>
                            <Type>advanced</Type>
                            <Script>work.RoleDescription</Script>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15e04f81b8a</Key>
                            <Attribute>ou</Attribute>
                            <Operator>equals</Operator>
                            <Value>$RoleDescription</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_add">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_add</Name>
                            <Script><![CDATA[jsonMsg = work.toJSON();
resultmsg = "Added ou " + jsonMsg.replaceAll(",", ";");

tlog("Added ou " + resultmsg);

resultArray[count] = resultmsg;
countOK++;
count++;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_initialize</Name>
                            <Script>var pimldap = thisConnector.connector;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_modify">
                            <Name>after_modify</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[tlog("ERROR", "Error adding ou\n"
		+ error.toJSON()
		+ work.toJSON()
);

jsonMsg = error.toJSON() + work.toJSON();
errormsg = "Error: unable adding ou=" + jsonMsg.replaceAll(",", ";");

//errormsg = "Error: unable adding ou=" + error.toJSON() + work.toJSON();

resultArray[count] = errormsg;
countErr++;
count++]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="override_modify">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>override_modify</Name>
                            <Script><![CDATA[tlog("Role ou already exists!\n"
		+ work.toJSON()
);

jsonMsg = work.toJSON();
errormsg = "Error: Role ou already exists!" + jsonMsg.replaceAll(",", ";");

resultArray[count] = errormsg;
countErr++;
count++]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_multiple</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Script">
                    <ModTime>1503336721365</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script"><![CDATA[tlog("Role ou already exists!\n"
		+ work.toJSON()
);]]></parameter>
                </Script>
                <Connector name="RoleInputFile_1">
                    <InheritFrom>/Connectors/RoleInputFile</InheritFrom>
                    <ModTime>1503348038500</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>RoleDescription</Name>
                            <Type>simple</Type>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>RoleOwner</Name>
                            <Type>simple</Type>
                            <Simple>Role Owner</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="PIMOULoader 20170821 1236">
            <ModTime>1729441628052</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">ScriptLib</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog</Name>
                    <Script><![CDATA[containerStr = system.getTDIProperty("pim.ou.container");
rootContainer = system.getTDIProperty("pim.ldap.searchbase");

//ou=orgChart,erglobalid=00000000000000000000,ou=ibm,DC=COM
orgChartContainer = "ou=orgChart," + rootContainer;

usercontainer = "ou=people," +  rootContainer;
parentDN = findContainerDN(pimldap, containerStr);

tlog(parentDN);
//ldapname = new javax.naming.ldap.LdapName(orgChartContainer);
//ldapname.remove(ldapname.getRdns().size() - 1);

//ou=people,erglobalid=00000000000000000000,ou=ibm,DC=COM
//usercontainer = "ou=people," + ldapname.toString();
//pimldap.setParam("ldapSearchBase", usercontainer);

tlog(usercontainer);]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[//Count for Records
count=0;]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="FindOwner" state="Enabled"/>
                    <Component name="PIM LDAPConnector" state="Simulated"/>
                    <Component name="Script" state="Enabled"/>
                    <Component name="RoleInputFile" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="RoleInputFile">
                    <InheritFrom>/Connectors/RoleInputFile</InheritFrom>
                    <ModTime>1503335505976</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>RoleDescription</Name>
                            <Type>simple</Type>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>RoleOwner</Name>
                            <Type>simple</Type>
                            <Simple>Role Owner</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="FindOwner">
                    <ModTime>1503337195640</ModTime>
                    <parameter name="script"><![CDATA[count++;

var owner = work.getString("RoleOwner");
var role = work.getString("RoleDescription");

var csvRow = role + "," + owner;
tlog("DEBUG","#Row" + count + " csvInputRow='" + csvRow + "'");

e = pimldap.findEntry("uid", owner);

if (e == null) {
	tlog("ERROR", "Can not find ower '" + owner + "' for role '" + role + "'");
	system.skipEntry();
}

ownerDN = e.getString("$dn");
tlog("ownerDN=" + ownerDN);

erglobalid = createGlobalID();
dn = "erglobalid=" + erglobalid + "," + orgChartContainer;
tlog("dn=" + dn);]]></parameter>
                </Script>
                <Connector name="PIM LDAPConnector">
                    <InheritFrom>/Connectors/PIM LDAPConnector</InheritFrom>
                    <ModTime>1503336923588</ModTime>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                        <parameter name="ldapSearchFilter">ou=*</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Script>dn</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eradministrator</Name>
                            <Type>advanced</Type>
                            <Script>ownerDN</Script>
                            <Simple>eradministrator</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erglobalid</Name>
                            <Type>advanced</Type>
                            <Script>erglobalid</Script>
                            <Simple>erglobalid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erparent</Name>
                            <Type>advanced</Type>
                            <Script>parentDN</Script>
                            <Simple>erparent</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Script>["top", "SecurityDomain", "erSecurityDomainItem", "erManagedItem"]</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>ou</Name>
                            <Type>advanced</Type>
                            <Script>work.RoleDescription</Script>
                            <Simple>Role Description</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15e04f81b8a</Key>
                            <Attribute>ou</Attribute>
                            <Operator>equals</Operator>
                            <Value>$RoleDescription</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_add">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_add</Name>
                            <Script>tlog("Added ou " + conn.toJSON());</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_initialize</Name>
                            <Script>var pimldap = thisConnector.connector;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_modify">
                            <Name>after_modify</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[tlog("ERROR", "Error adding ou\n"
		+ error.toJSON()
		+ work.toJSON()
);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="override_modify">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>override_modify</Name>
                            <Script><![CDATA[tlog("Role ou already exists!\n"
		+ work.toJSON()
);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_multiple</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="Script">
                    <ModTime>1503336721365</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script"><![CDATA[tlog("Role ou already exists!\n"
		+ work.toJSON()
);]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="Modify Existing Account">
            <ModTime>1729441627820</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499948196558</ModTime>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="token">ETZXRLSTVzVgeHBHaJyM</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = "eruid=" + conn.getString("email");</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyemail</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>erpagerdutyemail</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.id</Script>
                            <Simple>erpagerdutyid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyjobtitle</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.job_title</Script>
                            <Simple>erpagerdutyjobtitle</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyname</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.name</Script>
                            <Simple>erpagerdutyname</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyrole</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.role</Script>
                            <Simple>erpagerdutyrole</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyteams</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.teams</Script>
                            <Simple>erpagerdutyteams</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eruid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>id</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = gITIMAccountObjectclass;</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>15d369a0555</Key>
                            <Attribute>id</Attribute>
                            <Operator>equals</Operator>
                            <Value>$erpagerdutyid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="addonly_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>addonly_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
id = thisConnector.connector.getParam("id");
work.erpagerdutyid=id;
log("id is : " + id);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_ok</Name>
                            <Script><![CDATA[work.removeAllAttributes();
var change = thisConnector.connector.getParam("change");
if(change=="false"){
	var id = thisConnector.connector.getParam("failedRoleRemoval");
	var errmsg = thisConnector.connector.getParam("errmsg");
	setStatusWarning(errmsg,id);
	work["erpagerdutyrole"] = id;
	work["erpagerdutyrole"].setValueOper(0,com.ibm.di.entry.AttributeValue.AV_UNCHANGED);				
}else 
if (change == "add"){
	id = thisConnector.connector.getParam("id");
	work.erpagerdutyid=id;
	setStatusSuccessful();
} else 
{
	setStatusSuccessful();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="DumpWorkEntry">
                    <ModTime>1499943233636</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toDeltaString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="IGIQEV-3">
            <ModTime>1729441627616</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">false</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog2</Name>
                    <Script><![CDATA[var stats = task.getStats();

report_out.newLine();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.write("********IGIQEV-3******** ");
report_out.newLine();
report_out.newLine();
report_out.write("Number of entries read            : " + stats.numGet());report_out.newLine();report_out.newLine();
report_out.write("Number of new entries written     : " + stats.numAdd());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries modified    : " + stats.numModify());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries suspended   : " + stats.numDelete());report_out.newLine();report_out.newLine();
report_out.write("Number of entries skipped         : " + stats.numSkipped());report_out.newLine();report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.newLine();

var calendar2 = new java.util.GregorianCalendar();
var endDate = calendar2.getTime();
var dateStr = system.formatDate(endDate, "EEE, d MMM yyyy");
var timeStr = system.formatDate(endDate, "HH:mm:ss aaa");
report_out.write("DATE : " + dateStr);report_out.newLine();
report_out.write("End Run : " + timeStr);report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();
report_out.write("------------------------IGIQEV-3 REPORT----------------------");
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();report_out.newLine();report_out.newLine();report_out.newLine();

report_out.close();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onsuccess">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>onsuccess</Name>
                    <Script>task.logmsg("[Report location] - "+report_loc)</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var sdf = new java.text.SimpleDateFormat("yyyyMMddHHmmss");
var date = new Date();
var today = sdf.format(date);

var reportFilePath = system.getExternalProperty("QEV03ReportFilePath");
var reportFileName = system.getExternalProperty("ReportFileNameQEV03");
var report_out = new java.io.BufferedWriter(new java.io.FileWriter(reportFilePath+"//"+reportFileName+"-"+today+".txt"));
var report_loc = reportFilePath+"//"+reportFileName+"-"+today+".txt"
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================IGIQEV-3=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="IGIQEV3_Output" state="Simulated"/>
                    <Component name="IGIQEV_Lookup" state="Enabled"/>
                    <Component name="IGIQEV3_Input" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="ConsoleAppender">
                    <InheritFrom>system:/Loggers/ibmdi.ConsoleAppender</InheritFrom>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p %m%n</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">@SUBSTITUTE{property.GIAMAIslandQEV:LogLevel}</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="IGIQEV3_Input">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1488360858655</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV02FilePath}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{property.IGIBPSync:characterSet}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>Common Name</Name>
                            <Type>simple</Type>
                            <Simple>Common Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Company Name</Name>
                            <Type>simple</Type>
                            <Simple>Company Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Department Number</Name>
                            <Type>simple</Type>
                            <Simple>Department Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Division</Name>
                            <Type>simple</Type>
                            <Simple>Division</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Email Address</Name>
                            <Type>simple</Type>
                            <Simple>Email Address</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Employee Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Status Action</Name>
                            <Type>simple</Type>
                            <Simple>Employee Status Action</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>First Name</Name>
                            <Type>simple</Type>
                            <Simple>First Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Last Name</Name>
                            <Type>simple</Type>
                            <Simple>Last Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Manager Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Manager Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Middle Initial</Name>
                            <Type>simple</Type>
                            <Simple>Middle Initial</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Mobile Phone Number</Name>
                            <Type>simple</Type>
                            <Simple>Mobile Phone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Telephone Number</Name>
                            <Type>simple</Type>
                            <Simple>Telephone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>UID</Name>
                            <Type>simple</Type>
                            <Simple>UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Work Location</Name>
                            <Type>simple</Type>
                            <Simple>Work Location</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erlocale</Name>
                            <Type>simple</Type>
                            <Simple>erlocale</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing IGIQEV3_Input");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while reading IGIQEV-3 input file");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIQEV-3 " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-3 " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading QEV input file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>end_of_data</Name>
                            <Script><![CDATA[error_work = system.newEntry();

status = "Success"
message= ("IGIQEV-3 file read completed");

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-3 file read completed " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================End of Data=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="IGIQEV3_Output">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1488360890764</ModTime>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV3FilePath}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{property.IGIBPSync:characterSet}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                        <parameter name="csvColumns">@SUBSTITUTE{property.IGIBPSync:QEVCsvOrder}</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_add">
                            <Name>after_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>after_initialize</Name>
                            <Script><![CDATA[/*
 * personArray
 */
var personArray = new Array();
var entry = system.newEntry();
//task.logmsg("-----------------");

IGIQEV_Lookup.connector.selectEntries();
entry=IGIQEV_Lookup.connector.getNextEntry();

while (entry != null) {
	personArray.push(entry);
    entry = IGIQEV_Lookup.connector.getNextEntry();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_close">
                            <Name>before_close</Name>
                            <Script><![CDATA[/*
 * case3. work × personArray ○: Delete(Ignore) (see BeforeClose)
 * を追記する
 * personArray[i].setAttribute("Employee Status Action","DUMMY") によって
 * "DUMMY"を指定していない全ての Personが該当する。
 * 
 */

task.logmsg("-----personArray (beforeClose)"+personArray);
task.logmsg("-----personArray.length:"+personArray.length);
for (i=0; i<personArray.length ; i++) {
	if (personArray[i].getString("Employee Status Action") == "DUMMY") {
		task.logmsg("DEBUG","skip Employee Number:"+personArray[i].getString("Employee Number"));
	} else {
		//case3 work × personArray ○
		task.logmsg("INFO","A Employee Number:"+personArray[i].getString("Employee Number"));
		personArray[i].setAttribute("Employee Status Action","A");
		thisConnector.connector.putEntry(personArray[i]);
	}	
}	//		for (i=0; i<personArray.length ; i++)g]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_execute</Name>
                            <Script><![CDATA[/* 
 * case1. I work○ personArray×: Inactive
 * case2. M work○ personArray○: Mod & Delete from personArray
 * case2' Employee Status Action=I-->M : WARNING Message
 * case3. A work× personArray○: Add (BeforeClose hook)
 * case4. work × personArray ×: nothing 
 *  
 */

for (i=0; i<personArray.length ; i++) {
	var dupcheck=0;
   if (work.getString("Employee Number") == personArray[i].getString("Employee Number")) {
		//case2 M work ○ personArray ○
		//Mod & Delete from personArray
		task.logmsg("INFO","M Employee Number:"+work.getString("Employee Number"));

		dupcheck=1;

		// check case2'.Employee Status Action="I" or not 
		if (work.getString("Employee Status Action") == "I" ) {
			task.logmsg("WARN","I-->M Employee Number:"+work.getString("Employee Number"));
		}

		//personArray.splice(i,1);
		work.setAttribute("Employee Status Action","M");
		personArray[i].setAttribute("Employee Status Action","DUMMY");

		break;
	}

}	//		for (i=0; i<personArray.length ; i++)

//case1 work○ personArray ×
//Inactive
if (dupcheck == 0) {
	task.logmsg("INFO","I Employee Number:"+work.getString("Employee Number"));
	work.setAttribute("Employee Status Action","I");
}
//task.logmsg("---(beforeExec)--personArray"+personArray);
//task.logmsg("---(beforeExec)--personArray.length:"+personArray.length);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing IGIQEV3_Output");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while reading IGIQEV-3 input file");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIQEV-3 " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-3 " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading QEV input file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="override_add">
                            <Name>override_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="IGIQEV_Lookup">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1488360915748</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV00FilePath}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{property.IGIBPSync:characterSet}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing IGIQEV_Lookup");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading QEV input file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="IGIQEV-2">
            <ModTime>1729441628066</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog2</Name>
                    <Script><![CDATA[var stats = task.getStats();

report_out.newLine();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.write("********IGIQEV-2******** ");
report_out.newLine();
report_out.newLine();
report_out.write("Number of entries read            : " + stats.numGet());report_out.newLine();report_out.newLine();
report_out.write("Number of new entries written     : " + stats.numAdd());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries modified    : " + stats.numModify());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries suspended   : " + stats.numDelete());report_out.newLine();report_out.newLine();
report_out.write("Number of entries skipped         : " + stats.numSkipped());report_out.newLine();report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.newLine();

var calendar2 = new java.util.GregorianCalendar();
var endDate = calendar2.getTime();
var dateStr = system.formatDate(endDate, "EEE, d MMM yyyy");
var timeStr = system.formatDate(endDate, "HH:mm:ss aaa");
report_out.write("DATE : " + dateStr);report_out.newLine();
report_out.write("End Run : " + timeStr);report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();
report_out.write("------------------------IGIQEV-2----------------------");
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();report_out.newLine();report_out.newLine();report_out.newLine();

report_out.close();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onsuccess">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>onsuccess</Name>
                    <Script>task.logmsg("[Report location] - "+report_loc)</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var sdf = new java.text.SimpleDateFormat("yyyyMMddHHmmss");
var date = new Date();
var today = sdf.format(date);

var reportFilePath = system.getExternalProperty("QEV02ReportFilePath");
var reportFileName = system.getExternalProperty("ReportFileNameQEV02");
var report_out = new java.io.BufferedWriter(new java.io.FileWriter(reportFilePath+"//"+reportFileName+"-"+today+".txt"));
var report_loc = reportFilePath+"//"+reportFileName+"-"+today+".txt"
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================IGIQEV-2=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CheckData" state="Enabled"/>
                    <Component name="IfBluePageUser" state="Enabled"/>
                    <Component name="LookUpBP" state="Enabled"/>
                    <Component name="IGIQEV2-output" state="Simulated"/>
                    <Component name="IGIQEV2_input" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="IGIQEV2_input">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1496235389123</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV01FilePath}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>Common Name</Name>
                            <Type>simple</Type>
                            <Simple>Common Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Company Name</Name>
                            <Type>simple</Type>
                            <Simple>Company Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Department Number</Name>
                            <Type>simple</Type>
                            <Simple>Department Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Division</Name>
                            <Type>simple</Type>
                            <Simple>Division</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Email Address</Name>
                            <Type>simple</Type>
                            <Simple>Email Address</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Employee Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Status Action</Name>
                            <Type>simple</Type>
                            <Simple>Employee Status Action</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>First Name</Name>
                            <Type>simple</Type>
                            <Simple>First Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>IsManager</Name>
                            <Type>simple</Type>
                            <Simple>IsManager</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>LastName</Name>
                            <Type>advanced</Type>
                            <Script>conn["Last Name"]</Script>
                            <Simple>LastName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Manager Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Manager Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Middle Initial</Name>
                            <Type>simple</Type>
                            <Simple>Middle Initial</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Mobile Phone Number</Name>
                            <Type>simple</Type>
                            <Simple>Mobile Phone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Telephone Number</Name>
                            <Type>simple</Type>
                            <Simple>Telephone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>UID</Name>
                            <Type>simple</Type>
                            <Simple>UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Work Location</Name>
                            <Type>simple</Type>
                            <Simple>Work Location</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erlocale</Name>
                            <Type>simple</Type>
                            <Simple>erlocale</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Type</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Is Manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IsManager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>UID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Type</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Is Manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IsManager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Last Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>UID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing IGIQEV2_Input");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while reading IGIQEV-2 input file");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIQEV-2 " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-2 " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading QEV input file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>end_of_data</Name>
                            <Script><![CDATA[error_work = system.newEntry();

status = "Success"
message= ("IGIQEV-2 file read completed");

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-2 file read completed " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================End of Data=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="CheckData">
                    <ModTime>1488186227580</ModTime>
                    <parameter name="enabled">false</parameter>
                    <parameter name="script">task.dumpEntry(work);</parameter>
                </Script>
                <Branch name="IfBluePageUser">
                    <ModTime>1488193703611</ModTime>
                    <Connector name="LookUpBP">
                        <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
                        <ModTime>1488193703611</ModTime>
                        <ConnectorMode>Lookup</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="ldapSearchBase">@SUBSTITUTE{property.IGIBPSync:BluePageSerachBase}</parameter>
                            <parameter name="ldapSearchFilter">@SUBSTITUTE{property.IGIBPSync:BluePageSearchFilter}</parameter>
                            <parameter name="ldapSearchScope">@SUBSTITUTE{property.IGIBPSync:BluePageSearchScope}</parameter>
                            <parameter name="ldapUrl">@SUBSTITUTE{property.IGIBPSync:BluePageLDAPUrl}</parameter>
                            <parameter name="ldapUseSSL">true</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>/AttributeMaps/LookUpBluePage_InputMap</InheritFrom>
                            <AttributeMapItem>
                                <Name>BPemployeeType</Name>
                                <Type>simple</Type>
                                <Simple>employeeType</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>$dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>accessHint</Name>
                                <NativeSyntax>MAY/DN/DN pointer to an accessRole or accessGroup.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>accountHint</Name>
                                <NativeSyntax>MAY/DN/DN pointer to an account directory object.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>additional</Name>
                                <NativeSyntax>MAY/Directory String{256}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>administrator</Name>
                                <NativeSyntax>MAY/Directory String{32}/Administrator of entry</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateAddress1</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateAddress2</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateLocalityName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateNode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute - Employee Alternate Node</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatePostalCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{40}/Postal code.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateSt</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/BPR3 Addition - This attribute contains the alternate full name of a state or province (alternateStateOrProvinceName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateTelephoneNumber</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateTieline</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>area</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>audio</Name>
                                <NativeSyntax>MAY/Binary/Contains a sound file in binary format.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backup</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{1000}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>bluepagesNotesIdError</Name>
                                <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>buildingName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Defines the building name associated with the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>businessCategory</Name>
                                <NativeSyntax>MAY/Directory String/This attribute describes the kind of business performed by an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>c</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains a two-letter ISO 3166 country code (countryName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupDateTime</Name>
                                <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>carLicense</Name>
                                <NativeSyntax>MAY/Directory String/vehicle license plate tag</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cellServiceProvider</Name>
                                <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cn</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/String/This is the X.500 commonName attribute, which contains a name of an object.  If the object corresponds to a person, it is typically the persons full name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>co</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Contains the name of a country. Often, the country attribute is used to describe a two-character code for a country, and  the friendlyCountryName attribute is used to describe the actual country name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>configPtr</Name>
                                <NativeSyntax>MAY/DN/DN pointer to a cimConfiguration-derived directory entry such as an ePropertySet.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorCompany</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorRecordExpiration</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>coreDataIntegrity</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{32}/Indicator of whether core attributes are trusted</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costCenter</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{14}/2 character ISO country code, followed by the existing account department.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costCenterEffectiveDate</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Cost Center Effective Date - Blue Harmony</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>deleter</Name>
                                <NativeSyntax>MAY/Directory String{240}/Exploiter DN of delete requester</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>department</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{256}/DN of department entry</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>departmentNumber</Name>
                                <NativeSyntax>MAY/Directory String/identifies a department within an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dept</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Department Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>description</Name>
                                <NativeSyntax>MAY/Directory String{1024}/Attribute common to CIM and LDAP schema to provide lengthy description of a directory object entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>destinationIndicator</Name>
                                <NativeSyntax>MAY/Directory String/This attribute is used for the telegram service.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>directoryAlias</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>displayName</Name>
                                <NativeSyntax>MAY/Directory String/A name used in displaying an entry in a one-line summary list.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>div</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Division Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>divDept</Name>
                                <NativeSyntax>MAY/DN{128}/Custom - Blue Pages Attribute - HR Sourced</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>emailAddress</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Employee Personel Systems Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeNumber</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entrys employee number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeType</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Identifies the entrys type of employment.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>entryType</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Bluepages - Used to identify special entry types such as a test ID</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimileTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the fax number at which the entry can be reached.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimileTieline</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>floor</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Floor location.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>generationQualifier</Name>
                                <NativeSyntax>MAY/String/Contains the part of the name which typically is the suffix, as in IIIrd.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>givenName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>glTeamLead</Name>
                                <NativeSyntax>MAY/DN{64}/Global Extended Team Leader</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword1</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword2</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword3</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword4</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword5</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homeFax</Name>
                                <NativeSyntax>MAY/Telephone Number/Identifies the entrys home fax number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homePhone</Name>
                                <NativeSyntax>MAY/Telephone Number/Identifies the entrys home phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homePostalAddress</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entrys home mailing address. This field is  intended to include multiple lines, but each line within the  entry should be separated by a dollar sign (\24). To represent  an actual dollar sign (\24) or backslash (\) within this text, use  the escaped hex values \24 and \5c respectively.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrActive</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Active/Inactive Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrAssignee</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM International Assignee In/Out Indicator</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrAssignment</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM International assignment indicator</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCompanyCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/ODM HRIW Company code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCountryCode</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM ISO 3166 Country Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrDepartment</Name>
                                <NativeSyntax>MAY/Directory String{32}/ODM Career Department ID</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrDivision</Name>
                                <NativeSyntax>MAY/Directory String{32}/ODM Division Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrEmployeeType</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Employee type</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrFamilyName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Family name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrFirstName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM First name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrInitial</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Initials</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrLastName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Last name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerIndicator</Name>
                                <NativeSyntax>MAY/Directory String{32}/Is-manager status in ODM</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerPSC</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Manager PSC</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerSerial</Name>
                                <NativeSyntax>MAY/IA5 String{16}/ODM Manager Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrMiddleName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Middle name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrgUnitCode</Name>
                                <NativeSyntax>MAY/Directory String{10}/Similar to a department, but can contain employees from multiple countries.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrganizationCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/HR organization code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOtherName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Other name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrPSC</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM PSC</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrPreferredName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Preferred first name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrSerialNumber</Name>
                                <NativeSyntax>MAY/IA5 String{240}/ODM Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - IBM Location Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>infoTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>initials</Name>
                                <NativeSyntax>MAY/String/The initials attribute contains the initials of some or all of an individuals names, but not the surname(s).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalEmail</Name>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalMailDrop</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internationalISDNNumber</Name>
                                <NativeSyntax>MAY/IA5 String/Contains the ISDN number of the entry. This is in the internationally agreed format for ISDN addresses given in CCITT Rec. E. 164.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>invalidManagerDate</Name>
                                <NativeSyntax>MAY/Directory String{8}/DRMS Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ipTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/IP Telephony Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>isManager</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/BluePages - Manager Identifier</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>isNonExpiring</Name>
                                <NativeSyntax>MAY/Directory String{10}/Password isNonExpiring status (true false expired)</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jobResponsibilities</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jpegPhoto</Name>
                                <NativeSyntax>MAY/Binary/Contains a JPEG photo of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>l</Name>
                                <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>labeledURI</Name>
                                <NativeSyntax>MAY/Directory String/Uniform Resource Identifier with optional label as defined in RFC2079.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>locationCity</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mail</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Identifies a users primary email address (the email address retrieved and displayed by white-pages lookup applications).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>manager</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{1000}/Identifies the distinguished name of the entrys manager.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Personel System Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>middleInitial</Name>
                                <NativeSyntax>MAY/Directory String{32}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>middleName</Name>
                                <NativeSyntax>MAY/String/Identifies the entrys middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mobile</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys mobile or cellular phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>nativeFirstName</Name>
                                <NativeSyntax>MAY/String/BluePages - First name in native language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>nativeLastName</Name>
                                <NativeSyntax>MAY/String/BluePages - Last name in native language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesEmail</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Notes Cannonical Name - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/BluePages - Notes canonical ID without the mail domain - Sourced from NAB.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailDomain</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Domain - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailFile</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute - Lotus Notes Mail File</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailServer</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Server - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesPublicKey</Name>
                                <NativeSyntax>MAY/Binary{4096}/Bluepages - Notes Certificate - Sourced from NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesShortName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Short Name - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>o</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>objectClass</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/OID/The values of the objectClass attribute describe the kind of object which an entry represents.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>odmEntry</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Entry is found in ODM - Y or N</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>organizationalStatus</Name>
                                <NativeSyntax>MAY/Directory String/Specifies a category by which a person is often referred to in an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>otherMailbox</Name>
                                <NativeSyntax>MAY/Directory String/Specifies values for electronic mailbox types other than X.400 and rfc822.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ou</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pager</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys pager phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerId</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerServiceProvider</Name>
                                <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerType</Name>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordHistoryForChanges</Name>
                                <NativeSyntax>MAY/Directory String{256}/Password History for Change Events</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordHistoryForResets</Name>
                                <NativeSyntax>MAY/Directory String{256}/Password History for Reset Events</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsExpired</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL on account of not having been changed in 186 days</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsReset</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this password has been reset, not changed</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsResetByAdmin</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{16}/Password Is Reset By IIP Administrator - for ED team use only</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsStruckout</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL due to 5 unsuccesful logins</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordModifyTimestamp</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Last time the users password was changed.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pdif</Name>
                                <NativeSyntax>MAY/Directory String{1}/Bluepages - Indicates If HR-Sourced CallUp data usedin this entry was modified by the CallUp Admins - Sourced From CallUp(PDIF)</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>personalTitle</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String/Specifies a personal title for a person. Examples of personal titles are  Mr, Ms, Dr, Prof and Rev.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneMailNumber</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/BPR3 Addition - The Phone Mail Box of a Person</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>photo</Name>
                                <NativeSyntax>MAY/Binary/Contains a photo, in binary form, of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>physicalDeliveryOfficeName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Physcial delivery office number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postOfficeBox</Name>
                                <NativeSyntax>MAY/Directory String/Post office box number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postalAddress</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entry\27s mailing address. This field is intended to include multiple lines. When represented in LDIF format, each line should be separated by a dollar sign (\24).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postalCode</Name>
                                <NativeSyntax>MAY/Directory String/Postal code.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredDeliveryMethod</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entry\27s preferred contact or delivery method.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredFirstName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/BPR3 Addition - Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredIdentity</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Preferred email address for Single Sign On</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredLanguage</Name>
                                <NativeSyntax>MAY/Directory String/A persons preferred written or spoken language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredLastName</Name>
                                <NativeSyntax>MAY/String/BPR3 Addition - Duplicates the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>previousManagerSerial</Name>
                                <NativeSyntax>MAY/IA5 String{16}/Previous Manager Serial Number - for ED team use only</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryNode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>registeredAddress</Name>
                                <NativeSyntax>MAY/String/This attribute contains a postal address for receiving telegrams or expedited documents. The recipient\27s signature is usually required on delivery.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>roomNumber</Name>
                                <NativeSyntax>MAY/Directory String/Specifies the room number of an object. Note that the commonName attribute should be used for naming room  objects.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretary</Name>
                                <NativeSyntax>MAY/DN{1000}/Identifies the entrys secretary or administrative assistant.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretaryCountryCode</Name>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Personel System Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretarySerialNumber</Name>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>seeAlso</Name>
                                <NativeSyntax>MAY/String/Identifies another directory server entry that may contain information related to this entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>serialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String/This attribute contains the serial number of a device.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>shift</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Shift code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sn</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/String/This is the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>st</Name>
                                <NativeSyntax>MAY/String/This attribute contains the full name of a state or province (stateOrProvinceName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>street</Name>
                                <NativeSyntax>MAY/Directory String/This attribute contains the physical address of the object to which the entry corresponds, such as an address for package delivery (streetAddress).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Telephone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>teletexTerminalIdentifier</Name>
                                <NativeSyntax>MAY/Directory String/Teletex terminal identifier.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telexNumber</Name>
                                <NativeSyntax>MAY/Directory String/Telex number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>territory</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>thumbNailLogo</Name>
                                <NativeSyntax>MAY/Binary/Thumbnail logo assoicated with a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>thumbNailPhoto</Name>
                                <NativeSyntax>MAY/Binary/Thumbnail photo associated with a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tieline</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampBPGuiRI</Name>
                                <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the BPGui Reimagined application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampOnboard</Name>
                                <NativeSyntax>MAY/Directory String{32}/The LOM server timestamp for the onboard application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampWorkday</Name>
                                <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the HRMS Workday application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampBpgui</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for BluePages</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampFeed</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the feed program</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampHRMS</Name>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the HRMS application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>title</Name>
                                <NativeSyntax>MAY/String/This attribute contains the title, such as Vice President, of a person in their organizational context. The personalTitle attribute would be used for a persons title independent of their job function.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tradeArea</Name>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Typically a user shortname or userid.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uniqueIdentifier</Name>
                                <NativeSyntax>MAY/Directory String/Specifies a unique identifier for an object represented in the Directory. The domain within which the identifier is unique, and the exact semantics of the identifier, are for local definition.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userCertificate</Name>
                                <NativeSyntax>MAY/Binary/Used to represent certificates from one or more Certification Authorities representing a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userPKCS12</Name>
                                <NativeSyntax>MAY/Binary/PKCS \2312 PFX PDU for exchange of personal identity information</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userPassword</Name>
                                <NativeSyntax>MAY/Binary/Holds a password value for a distinguished name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userSMIMECertificate</Name>
                                <NativeSyntax>MAY/Binary/Signed message used to support S/MIME</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ventureCode</Name>
                                <NativeSyntax>MAY/Directory String{5}/IBM Venture Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Work Location Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLocation</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{240}/Bluepages - DN of the ibmWorkLocation entry which corresponds to the workLoc attribute in of this same ibmPerson entry - Generated from workLoc value by Feed</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workplaceIndicator</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{1}/PR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>x121Address</Name>
                                <NativeSyntax>MAY/IA5 String/Defines the X.121 address of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>x500UniqueIdentifier</Name>
                                <NativeSyntax>MAY/Binary/Used to distinguish between objects when a distinguished name has been reused. This is a different attribute type from both the uid and uniqueIdentifier types.</NativeSyntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>$dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateaddress1</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateaddress2</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatelocalityname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatenode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatepostalcode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatest</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateuserid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backup</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupcountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>buildingName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>c</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>co</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorcompany</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorrecordexpiration</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>coredataintegrity</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costcenter</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costcentereffectivedate</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>department</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dept</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>directoryalias</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>div</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>emailaddress</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeecountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeetype</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>entrytype</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimiletelephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimiletieline</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>floor</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>givenName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCompanyCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrganizationCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>infotelephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalmaildrop</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ipTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ismanager</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jobresponsibilities</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mail</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>manager</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managercountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailFile</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailServer</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesemail</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesmaildomain</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesshortname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>o</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>objectclass</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>odmEntry</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ou</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsExpired</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsResetByAdmin</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsStruckOut</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordModifyTimestamp</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordisreset</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>personaltitle</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>physicalDeliveryOfficeName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredIdentity</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredfirstname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primarynode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryuserid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>serialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>shift</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tieline</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampBpgui</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampFeed</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLocation</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workplaceIndicator</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>15900bbac4c</Key>
                                <Attribute>mail</Attribute>
                                <Operator>equals</Operator>
                                <Value>$Email Address</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="after_lookup">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>after_lookup</Name>
                                <Script><![CDATA[//exists in bluepage
work.setAttribute("bluepagecheck","TRUE");
work.setAttribute("Employee Status Action","M");

report_out.newLine();
report_out.write("<Info> Match found");
report_out.newLine();
report_out.write("<Info> Updating Employee Status Action 'M' for "+work.UID);]]></Script>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script>task.logmsg("Initializing LookUpBluePage");</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while reading IGIQEV-2 input file");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIQEV-2 " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-2 " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading Blue Page User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_ok">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_ok</Name>
                                <Script><![CDATA[//exists in bluepage
work.setAttribute("bluepagecheck","TRUE");
work.setAttribute("Employee Status Action","M");
report_out.newLine();
report_out.write(new Date()+" <Info> Blue Page Match found");
report_out.newLine();
report_out.write(new Date()+" <Info> Updating Employee Status Action 'M' for "+work.UID);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_multiple">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_multiple</Name>
                                <Script><![CDATA[work.setAttribute("bluepagecheck","DUPLICATE");
work.setAttribute("Employee Status Action","M");
task.logmsg("Multiple BP match found for uid="+work.UID);
report_out.newLine();
report_out.write(new Date()+" <Info> Multiple Blue Page match found for UID "+work.UID);
report_out.newLine();
report_out.write(new Date()+" <Info> Updating Employee Status Action 'M' for "+work.UID);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_nomatch">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_nomatch</Name>
                                <Script><![CDATA[//does not exist in bluepage
work.setAttribute("bluepagecheck","FALSE");
work.setAttribute("Employee Status Action","I");
report_out.newLine();
report_out.write(new Date()+" <Info> Blue Page match not found");
report_out.newLine();
report_out.write(new Date()+" <Info> Updating Employee Status Action 'I' for "+work.UID);
system.skipTo("IGIQEV2-output");]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>Company Name</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>IBM</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Connector name="IGIQEV2-output">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ModTime>1488533467914</ModTime>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV02FilePath}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                        <parameter name="csvColumns">@SUBSTITUTE{property.IGIBPSync:QEV2csvOrder}</parameter>
                        <parameter name="omitxmldeclaration">false</parameter>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>BluePageCheck</Name>
                            <Type>advanced</Type>
                            <Script>work.bluepagecheck</Script>
                            <Simple>bluePageCheck</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Common Name</Name>
                            <Type>simple</Type>
                            <Simple>Common Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Company Name</Name>
                            <Type>simple</Type>
                            <Simple>Company Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Department Number</Name>
                            <Type>simple</Type>
                            <Simple>Department Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Division</Name>
                            <Type>simple</Type>
                            <Simple>Division</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Email Address</Name>
                            <Type>simple</Type>
                            <Simple>Email Address</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Employee Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Status Action</Name>
                            <Type>advanced</Type>
                            <Script>work["Employee Status Action"]</Script>
                            <Simple>Employee Status Action</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Employee Type</Name>
                            <Type>simple</Type>
                            <Simple>BPemployeeType</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>First Name</Name>
                            <Type>simple</Type>
                            <Simple>First Name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>IsManager</Name>
                            <Type>simple</Type>
                            <Simple>IsManager</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Last Name</Name>
                            <Type>simple</Type>
                            <Simple>LastName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Country Code</Name>
                            <Type>simple</Type>
                            <Simple>Manager Country Code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Manager Employee Number</Name>
                            <Type>simple</Type>
                            <Simple>Manager Employee Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Middle Initial</Name>
                            <Type>simple</Type>
                            <Simple>Middle Initial</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Mobile Phone Number</Name>
                            <Type>simple</Type>
                            <Simple>Mobile Phone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Telephone Number</Name>
                            <Type>simple</Type>
                            <Simple>Telephone Number</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>UID</Name>
                            <Type>simple</Type>
                            <Simple>UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>Work Location</Name>
                            <Type>simple</Type>
                            <Simple>Work Location</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erlocale</Name>
                            <Type>simple</Type>
                            <Simple>erlocale</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Is Manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>Common Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Company Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Department Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Division</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Email Address</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Employee Status Action</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>First Name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Is Manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Country Code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Manager Employee Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Middle Initial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Mobile Phone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Telephone Number</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Work Location</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>erlocale</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing IGIQEV2_Output");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while reading IGIQEV-2 input file");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIQEV-2 " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIQEV-2 " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write("<Exception>				: " + "Error in reading QEV input file");report_out.newLine();
report_out.write("<Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write("<Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_ok</Name>
                            <Script>task.logmsg("Entriy Written "+work.UID);</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="IGIBPSync">
            <ModTime>1729441627681</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog2</Name>
                    <Script><![CDATA[var stats = task.getStats();

report_out.newLine();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.write("********IGIBPSync******** ");
report_out.newLine();
report_out.newLine();
report_out.write("Number of entries read            : " + stats.numGet());report_out.newLine();report_out.newLine();
report_out.write("Number of new entries written     : " + stats.numAdd());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries modified    : " + stats.numModify());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries suspended   : " + stats.numDelete());report_out.newLine();report_out.newLine();
report_out.write("Number of entries skipped         : " + stats.numSkipped());report_out.newLine();report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.newLine();

var calendar2 = new java.util.GregorianCalendar();
var endDate = calendar2.getTime();
var dateStr = system.formatDate(endDate, "EEE, d MMM yyyy");
var timeStr = system.formatDate(endDate, "HH:mm:ss aaa");
report_out.write("DATE : " + dateStr);report_out.newLine();
report_out.write("End Run : " + timeStr);report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();
report_out.write("------------------------IGIBPSync REPORT----------------------");
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();report_out.newLine();report_out.newLine();report_out.newLine();

report_out.close();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onsuccess">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>onsuccess</Name>
                    <Script>task.logmsg("Debug","[Report location] - "+report_loc)</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog</Name>
                    <Script><![CDATA[//Init IGIEJBConnector
var main = new com.igi.ejb.connector.IGIEJBConnector(system.getExternalProperty("com.ibm.SSL.ConfigURL"), system.getExternalProperty("com.ibm.CORBA.ConfigURL"), task.getLog(), system.getExternalProperty("LogLevel"));
task.logmsg("Debug","IGIEJBConnector instantiated");  

main.login(system.getExternalProperty("ISIGHOST"),system.getExternalProperty("ISIGUSER"),system.getExternalProperty("ISIGPASSWORD"));
task.logmsg("Debug","Token "+main.getToken()); 

//mode = main.commandLineParam("0");
//scope = main.commandLineParam("1");
//modifyMgr = main.commandLineParam("2");
mode='connected';
scope='IBM';
modifyMgr='';

if(mode!=null){
	mode = mode.toLowerCase();
}
if(scope!=null){	
	scope = scope.toLowerCase();
}
if(modifyMgr!=null){	
	modifyMgr = modifyMgr.toLowerCase();
}	

task.logmsg("Debug","mode="+mode);
task.logmsg("Debug","scope="+scope);
task.logmsg("Debug","modifyMgr="+modifyMgr);

var sdf = new java.text.SimpleDateFormat("yyyyMMddHHmmss");
var date = new Date();
var today = sdf.format(date);

var reportFilePath = system.getExternalProperty("ReportFilePathBPSync");
var reportFileName = system.getExternalProperty("ReportFileNameBPSync");
var report_out = new java.io.BufferedWriter(new java.io.FileWriter(reportFilePath+"//"+reportFileName+"-"+today+".txt"));
var report_loc = reportFilePath+"//"+reportFileName+"-"+today+".txt"
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================IGIBPSync=========================");
report_out.newLine();
report_out.write("=============================================================================");

//validations
if(mode == null || mode.equals('')){
       report_out.newLine();
       report_out.write(new Date()+" <Info> Parameter Value missing : mode. Running in default mode connected");
       task.logmsg("Debug","Parameter Value missing : mode");
       mode='connected';
       modifyMgr='yes';
}
       
if(!mode.equals('connected') && ! mode.equals('island')){
       report_out.newLine();
       report_out.write(new Date()+" <Info> Incorrect Parameter Value : mode");
       task.logmsg("Debug","Incorrect Parameter Value : mode");
       system.skipTo("Epilog-After Close");
}

if(mode.equals('island')  && scope == null){
       report_out.newLine();
       report_out.write(new Date()+" <Info> Parameter Value missing : scope");
       task.logmsg("Debug","Parameter Value missing : scope");
       system.skipTo("Epilog-After Close");
}

if((mode.equals('island') && scope !=null)&&(!scope.equals('ibm') && !scope.equals('nonibm') && !scope.equals('both'))){
       report_out.newLine();
       report_out.write(new Date()+" <Info> Incorrect Parameter Value : scope");
       task.logmsg("Debug","Incorrect Parameter Value : scope");
       system.skipTo("Epilog-After Close");
}


if((mode.equals('connected')  && modifyMgr != null)&&(!modifyMgr.equals('yes') && !modifyMgr.equals('no'))){
       modifyMgr='yes';
       report_out.newLine();
       report_out.write(new Date()+" <Info> Incorrect Parameter Value : modifyMgr. Running in mode connected modifyMgr yes");
       task.logmsg("Debug","Incorrect Parameter Value : modifyMgr. Running in mode connected modifyMgr yes");
}]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="getOrganizationName" state="Enabled"/>
                    <Component name="getCompanyName" state="Enabled"/>
                    <Component name="setData" state="Enabled"/>
                    <Component name="checkUserStatus" state="Enabled"/>
                    <Component name="IfConnected" state="Enabled"/>
                    <Component name="EntryData" state="Enabled"/>
                    <Component name="LookUpBluePage" state="Enabled"/>
                    <Component name="IfDeletedFromBP" state="Enabled"/>
                    <Component name="SuspendIGIPerson" state="Simulated"/>
                    <Component name="UpdateIGIPerson" state="Simulated"/>
                    <Component name="IGIEJBConnectorAPICall" state="Enabled"/>
                    <Component name="Island" state="Enabled"/>
                    <Component name="CheckData" state="Enabled"/>
                    <Component name="S_USERJDBCConnector" state="Enabled"/>
                    <Component name="ScopeisIBM" state="Enabled"/>
                    <Component name="IGIQEV-IBM" state="Simulated"/>
                    <Component name="ScopeisNonIBM" state="Enabled"/>
                    <Component name="IGIQEV-NonIBM" state="Simulated"/>
                    <Component name="scopeisALL" state="Enabled"/>
                    <Component name="IGIQEV-Both" state="Simulated"/>
                    <Component name="it_IGI_IBM" state="Enabled"/>
                    <Component name="GetIGIUsers" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="it_IGI_IBM">
                    <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                    <ModTime>1502350621882</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Disabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                        <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                        <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                        <parameter encrypted="true" name="ideasPassword"/>
                        <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                        <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                        <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                        <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Simple>code</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>company</Name>
                            <Type>simple</Type>
                            <Simple>company</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>country</Name>
                            <Type>simple</Type>
                            <Simple>country</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>dn</Name>
                            <Type>simple</Type>
                            <Simple>dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>email</Name>
                            <Type>simple</Type>
                            <Simple>email</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeStatusAction</Name>
                            <Type>advanced</Type>
                            <Script>ret.value="M"</Script>
                            <Simple>employeeStatusAction</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>id</Name>
                            <Type>simple</Type>
                            <Simple>id</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>identityUID</Name>
                            <Type>simple</Type>
                            <Simple>identityUID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>lastName</Name>
                            <Type>simple</Type>
                            <Simple>lastName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>name</Name>
                            <Type>simple</Type>
                            <Simple>name</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgUnitCode</Name>
                            <Type>simple</Type>
                            <Simple>orgUnitCode</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgUnitId</Name>
                            <Type>simple</Type>
                            <Simple>orgUnitId</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgUnitName</Name>
                            <Type>simple</Type>
                            <Simple>orgUnitName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>phoneNumber</Name>
                            <Type>simple</Type>
                            <Simple>phoneNumber</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>roleIds</Name>
                            <Type>simple</Type>
                            <Simple>roleIds</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>userType</Name>
                            <Type>simple</Type>
                            <Simple>userType</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>country</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>id</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>identityUID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitId</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>phoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>country</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>id</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>identityUID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitId</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>phoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing it_IGI_IBM");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_ok</Name>
                            <Script>task.logmsg("User Read from IGI: "+work.code);</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>end_of_data</Name>
                            <Script><![CDATA[error_work = system.newEntry();

status = "Success"
message= ("IGIBPSync completed");

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync completed " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================End of Data=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="GetIGIUsers">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ModTime>1502376720268</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCPassword}</parameter>
                        <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                        <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNamePerson}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Simple>CODE</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>country</Name>
                            <Type>simple</Type>
                            <Simple>COUNTRY</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>dn</Name>
                            <Type>simple</Type>
                            <Simple>DN</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>email</Name>
                            <Type>simple</Type>
                            <Simple>EMAIL</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeStatusAction</Name>
                            <Type>advanced</Type>
                            <Script>ret.value="M"</Script>
                            <Simple>employeeStatusAction</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>id</Name>
                            <Type>simple</Type>
                            <Simple>ID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>identityUID</Name>
                            <Type>simple</Type>
                            <Simple>IDENTITY_UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>lastName</Name>
                            <Type>simple</Type>
                            <Simple>SURNAME</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>name</Name>
                            <Type>simple</Type>
                            <Simple>NAME</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgId</Name>
                            <Type>simple</Type>
                            <Simple>ORGANIZATIONAL_UNIT</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>phoneNumber</Name>
                            <Type>simple</Type>
                            <Simple>PHONE_NUMBER</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COD_FISC</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DATE_OF_BIRTH</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DESCRIPTION</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DN</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTITY_UID</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LOCALITY</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ORGANIZATIONAL_UNIT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNER</Name>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNERCODE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PASSWORD</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PLACE_OF_BIRTH</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>REGISTER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SEX</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>STATE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>S_USER</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>TYPE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>UME</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_ERC</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COD_FISC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DATE_OF_BIRTH</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DESCRIPTION</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTITY_UID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LOCALITY</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ORGANIZATIONAL_UNIT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNERCODE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PASSWORD</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PLACE_OF_BIRTH</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>REGISTER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SEX</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>STATE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>S_USER</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>TYPE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>UME</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_ERC</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>VALUE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Debug","Initializing GetIGIUsers");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_ok</Name>
                            <Script><![CDATA[task.logmsg("Debug","User Read from IGI: "+work.code);
//task.dumpEntry(work);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>end_of_data</Name>
                            <Script><![CDATA[error_work = system.newEntry();

status = "Success"
message= ("IGIBPSync completed");

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync completed " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================End of Data=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="getOrganizationName">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ModTime>1502379217928</ModTime>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCPassword}</parameter>
                        <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                        <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNameORGANIZATIONAL_UNIT}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>orgUnitCode</Name>
                            <Type>simple</Type>
                            <Simple>CODE</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgUnitName</Name>
                            <Type>simple</Type>
                            <Simple>NAME</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DESCRIPTION</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DN</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ENABLE_SOD</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>HIERARCHY</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ORGANIZATIONAL_UNIT_TYPE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNER</Name>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNERCODE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PARENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>STATE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DESCRIPTION</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ENABLE_SOD</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>HIERARCHY</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ORGANIZATIONAL_UNIT_TYPE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OWNERCODE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PARENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>STATE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>VALUE</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15dcb5af294</Key>
                            <Attribute>ID</Attribute>
                            <Operator>equals</Operator>
                            <Value>$orgId</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Debug","Initializing getOrganizationName");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Database Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[task.logmsg("Debug","debug","No OU found for User: "+work.code+". Skipping entry.");
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_ok</Name>
                            <Script>task.logmsg("Debug","OU found: "+work.orgUnitName);</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Connector name="getCompanyName">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ModTime>1502379239430</ModTime>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCPassword}</parameter>
                        <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                        <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNameUSER_ERC}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>company</Name>
                            <Type>simple</Type>
                            <Simple>ATTR15</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15dcb5b72c1</Key>
                            <Attribute>PM_CODE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Debug","Initializing getCompanyName");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Database Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_multiple</Name>
                            <Script><![CDATA[task.logmsg("Debug","No company found for User: "+work.code+". Skipping Entry");
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_nomatch</Name>
                            <Script>task.logmsg("Debug","No Company found");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_ok</Name>
                            <Script>task.logmsg("Debug","Company: "+work.company+" found for User: "+work.code);</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="setData">
                    <ModTime>1502379266815</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[work.setAttribute("Mode",mode);
work.setAttribute("Scope",scope);
work.setAttribute("modifyMgr",modifyMgr);
var value="";
task.logmsg("Debug","In set Data");

//task.dumpEntry(work);
if(work.getAttribute("company") != null) {
	value =work.getAttribute("company");
}
task.logmsg("Debug","value: "+value)
	
// if mode is Connected and Company is not IBM then Skip
if(mode.equalsIgnoreCase("Connected") && value!="IBM"){
	task.logmsg("Debug","Entry skipped1: "+work.code);
	system.skipEntry();
}

//if mode is Island, and scope is IBM then skip entries with Company NonIBM
if(mode.equalsIgnoreCase("Island") && scope.equalsIgnoreCase("IBM") && value!="IBM"){
	task.logmsg("Debug","Entry skipped2: "+work.code);
	system.skipEntry();
}

//if mode is Island and scope is NonIBM then skip entries with Company IBM
if(mode.equalsIgnoreCase("Island") && scope.equalsIgnoreCase("NonIBM") && value=="IBM"){
	task.logmsg("Debug","Entry skipped3: "+work.code);
	system.skipEntry();
}

//skip Entry if user is UME
var code=work.getAttribute("code");

if(code.toString().contains("_")){
	task.logmsg("Debug","UME found");
	task.logmsg("Debug","Entry skipped4: "+work.code);
	system.skipEntry();
}]]></parameter>
                </Script>
                <Connector name="checkUserStatus">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ModTime>1502379285947</ModTime>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                        <parameter encrypted="true" name="jdbcPassword"/>
                        <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                        <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNameUSER_ERC}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>commonName</Name>
                            <Type>simple</Type>
                            <Simple>ATTR9</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>departmentNumber</Name>
                            <Type>simple</Type>
                            <Simple>ATTR5</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeCountryCode</Name>
                            <Type>simple</Type>
                            <Simple>ATTR11</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeNumber</Name>
                            <Type>simple</Type>
                            <Simple>ATTR10</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeType</Name>
                            <Type>simple</Type>
                            <Simple>ATTR15</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>isManager</Name>
                            <Type>simple</Type>
                            <Simple>ATTR14</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>manager</Name>
                            <Type>simple</Type>
                            <Simple>ATTR1</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>managerCountryCode</Name>
                            <Type>simple</Type>
                            <Simple>ATTR13</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>managerEmployeeNumber</Name>
                            <Type>simple</Type>
                            <Simple>ATTR12</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>notesShrotName</Name>
                            <Type>simple</Type>
                            <Simple>ATTR7</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1594f21e646</Key>
                            <Attribute>DISABLED</Attribute>
                            <Operator>equals</Operator>
                            <Value>0</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>1594f24b46c</Key>
                            <Attribute>PM_CODE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Debug","Initializing checkUserStatus");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_multiple</Name>
                            <Script><![CDATA[task.logmsg("Debug","Multiple Entries found in S_USER: "+work.code);
report_out.newLine();
report_out.write(new Date()+" <Info> Multiple entries found. Skipping "+work.code);	
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[//User is inactive so skip it.
task.logmsg("Debug","Skipped Inactive User: "+work.code);
report_out.newLine();
report_out.write(new Date()+" <Info> Skipping inactive user: "+work.code);	
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Branch name="IfConnected">
                    <ModTime>1502379327170</ModTime>
                    <Script name="EntryData">
                        <ModTime>1502377036821</ModTime>
                        <parameter name="script"><![CDATA[task.logmsg("Debug","In connected Mode before if");

//task.dumpEntry(work);]]></parameter>
                    </Script>
                    <Connector name="LookUpBluePage">
                        <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
                        <ModTime>1502379327170</ModTime>
                        <ConnectorMode>Lookup</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="ldapSearchBase">@SUBSTITUTE{property.IGIBPSync:BluePageSerachBase}</parameter>
                            <parameter name="ldapSearchFilter">@SUBSTITUTE{property.IGIBPSync:BluePageSearchFilter}</parameter>
                            <parameter name="ldapSearchScope">@SUBSTITUTE{property.IGIBPSync:BluePageSearchScope}</parameter>
                            <parameter name="ldapUrl">@SUBSTITUTE{property.IGIBPSync:BluePageLDAPUrl}</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>Optional.IAMcn</Name>
                                <Type>advanced</Type>
                                <Script>conn.cn</Script>
                                <Simple>cn</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMdepartmentNumber</Name>
                                <Type>simple</Type>
                                <Simple>departmentNumber</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMdivision</Name>
                                <Type>simple</Type>
                                <Simple>div</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMemployeeCountryCode</Name>
                                <Type>simple</Type>
                                <Simple>employeeCountryCode</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMemployeeNumber</Name>
                                <Type>simple</Type>
                                <Simple>ibmSerialNumber</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMemployeeType</Name>
                                <Type>simple</Type>
                                <Simple>employeeType</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMisManager</Name>
                                <Type>simple</Type>
                                <Simple>isManager</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMmanagerCountryCode</Name>
                                <Type>simple</Type>
                                <Simple>managerCountryCode</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMmanagerEmployeeNumber</Name>
                                <Type>simple</Type>
                                <Simple>managerSerialNumber</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMmobileNumber</Name>
                                <Type>simple</Type>
                                <Simple>mobile</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMshortsMail</Name>
                                <Type>simple</Type>
                                <Simple>notesShortName</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>Optional.IAMworkLocation</Name>
                                <Type>simple</Type>
                                <Simple>workLoc</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>email</Name>
                                <Type>simple</Type>
                                <Simple>mail</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>givenName</Name>
                                <Type>simple</Type>
                                <Simple>givenName</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>identityUID</Name>
                                <Type>simple</Type>
                                <Simple>uid</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>surname</Name>
                                <Type>simple</Type>
                                <Simple>sn</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>$dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>accessHint</Name>
                                <NativeSyntax>MAY/DN/DN pointer to an accessRole or accessGroup.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>accountHint</Name>
                                <NativeSyntax>MAY/DN/DN pointer to an account directory object.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>additional</Name>
                                <NativeSyntax>MAY/Directory String{256}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>administrator</Name>
                                <NativeSyntax>MAY/Directory String{32}/Administrator of entry</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateAddress1</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateAddress2</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateLocalityName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateNode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute - Employee Alternate Node</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatePostalCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{40}/Postal code.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateSt</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/BPR3 Addition - This attribute contains the alternate full name of a state or province (alternateStateOrProvinceName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateTieline</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>area</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>audio</Name>
                                <NativeSyntax>MAY/Binary/Contains a sound file in binary format.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backup</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{1000}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>bluepagesNotesIdError</Name>
                                <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>buildingName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Defines the building name associated with the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>businessCategory</Name>
                                <NativeSyntax>MAY/Directory String/This attribute describes the kind of business performed by an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>c</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains a two-letter ISO 3166 country code (countryName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupDateTime</Name>
                                <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>carLicense</Name>
                                <NativeSyntax>MAY/Directory String/vehicle license plate tag</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cellServiceProvider</Name>
                                <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cn</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/String/This is the X.500 commonName attribute, which contains a name of an object.  If the object corresponds to a person, it is typically the persons full name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>co</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Contains the name of a country. Often, the country attribute is used to describe a two-character code for a country, and  the friendlyCountryName attribute is used to describe the actual country name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>configPtr</Name>
                                <NativeSyntax>MAY/DN/DN pointer to a cimConfiguration-derived directory entry such as an ePropertySet.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorCompany</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorRecordExpiration</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>coreDataIntegrity</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{32}/Indicator of whether core attributes are trusted</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costCenter</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{14}/2 character ISO country code, followed by the existing account department.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costCenterEffectiveDate</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Cost Center Effective Date - Blue Harmony</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>deleter</Name>
                                <NativeSyntax>MAY/Directory String{240}/Exploiter DN of delete requester</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>department</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{256}/DN of department entry</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>departmentNumber</Name>
                                <NativeSyntax>MAY/Directory String/identifies a department within an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dept</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Department Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>description</Name>
                                <NativeSyntax>MAY/Directory String{1024}/Attribute common to CIM and LDAP schema to provide lengthy description of a directory object entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>destinationIndicator</Name>
                                <NativeSyntax>MAY/Directory String/This attribute is used for the telegram service.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>directoryAlias</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>displayName</Name>
                                <NativeSyntax>MAY/Directory String/A name used in displaying an entry in a one-line summary list.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>div</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Division Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>divDept</Name>
                                <NativeSyntax>MAY/DN{128}/Custom - Blue Pages Attribute - HR Sourced</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>emailAddress</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Employee Personel Systems Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeNumber</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entrys employee number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeeType</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Identifies the entrys type of employment.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>entryType</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Bluepages - Used to identify special entry types such as a test ID</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimileTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the fax number at which the entry can be reached.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimileTieline</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>floor</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{64}/Floor location.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>generationQualifier</Name>
                                <NativeSyntax>MAY/String/Contains the part of the name which typically is the suffix, as in IIIrd.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>givenName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>glTeamLead</Name>
                                <NativeSyntax>MAY/DN{64}/Global Extended Team Leader</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword1</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword2</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword3</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword4</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>historicPassword5</Name>
                                <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homeFax</Name>
                                <NativeSyntax>MAY/Telephone Number/Identifies the entrys home fax number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homePhone</Name>
                                <NativeSyntax>MAY/Telephone Number/Identifies the entrys home phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>homePostalAddress</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entrys home mailing address. This field is  intended to include multiple lines, but each line within the  entry should be separated by a dollar sign (\24). To represent  an actual dollar sign (\24) or backslash (\) within this text, use  the escaped hex values \24 and \5c respectively.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrActive</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Active/Inactive Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrAssignee</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM International Assignee In/Out Indicator</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrAssignment</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM International assignment indicator</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCompanyCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/ODM HRIW Company code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCountryCode</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM ISO 3166 Country Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrDepartment</Name>
                                <NativeSyntax>MAY/Directory String{32}/ODM Career Department ID</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrDivision</Name>
                                <NativeSyntax>MAY/Directory String{32}/ODM Division Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrEmployeeType</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Employee type</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrFamilyName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Family name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrFirstName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM First name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrInitial</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Initials</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrLastName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Last name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerIndicator</Name>
                                <NativeSyntax>MAY/Directory String{32}/Is-manager status in ODM</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerPSC</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM Manager PSC</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrManagerSerial</Name>
                                <NativeSyntax>MAY/IA5 String{16}/ODM Manager Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrMiddleName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Middle name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrgUnitCode</Name>
                                <NativeSyntax>MAY/Directory String{10}/Similar to a department, but can contain employees from multiple countries.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrganizationCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/HR organization code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOtherName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Other name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrPSC</Name>
                                <NativeSyntax>MAY/Directory String{16}/ODM PSC</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrPreferredName</Name>
                                <NativeSyntax>MAY/Directory String{64}/ODM Preferred first name</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrSerialNumber</Name>
                                <NativeSyntax>MAY/IA5 String{240}/ODM Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - IBM Location Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>infoTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>initials</Name>
                                <NativeSyntax>MAY/String/The initials attribute contains the initials of some or all of an individuals names, but not the surname(s).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalEmail</Name>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalMailDrop</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internationalISDNNumber</Name>
                                <NativeSyntax>MAY/IA5 String/Contains the ISDN number of the entry. This is in the internationally agreed format for ISDN addresses given in CCITT Rec. E. 164.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>invalidManagerDate</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{8}/DRMS Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ipTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/IP Telephony Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>isManager</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/BluePages - Manager Identifier</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>isNonExpiring</Name>
                                <NativeSyntax>MAY/Directory String{10}/Password isNonExpiring status (true false expired)</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jobResponsibilities</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jpegPhoto</Name>
                                <NativeSyntax>MAY/Binary/Contains a JPEG photo of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>l</Name>
                                <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>labeledURI</Name>
                                <NativeSyntax>MAY/Directory String/Uniform Resource Identifier with optional label as defined in RFC2079.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>locationCity</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mail</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Identifies a users primary email address (the email address retrieved and displayed by white-pages lookup applications).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>manager</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{1000}/Identifies the distinguished name of the entrys manager.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerCountryCode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Personel System Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerSerialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>middleInitial</Name>
                                <NativeSyntax>MAY/Directory String{32}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>middleName</Name>
                                <NativeSyntax>MAY/String/Identifies the entrys middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mobile</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys mobile or cellular phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>nativeFirstName</Name>
                                <NativeSyntax>MAY/String/BluePages - First name in native language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>nativeLastName</Name>
                                <NativeSyntax>MAY/String/BluePages - Last name in native language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesEmail</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Notes Cannonical Name - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/BluePages - Notes canonical ID without the mail domain - Sourced from NAB.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailDomain</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Domain - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailFile</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute - Lotus Notes Mail File</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailServer</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Server - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesPublicKey</Name>
                                <NativeSyntax>MAY/Binary{4096}/Bluepages - Notes Certificate - Sourced from NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesShortName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Short Name - Sourced From NAB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>o</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>objectClass</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/OID/The values of the objectClass attribute describe the kind of object which an entry represents.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>odmEntry</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Entry is found in ODM - Y or N</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>organizationalStatus</Name>
                                <NativeSyntax>MAY/Directory String/Specifies a category by which a person is often referred to in an organization.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>otherMailbox</Name>
                                <NativeSyntax>MAY/Directory String/Specifies values for electronic mailbox types other than X.400 and rfc822.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ou</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pager</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys pager phone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerId</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerServiceProvider</Name>
                                <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pagerType</Name>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordHistoryForChanges</Name>
                                <NativeSyntax>MAY/Directory String{256}/Password History for Change Events</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordHistoryForResets</Name>
                                <NativeSyntax>MAY/Directory String{256}/Password History for Reset Events</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsExpired</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL on account of not having been changed in 186 days</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsReset</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this password has been reset, not changed</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsResetByAdmin</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{16}/Password Is Reset By IIP Administrator - for ED team use only</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsStruckout</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL due to 5 unsuccesful logins</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordModifyTimestamp</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Last time the users password was changed.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pdif</Name>
                                <NativeSyntax>MAY/Directory String{1}/Bluepages - Indicates If HR-Sourced CallUp data usedin this entry was modified by the CallUp Admins - Sourced From CallUp(PDIF)</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>personalTitle</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String/Specifies a personal title for a person. Examples of personal titles are  Mr, Ms, Dr, Prof and Rev.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneMailNumber</Name>
                                <NativeSyntax>MAY/Telephone Number{32}/BPR3 Addition - The Phone Mail Box of a Person</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>photo</Name>
                                <NativeSyntax>MAY/Binary/Contains a photo, in binary form, of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>physicalDeliveryOfficeName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{128}/Physcial delivery office number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postOfficeBox</Name>
                                <NativeSyntax>MAY/Directory String/Post office box number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postalAddress</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entry\27s mailing address. This field is intended to include multiple lines. When represented in LDIF format, each line should be separated by a dollar sign (\24).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>postalCode</Name>
                                <NativeSyntax>MAY/Directory String/Postal code.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredDeliveryMethod</Name>
                                <NativeSyntax>MAY/Directory String/Identifies the entry\27s preferred contact or delivery method.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredFirstName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/BPR3 Addition - Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredIdentity</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Preferred email address for Single Sign On</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredLanguage</Name>
                                <NativeSyntax>MAY/Directory String/A persons preferred written or spoken language</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredLastName</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/String/BPR3 Addition - Duplicates the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>previousManagerSerial</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/IA5 String{16}/Previous Manager Serial Number - for ED team use only</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryNode</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryUserId</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>registeredAddress</Name>
                                <NativeSyntax>MAY/String/This attribute contains a postal address for receiving telegrams or expedited documents. The recipient\27s signature is usually required on delivery.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>roomNumber</Name>
                                <NativeSyntax>MAY/Directory String/Specifies the room number of an object. Note that the commonName attribute should be used for naming room  objects.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretary</Name>
                                <NativeSyntax>MAY/DN{1000}/Identifies the entrys secretary or administrative assistant.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretaryCountryCode</Name>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Personel System Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>secretarySerialNumber</Name>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>seeAlso</Name>
                                <NativeSyntax>MAY/String/Identifies another directory server entry that may contain information related to this entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>serialNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String/This attribute contains the serial number of a device.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>shift</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Shift code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sn</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MUST/String/This is the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>st</Name>
                                <NativeSyntax>MAY/String/This attribute contains the full name of a state or province (stateOrProvinceName).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>street</Name>
                                <NativeSyntax>MAY/Directory String/This attribute contains the physical address of the object to which the entry corresponds, such as an address for package delivery (streetAddress).</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Telephone number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>teletexTerminalIdentifier</Name>
                                <NativeSyntax>MAY/Directory String/Teletex terminal identifier.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telexNumber</Name>
                                <NativeSyntax>MAY/Directory String/Telex number.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>territory</Name>
                                <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>thumbNailLogo</Name>
                                <NativeSyntax>MAY/Binary/Thumbnail logo assoicated with a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>thumbNailPhoto</Name>
                                <NativeSyntax>MAY/Binary/Thumbnail photo associated with a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tieline</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampBPGuiRI</Name>
                                <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the BPGui Reimagined application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampOnboard</Name>
                                <NativeSyntax>MAY/Directory String{32}/The LOM server timestamp for the onboard application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timeStampWorkday</Name>
                                <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the HRMS Workday application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampBpgui</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for BluePages</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampFeed</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the feed program</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampHRMS</Name>
                                <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the HRMS application</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>title</Name>
                                <NativeSyntax>MAY/String/This attribute contains the title, such as Vice President, of a person in their organizational context. The personalTitle attribute would be used for a persons title independent of their job function.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tradeArea</Name>
                                <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{256}/Typically a user shortname or userid.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uniqueIdentifier</Name>
                                <NativeSyntax>MAY/Directory String/Specifies a unique identifier for an object represented in the Directory. The domain within which the identifier is unique, and the exact semantics of the identifier, are for local definition.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userCertificate</Name>
                                <NativeSyntax>MAY/Binary/Used to represent certificates from one or more Certification Authorities representing a user.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userPKCS12</Name>
                                <NativeSyntax>MAY/Binary/PKCS \2312 PFX PDU for exchange of personal identity information</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userPassword</Name>
                                <NativeSyntax>MAY/Binary/Holds a password value for a distinguished name.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userSMIMECertificate</Name>
                                <NativeSyntax>MAY/Binary/Signed message used to support S/MIME</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ventureCode</Name>
                                <NativeSyntax>MAY/Directory String{5}/IBM Venture Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{240}/Bluepages - Work Location Code</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLocation</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/DN{240}/Bluepages - DN of the ibmWorkLocation entry which corresponds to the workLoc attribute in of this same ibmPerson entry - Generated from workLoc value by Feed</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workplaceIndicator</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>MAY/Directory String{1}/PR3 Addition</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>x121Address</Name>
                                <NativeSyntax>MAY/IA5 String/Defines the X.121 address of the entry.</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>x500UniqueIdentifier</Name>
                                <NativeSyntax>MAY/Binary/Used to distinguish between objects when a distinguished name has been reused. This is a different attribute type from both the uid and uniqueIdentifier types.</NativeSyntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>$dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateaddress1</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateaddress2</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatelocalityname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatenode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatepostalcode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternatest</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>alternateuserid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backup</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupcountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>backupserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>buildingName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>c</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>callupname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>cn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>co</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorcompany</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>contractorrecordexpiration</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>coredataintegrity</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costcenter</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>costcentereffectivedate</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>department</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dept</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>directoryalias</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>div</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>emailaddress</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeecountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>employeetype</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>entrytype</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimiletelephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>facsimiletieline</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>floor</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>givenName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrCompanyCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hrOrganizationCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ibmserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>infotelephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>internalmaildrop</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>invalidManagerDate</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ipTelephoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ismanager</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>jobresponsibilities</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mail</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>manager</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managercountrycode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>managerserialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>mobile</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailFile</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesMailServer</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesemail</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesmaildomain</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>notesshortname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>o</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>objectclass</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>odmEntry</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ou</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>pager</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsExpired</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsResetByAdmin</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordIsStruckOut</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordModifyTimestamp</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>passwordisreset</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>personaltitle</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>physicalDeliveryOfficeName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredIdentity</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredLastName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>preferredfirstname</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>previousManagerSerial</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primarynode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>primaryuserid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>serialnumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>shift</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>telephonenumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>tieline</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampBpgui</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>timestampFeed</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLoc</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workLocation</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>workplaceIndicator</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>15903b72fc3</Key>
                                <Attribute>mail</Attribute>
                                <Operator>equals</Operator>
                                <Value>$code</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="after_lookup">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>after_lookup</Name>
                                <Script><![CDATA[var hr_status = conn.getString("hrActive");
task.logmsg("hrActive: " + hr_status);
if(hr_status != "A" || hr_status != null){
	work.setAttribute("isTerminated","True");
}

task.logmsg("In Look Up");]]></Script>
                            </Hook>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script><![CDATA[task.logmsg("Debug","in Connected Mode..looking up bluepage");
//task.dumpEntry(work);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to Blue Page Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading Blue Page User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_nomatch">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_nomatch</Name>
                                <Script><![CDATA[//Move to isDeleted;
task.logmsg("Debug","No match found on Blue Page for User: "+work.code);

work.setAttribute("isDeleted","true");
report_out.newLine();
report_out.write(new Date()+" <Info> No match found on Blue Page for User: "+work.code);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_ok">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_ok</Name>
                                <Script><![CDATA[task.logmsg("Debug","User: "+work.code+" entry found on Blue Page");
//task.dump(work);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Branch name="IfDeletedFromBP">
                        <ModTime>1502349945716</ModTime>
                        <Connector name="SuspendIGIPerson">
                            <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                            <ModTime>1496232228126</ModTime>
                            <ConnectorMode>Delete</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                                <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                                <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                                <parameter encrypted="true" name="ideasPassword"/>
                                <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                                <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                                <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                                <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>company</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>country</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>dn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>identityUID</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>lastName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitId</Name>
                                    <Syntax>java.lang.Long</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>phoneNumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>userType</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>company</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>country</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>dn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>identityUID</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>lastName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitCode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitId</Name>
                                    <Syntax>java.lang.Long</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>orgUnitName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>phoneNumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>userType</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>15902af0d11</Key>
                                    <Attribute>code</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$code</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="after_delete">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>after_delete</Name>
                                    <Script><![CDATA[work.removeAttribute("isDeleted");
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="before_initialize">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>before_initialize</Name>
                                    <Script>task.logmsg("initializing SuspendIGIPerson");</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="connect_init">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>connect_init</Name>
                                    <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Users Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_fail">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in Suspending IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="delete_fail">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>delete_fail</Name>
                                    <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in Suspending IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="delete_ok">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>delete_ok</Name>
                                    <Script>system.skipEntry();</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                        </Connector>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>isDeleted</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>true</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>false</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Connector name="UpdateIGIPerson">
                        <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                        <ModTime>1502349482815</ModTime>
                        <ConnectorMode>Update</ConnectorMode>
                        <ConnectorState>Disabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                            <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                            <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                            <parameter encrypted="true" name="ideasPassword"/>
                            <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                            <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                            <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                            <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>email</Name>
                                <Type>advanced</Type>
                                <Add>false</Add>
                                <Script><![CDATA[if(work.getAttribute("BPMail")!=null){
	work.getAttribute("BPMail").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>identityUID</Name>
                                <Type>advanced</Type>
                                <Add>false</Add>
                                <Script><![CDATA[if(work.getAttribute("BPuid")!=null){
	work.getAttribute("BPuid").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>lastName</Name>
                                <Type>advanced</Type>
                                <Script><![CDATA[if(work.getAttribute("BPsn")!=null){
	work.getAttribute("BPsn").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>name</Name>
                                <Type>advanced</Type>
                                <Script><![CDATA[if(work.getAttribute("BPgivenName")!=null){
	work.getAttribute("BPgivenName").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMcn</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPcommonname")!=null){
	work.getAttribute("BPcommonname").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMdepartementNumber</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPdepartmentNumber")!=null){
	work.getAttribute("BPdepartmentNumber").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMdivision</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPdiv")!=null){
	work.getAttribute("BPdiv").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMemployeeCountryCode</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Script><![CDATA[if(work.getAttribute("BPemployeeCountryCode")!=null){
	work.getAttribute("BPemployeeCountryCode").getValue()
}]]></Script>
                                <Simple>Employee Country Code</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMemployeeNumber</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPibmSerialNumber")!=null){
	work.getAttribute("BPibmSerialNumber").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMisManager</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPIsmanager")!=null){
	work.getAttribute("BPIsmanager").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMmanagerCountryCode</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>false</Add>
                                <Modify>true</Modify>
                                <Script><![CDATA[if(work.getAttribute("modifyMgr")=="no"){
	work.getAttribute("managerCountryCode");
}else{
	if(work.getAttribute("BPmanagerCountryCode")!=null){
		work.getAttribute("BPmanagerCountryCode").getValue()
	}	
}]]></Script>
                                <Simple>Manager Country Code</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMmanagerEmployeeNumber</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("modifyMgr")=="no"){
	work.getAttribute("managerEmployeeNumber");
}else{
	if(work.getAttribute("BPmanagerSerialNumber")!=null){
		work.getAttribute("BPmanagerSerialNumber").getValue()
	}	
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMmobileNumber</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPmobile")!=null){
	work.getAttribute("BPmobile").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMnotesMail</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPnotesEmail")!=null){
	work.getAttribute("BPnotesEmail").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMnotesShortName</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPnotesShortName")!=null){
	work.getAttribute("BPnotesShortName").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>optional.IAMworkLocation</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Script><![CDATA[if(work.getAttribute("BPworkLoc")!=null){
	work.getAttribute("BPworkLoc").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>phoneNumber</Name>
                                <Type>advanced</Type>
                                <Script><![CDATA[if(work.getAttribute("BPtelephoneNumber")!=null){
	work.getAttribute("BPtelephoneNumber").getValue()
}]]></Script>
                            </AttributeMapItem>
                            <NullBehavior>Delete</NullBehavior>
                            <NullDefinition>Default</NullDefinition>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>code</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>company</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>country</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>identityUID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>lastName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>name</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitId</Name>
                                <Syntax>java.lang.Long</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userType</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>code</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>company</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>country</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>identityUID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>lastName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>name</Name>
                                <Syntax>java.lang.String</Syntax>
                                <Presence>Optional</Presence>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitId</Name>
                                <Syntax>java.lang.Long</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userType</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <AdvancedLinkMode>false</AdvancedLinkMode>
                            <LinkCriteriaItem>
                                <Key>159068efbb7</Key>
                                <Attribute>code</Attribute>
                                <Operator>equals</Operator>
                                <Value>$BPMail</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="after_lookup">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>after_lookup</Name>
                                <Script><![CDATA[task.logmsg("after execute");
//task.dumpEntry(work);]]></Script>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="before_execute">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_execute</Name>
                                <Script><![CDATA[task.logmsg("Before execute");
//task.dumpEntry(work);
task.logmsg("Modifying User: "+work.code);
task.logmsg("modifyMgr="+work.getAttribute("modifyMgr"));]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script>task.logmsg("Initializing UpdateIGIPerson");</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="before_lookup">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_lookup</Name>
                                <Script><![CDATA[task.logmsg("Before lookup");
//task.dumpEntry(work);]]></Script>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="before_modify">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_modify</Name>
                                <Script><![CDATA[task.logmsg("Before modify");
//task.dumpEntry(work);]]></Script>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Users Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in Updating IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_ok">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_ok</Name>
                                <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> IGI User updated:		"+work.code);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="update_multiple">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>update_multiple</Name>
                                <Script><![CDATA[task.logmsg("Found Multiple entries");
//task.dumpEntry(work);
report_out.newLine();
report_out.write(new Date()+" <Info> Multiple Entries found having Code:		"+work.code);]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <ScriptCondition><![CDATA[var runmode = work.getAttribute("Mode");
task.logmsg("runmode:::"+runmode);
if(runmode == "connected"){
	return true;
}
return false;]]></ScriptCondition>
                    <Conditions/>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Script name="IGIEJBConnectorAPICall">
                    <ModTime>1502379374118</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("Debug","isDeleted: "+work.getAttribute("isDeleted"));

if(work.getAttribute("isDeleted")=="true"){
	//call suspend api
	task.logmsg("Debug","Calling suspendUser API for User: "+work.code);
	var result = main.suspendUser(work.code);
	
	if(result.equals("Success")){
		report_out.newLine();
		report_out.write(new Date()+" <Info> IGI User suspended: "+work.code);		
	} else{
		report_out.newLine();
		report_out.write(new Date()+" <Error> Error occured while suspending : "+work.code);			
	}
} else{
	//call update api
	task.logmsg("Debug","Calling updateUser API for User: "+work.code);
	var result = main.updateUser(work);	
	
	if(result.equals("Success")){
		report_out.newLine();
		report_out.write(new Date()+" <Info> IGI User updated: "+work.code);		
	} else{
		report_out.newLine();
		report_out.write(new Date()+" <Error> Error occoured while updating: "+work.code);			
	}
}]]></parameter>
                </Script>
                <Branch name="Island">
                    <ModTime>1502377113252</ModTime>
                    <Script name="CheckData">
                        <ModTime>1502377083381</ModTime>
                        <parameter name="script"><![CDATA[task.logmsg("Debug","In Island mode");
//task.dumpEntry(work);]]></parameter>
                    </Script>
                    <Connector name="S_USERJDBCConnector">
                        <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                        <ModTime>1502377090816</ModTime>
                        <ConnectorMode>Lookup</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                            <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                            <parameter encrypted="true" name="jdbcPassword"/>
                            <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                            <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                            <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNameSUser}</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>createdOn</Name>
                                <Type>simple</Type>
                                <Simple>CREATED_ON</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>division</Name>
                                <Type>simple</Type>
                                <Simple>ATTR1</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>erlocale</Name>
                                <Type>simple</Type>
                                <Simple>ATTR5</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>imco</Name>
                                <Type>simple</Type>
                                <Simple>ATTR3</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>mobileNumber</Name>
                                <Type>simple</Type>
                                <Simple>CELLULARPHONE</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>notesMail</Name>
                                <Type>simple</Type>
                                <Simple>ATTR2</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>userStatus</Name>
                                <Type>simple</Type>
                                <Simple>USERSTATUS</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>workLocation</Name>
                                <Type>simple</Type>
                                <Simple>ATTR4</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>ACCOUNTDISABLED</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                                <NativeSyntax>DECIMAL</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ADDRESS</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>AGC_ORGANIZATIONAL_UNIT</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                                <NativeSyntax>DECIMAL</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>AGC_PERSON</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                                <NativeSyntax>DECIMAL</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR1</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR2</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR3</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR4</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR5</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>BIRTHDATE</Name>
                                <NativeSyntax>TIMESTAMP</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>BIRTHPLACE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CELLULARPHONE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CITY</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>COUNTRY</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATED_ON</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                                <NativeSyntax>TIMESTAMP</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATION_DATE</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                                <NativeSyntax>TIMESTAMP</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATION_USER</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>DISABLED_ON</Name>
                                <NativeSyntax>TIMESTAMP</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>EMAIL</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FAX</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FIRSTNAME</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FISCALCODE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ID</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                                <NativeSyntax>DECIMAL</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>IDENTITYDOC_NUMBER</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>IDENTITYDOC_TYPE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LASTNAME</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LAST_MOD_TIME</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                                <NativeSyntax>TIMESTAMP</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LAST_MOD_USER</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>NOTES</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>OFFICE_TELEPHONE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PHOTO</Name>
                                <NativeSyntax>BLOB</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PROVINCE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>SERIAL_NUMBER</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>SEX</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>TELEPHONE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERID</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERSTATUS</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                                <NativeSyntax>DECIMAL</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERTYPE</Name>
                                <Syntax>java.lang.String</Syntax>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ZIPCODE</Name>
                                <NativeSyntax>VARCHAR</NativeSyntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>ACCOUNTDISABLED</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ADDRESS</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>AGC_ORGANIZATIONAL_UNIT</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>AGC_PERSON</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR1</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR2</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR3</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR4</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ATTR5</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>BIRTHDATE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>BIRTHPLACE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CELLULARPHONE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CITY</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>COUNTRY</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATED_ON</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATION_DATE</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>CREATION_USER</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>DISABLED_ON</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>EMAIL</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FAX</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FIRSTNAME</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>FISCALCODE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ID</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>IDENTITYDOC_NUMBER</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>IDENTITYDOC_TYPE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LASTNAME</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LAST_MOD_TIME</Name>
                                <Syntax>java.sql.Timestamp</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>LAST_MOD_USER</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>NOTES</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>OFFICE_TELEPHONE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PHOTO</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PROVINCE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>SERIAL_NUMBER</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>SEX</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>TELEPHONE</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERSTATUS</Name>
                                <Syntax>java.math.BigDecimal</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>USERTYPE</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>ZIPCODE</Name>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>15905f586e3</Key>
                                <Attribute>USERID</Attribute>
                                <Operator>equals</Operator>
                                <Value>$code</Value>
                            </LinkCriteriaItem>
                            <LinkCriteriaItem>
                                <Key>1590783ee71</Key>
                                <Attribute>USERSTATUS</Attribute>
                                <Operator>equals</Operator>
                                <Value>1</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script>task.logmsg("Debug","Initializing S_UserJdbcConnector");</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Error while connecting to S_USER DB Table");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IGIBPSync " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IGIBPSync " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error while connecting to S_USER DB Table");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_nomatch">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_nomatch</Name>
                                <Script><![CDATA[task.logmsg("Debug","Entry not found in S_USER. Skiping "+work.code);
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                    </Connector>
                    <Branch name="ScopeisIBM">
                        <ModTime>1502377099206</ModTime>
                        <Connector name="IGIQEV-IBM">
                            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                            <ModTime>1502377099206</ModTime>
                            <ConnectorMode>AddOnly</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV01FilePath}</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                                <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                                <parameter name="csvColumns">@SUBSTITUTE{property.IGIBPSync:QEVCsvOrder}</parameter>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>/AttributeMaps/IGIQEV01_output_Output</InheritFrom>
                                <AttributeMapItem>
                                    <Name>Employee Status Action</Name>
                                    <Type>advanced</Type>
                                    <Script>work.employeeStatusAction</Script>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>Employee Type</Name>
                                    <Type>simple</Type>
                                    <Simple>employeeType</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>IsManager</Name>
                                    <Type>advanced</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Script>work.isManager</Script>
                                    <Simple>Is Manager</Simple>
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>UID</Name>
                                    <Type>simple</Type>
                                    <Simple>identityUID</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>Common Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Company Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Department Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Division</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Email Address</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Country Code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Status Action</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Type</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>First Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>IsManager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Last Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Country Code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Employee Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Middle Initial</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile Phone Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>UID</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Work Location</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>erlocale</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>Common Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Company Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Department Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Division</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Email Address</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Country Code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Status Action</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Type</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>First Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>IsManager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Last Name</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Country Code</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Employee Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Middle Initial</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile Phone Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone Number</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>UID</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Work Location</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>erlocale</Name>
                                    <Syntax>java.lang.String</Syntax>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_initialize">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>before_initialize</Name>
                                    <Script>task.logmsg("Debug","Initializing IGIQEV-IBM");</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_fail">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error while writing csv file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> IGIQEV-IBM output entry written masterUID:	"+work.code);]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                        </Connector>
                        <ScriptCondition><![CDATA[var iscope =work.getAttribute("Scope");
task.logmsg("iscope:::"+iscope);
if(iscope == "ibm"){
	return true;
}
return false;]]></ScriptCondition>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="ScopeisNonIBM">
                        <ModTime>1502377106783</ModTime>
                        <Connector name="IGIQEV-NonIBM">
                            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                            <ModTime>1502377106783</ModTime>
                            <ConnectorMode>AddOnly</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV01FilePath}</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                                <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                                <parameter name="csvColumns">@SUBSTITUTE{property.IGIBPSync:QEVCsvOrder}</parameter>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>/AttributeMaps/IGIQEV01_output_Output</InheritFrom>
                                <AttributeMapItem>
                                    <Name>EmployeeType</Name>
                                    <Type>simple</Type>
                                    <Simple>employeeType</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>IsManager</Name>
                                    <Type>advanced</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Script>work.isManager</Script>
                                    <Simple>Is Manager</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>UID</Name>
                                    <Type>simple</Type>
                                    <Simple>identityUID</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>Common Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Company Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Department Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Division</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Email Address</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Country Code</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Status Action</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Type</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>First Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>IsManager</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Last Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Country Code</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Employee Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Middle Initial</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile Phone Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>UID</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Work Location</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>erlocale</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_initialize">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>before_initialize</Name>
                                    <Script>task.logmsg("Debug","Initializing IGIQEV-NonIBM");</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_fail">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error while writing csv file");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> IGIQEV-NonIBM output entry written masterUID:	"+work.code);]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                        </Connector>
                        <ScriptCondition><![CDATA[var iscope =work.getAttribute("Scope");
task.logmsg("iscope:::"+iscope);
if(iscope == "nonibm"){
	return true;
}
return false;]]></ScriptCondition>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="scopeisALL">
                        <ModTime>1502377113252</ModTime>
                        <Connector name="IGIQEV-Both">
                            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                            <ModTime>1502377113252</ModTime>
                            <ConnectorMode>AddOnly</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="filePath">@SUBSTITUTE{property.IGIBPSync:QEV01FilePath}</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                                <parameter name="csvColumnSeparator">@SUBSTITUTE{property.IGIBPSync:CSVSeparator}</parameter>
                                <parameter name="csvColumns">@SUBSTITUTE{property.IGIBPSync:QEVCsvOrder}</parameter>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>/AttributeMaps/IGIQEV01_output_Output</InheritFrom>
                                <AttributeMapItem>
                                    <Name>EmployeeType</Name>
                                    <Type>simple</Type>
                                    <Simple>employeeType</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>IsManager</Name>
                                    <Type>advanced</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Script>work.isManager</Script>
                                    <Simple>Is Manager</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>Last Name</Name>
                                    <Type>advanced</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Script>work.lastName</Script>
                                    <Simple>LastName</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>UID</Name>
                                    <Type>simple</Type>
                                    <Simple>identityUID</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>Common Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Company Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Department Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Division</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Email Address</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Country Code</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Status Action</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Employee Type</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>First Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>IsManager</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Last Name</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Country Code</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Manager Employee Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Middle Initial</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Mobile Phone Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Telephone Number</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>UID</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>Work Location</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>erlocale</Name>
                                    <NativeSyntax>java.lang.String</NativeSyntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_initialize">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>before_initialize</Name>
                                    <Script>task.logmsg("Debug","Initializing IGIQEV-Both");</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_fail">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error while writing csv file");report_out.newLine();
report_out.write(new Date()+"<Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+"<Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <InheritFrom>[no inheritance]</InheritFrom>
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> IGIQEV-Both output entry written masterUID:	"+work.code);]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                        </Connector>
                        <ScriptCondition><![CDATA[var iscope =work.getAttribute("Scope");
task.logmsg("iscope:::"+iscope);
if(iscope == "both"){
	return true;
}
return false;]]></ScriptCondition>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <ScriptCondition><![CDATA[var runmode = work.getAttribute("Mode");
task.logmsg("runmode:::"+runmode);
if(runmode == "island"){
	return true;
}
return false;]]></ScriptCondition>
                    <Conditions/>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="IGIAssignManager">
            <ModTime>1729441627877</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog2</Name>
                    <Script><![CDATA[var stats = task.getStats();

report_out.newLine();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.write("********IAM_AssignManager******** ");
report_out.newLine();
report_out.newLine();
report_out.write("Number of entries read            : " + stats.numGet());report_out.newLine();report_out.newLine();
report_out.write("Number of new entries written     : " + stats.numAdd());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries modified    : " + stats.numModify());report_out.newLine();report_out.newLine();
report_out.write("Number of old entries suspended   : " + stats.numDelete());report_out.newLine();report_out.newLine();
report_out.write("Number of entries skipped         : " + stats.numSkipped());report_out.newLine();report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.newLine();

var calendar2 = new java.util.GregorianCalendar();
var endDate = calendar2.getTime();
var dateStr = system.formatDate(endDate, "EEE, d MMM yyyy");
var timeStr = system.formatDate(endDate, "HH:mm:ss aaa");
report_out.write("DATE : " + dateStr);report_out.newLine();
report_out.write("End Run : " + timeStr);report_out.newLine();
report_out.newLine();
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();
report_out.write("------------------------IAM_AssignManager Report End----------------------");
report_out.newLine();
report_out.write("==============================================================================");
report_out.newLine();report_out.newLine();report_out.newLine();report_out.newLine();

report_out.close();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onsuccess">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>onsuccess</Name>
                    <Script>task.logmsg("[Report location] - "+report_loc)</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var sdf = new java.text.SimpleDateFormat("yyyyMMddHHmmss");
var date = new Date();
var today = sdf.format(date);

var reportFilePath = system.getExternalProperty("ReportFilePathBPSync");
var reportFileName = system.getExternalProperty("AssignManagerReportFileName");
var report_out = new java.io.BufferedWriter(new java.io.FileWriter(reportFilePath+"//"+reportFileName+"-"+today+".txt"));
var report_loc = reportFilePath+"//"+reportFileName+"-"+today+".txt"
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================IAM_AssignManager=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="getManagerAttributes" state="Enabled"/>
                    <Component name="managerLookupOnBP" state="Enabled"/>
                    <Component name="IF" state="Enabled"/>
                    <Component name="getManagerUser" state="Enabled"/>
                    <Component name="updateIGIUser" state="Simulated"/>
                    <Component name="getIGIUser" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="getIGIUser">
                    <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                    <ModTime>1496236303815</ModTime>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                        <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                        <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                        <parameter encrypted="true" name="ideasPassword"/>
                        <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                        <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                        <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                        <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>company</Name>
                            <Type>simple</Type>
                            <Simple>company</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>userCode</Name>
                            <Type>simple</Type>
                            <Simple>code</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>country</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>identityUID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitId</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>phoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>country</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>identityUID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitId</Name>
                            <Syntax>java.lang.Long</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgUnitName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>phoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing getIGIUser");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IAM_AssignManager " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_ok</Name>
                            <Script><![CDATA[task.logmsg("Reading IGI User "+work.userCode);
if(work.company==''){
	task.logmsg("Company is null. Skipping "+work.userCode);
	report_out.newLine();
	report_out.write(new Date()+" <Info> Company is null. Skipping: "+work.userCode);
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>end_of_data</Name>
                            <Script><![CDATA[error_work = system.newEntry();

status = "Success"
message= ("IAM_AssignManager completed");

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager completed " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();
report_out.newLine();
report_out.write("=============================================================================");
report_out.newLine();
report_out.write("============================End of Data=========================");
report_out.newLine();
report_out.write("=============================================================================");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                    <LookupLimit>0</LookupLimit>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="getManagerAttributes">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ModTime>1496236316340</ModTime>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCDriver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUserName}</parameter>
                        <parameter encrypted="true" name="jdbcPassword"/>
                        <parameter name="jdbcSchema">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCSchema}</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCUrl}</parameter>
                        <parameter name="jdbcTable">@SUBSTITUTE{property.IGIBPSync:ISIGJDBCTableNameUSER_ERC}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>IAMmanagerCountryCode</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[if(conn.ATTR13==''){
	task.logmsg("managerCountryCode is null for user "+work.userCode);
	report_out.newLine();
	report_out.write(new Date()+" <Info> managerCountryCode is null for user: "+work.userCode);
	system.skipEntry();
	
}else{
	//task.logmsg("conn.ATTR13 "+conn.ATTR13)
	ret.value = conn.ATTR13;
}]]></Script>
                            <Simple>ATTR13</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>IAMmanagerEmployeeNumber</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[if(conn.ATTR12==''){
	task.logmsg("managerEmployeeNumber is null for user"+work.userCode);
	report_out.newLine();
	report_out.write(new Date()+" <Info> managerEmployeeNumber is null for user: "+work.userCode);
	system.skipEntry();
	
}else{
	//task.logmsg("conn.ATTR12 "+conn.ATTR12)
	ret.value = conn.ATTR12;
}]]></Script>
                            <Simple>ATTR12</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                            <NativeSyntax>TIMESTAMP</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                            <NativeSyntax>DECIMAL</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>ACCOUNT_EXPIRY_DATE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_CAUSE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACTION_TYPE_LAST</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ADDRESS</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>AD_OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR1</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR10</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR11</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR12</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR13</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR14</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR15</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR3</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR4</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR5</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR6</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR7</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR8</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ATTR9</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTHDAY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>BIRTH_PLACE</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CITY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>COUNTRY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>CURRENTOU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DELETED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DISABLED</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>EMAIL</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GENDER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GIVEN_NAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ID</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IDENTIFICATION_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_TIME</Name>
                            <Syntax>java.sql.Timestamp</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>LAST_MOD_USER</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>NATION</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>OU</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PHONE_NUMBER</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PM_CODE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>POST_EVENT</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROCESSED</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SCHEDULE</Name>
                            <Syntax>java.math.BigDecimal</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SKIP</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>SURNAME</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>USER_TYPE</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ZIPCODE</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>159cf5f66b1</Key>
                            <Attribute>PM_CODE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$userCode</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>15a8deabc5d</Key>
                            <Attribute>DISABLED</Attribute>
                            <Operator>equals</Operator>
                            <Value>0</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing getManagerAttributes");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IAM_AssignManager " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_multiple">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_multiple</Name>
                            <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> Multiple manager entries found for User: "+work.userCode);
task.logmsg("Multiple manager entries found for User "+work.userCode);
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[//User is inactive so skip it.
report_out.newLine();
report_out.write(new Date()+" <Info> User is inactive. skipping: "+work.userCode);
task.logmsg("User is inactive so skipping "+work.userCode);
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Connector name="managerLookupOnBP">
                    <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
                    <ModTime>1488452671591</ModTime>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.IGIBPSync:BluePageSerachBase}</parameter>
                        <parameter name="ldapSearchFilter">@SUBSTITUTE{property.IGIBPSync:BluePageSearchFilter}</parameter>
                        <parameter name="ldapSearchScope">@SUBSTITUTE{property.IGIBPSync:BluePageSearchScope}</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.IGIBPSync:BluePageLDAPUrl}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>managerUID</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accessHint</Name>
                            <NativeSyntax>MAY/DN/DN pointer to an accessRole or accessGroup.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accountHint</Name>
                            <NativeSyntax>MAY/DN/DN pointer to an account directory object.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>additional</Name>
                            <NativeSyntax>MAY/Directory String{256}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>administrator</Name>
                            <NativeSyntax>MAY/Directory String{32}/Administrator of entry</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateAddress1</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateAddress2</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/BPR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateLocalityName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateNode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute - Employee Alternate Node</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatePostalCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{40}/Postal code.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateSt</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/BPR3 Addition - This attribute contains the alternate full name of a state or province (alternateStateOrProvinceName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateTieline</Name>
                            <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateUserId</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>area</Name>
                            <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>audio</Name>
                            <NativeSyntax>MAY/Binary/Contains a sound file in binary format.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/DN{1000}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupCountryCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupSerialNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>bluepagesNotesIdError</Name>
                            <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/Defines the building name associated with the entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>businessCategory</Name>
                            <NativeSyntax>MAY/Directory String/This attribute describes the kind of business performed by an organization.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/This attribute contains a two-letter ISO 3166 country code (countryName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupDateTime</Name>
                            <NativeSyntax>MAY/Directory String{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                            <NativeSyntax>MAY/Directory String/vehicle license plate tag</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cellServiceProvider</Name>
                            <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MUST/String/This is the X.500 commonName attribute, which contains a name of an object.  If the object corresponds to a person, it is typically the persons full name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{128}/Contains the name of a country. Often, the country attribute is used to describe a two-character code for a country, and  the friendlyCountryName attribute is used to describe the actual country name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>configPtr</Name>
                            <NativeSyntax>MAY/DN/DN pointer to a cimConfiguration-derived directory entry such as an ePropertySet.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>contractorCompany</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>contractorRecordExpiration</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{128}/BPR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coreDataIntegrity</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{32}/Indicator of whether core attributes are trusted</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenter</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{14}/2 character ISO country code, followed by the existing account department.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenterEffectiveDate</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Cost Center Effective Date - Blue Harmony</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>deleter</Name>
                            <NativeSyntax>MAY/Directory String{240}/Exploiter DN of delete requester</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>department</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/DN{256}/DN of department entry</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>departmentNumber</Name>
                            <NativeSyntax>MAY/Directory String/identifies a department within an organization.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Bluepages - Department Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                            <NativeSyntax>MAY/Directory String{1024}/Attribute common to CIM and LDAP schema to provide lengthy description of a directory object entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>destinationIndicator</Name>
                            <NativeSyntax>MAY/Directory String/This attribute is used for the telegram service.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryAlias</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayName</Name>
                            <NativeSyntax>MAY/Directory String/A name used in displaying an entry in a one-line summary list.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Bluepages - Division Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>divDept</Name>
                            <NativeSyntax>MAY/DN{128}/Custom - Blue Pages Attribute - HR Sourced</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailAddress</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeCountryCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Bluepages - Employee Personel Systems Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                            <NativeSyntax>MAY/Directory String/Identifies the entrys employee number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{128}/Identifies the entrys type of employment.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entryType</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{64}/Bluepages - Used to identify special entry types such as a test ID</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Identifies the fax number at which the entry can be reached.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTieline</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{64}/Floor location.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>generationQualifier</Name>
                            <NativeSyntax>MAY/String/Contains the part of the name which typically is the suffix, as in IIIrd.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>glTeamLead</Name>
                            <NativeSyntax>MAY/DN{64}/Global Extended Team Leader</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>historicPassword1</Name>
                            <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>historicPassword2</Name>
                            <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>historicPassword3</Name>
                            <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>historicPassword4</Name>
                            <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>historicPassword5</Name>
                            <NativeSyntax>MAY/Binary{128}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homeFax</Name>
                            <NativeSyntax>MAY/Telephone Number/Identifies the entrys home fax number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePhone</Name>
                            <NativeSyntax>MAY/Telephone Number/Identifies the entrys home phone number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePostalAddress</Name>
                            <NativeSyntax>MAY/Directory String/Identifies the entrys home mailing address. This field is  intended to include multiple lines, but each line within the  entry should be separated by a dollar sign (\24). To represent  an actual dollar sign (\24) or backslash (\) within this text, use  the escaped hex values \24 and \5c respectively.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrActive</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM Active/Inactive Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrAssignee</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM International Assignee In/Out Indicator</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrAssignment</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM International assignment indicator</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/ODM HRIW Company code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCountryCode</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM ISO 3166 Country Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDepartment</Name>
                            <NativeSyntax>MAY/Directory String{32}/ODM Career Department ID</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDivision</Name>
                            <NativeSyntax>MAY/Directory String{32}/ODM Division Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrEmployeeType</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM Employee type</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFamilyName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM Family name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFirstName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM First name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrInitial</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM Initials</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrLastName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM Last name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerIndicator</Name>
                            <NativeSyntax>MAY/Directory String{32}/Is-manager status in ODM</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerPSC</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM Manager PSC</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerSerial</Name>
                            <NativeSyntax>MAY/IA5 String{16}/ODM Manager Serial Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrMiddleName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM Middle name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrgUnitCode</Name>
                            <NativeSyntax>MAY/Directory String{10}/Similar to a department, but can contain employees from multiple countries.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/HR organization code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOtherName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM Other name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPSC</Name>
                            <NativeSyntax>MAY/Directory String{16}/ODM PSC</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPreferredName</Name>
                            <NativeSyntax>MAY/Directory String{64}/ODM Preferred first name</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrSerialNumber</Name>
                            <NativeSyntax>MAY/IA5 String{240}/ODM Serial Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - IBM Location Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmSerialNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infoTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                            <NativeSyntax>MAY/String/The initials attribute contains the initials of some or all of an individuals names, but not the surname(s).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalEmail</Name>
                            <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalMailDrop</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{32}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internationalISDNNumber</Name>
                            <NativeSyntax>MAY/IA5 String/Contains the ISDN number of the entry. This is in the internationally agreed format for ISDN addresses given in CCITT Rec. E. 164.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>invalidManagerDate</Name>
                            <NativeSyntax>MAY/Directory String{8}/DRMS Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/IP Telephony Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>isManager</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/BluePages - Manager Identifier</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>isNonExpiring</Name>
                            <NativeSyntax>MAY/Directory String{10}/Password isNonExpiring status (true false expired)</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobResponsibilities</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jpegPhoto</Name>
                            <NativeSyntax>MAY/Binary/Contains a JPEG photo of the entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                            <NativeSyntax>MAY/String/This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>labeledURI</Name>
                            <NativeSyntax>MAY/Directory String/Uniform Resource Identifier with optional label as defined in RFC2079.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>locationCity</Name>
                            <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/Identifies a users primary email address (the email address retrieved and displayed by white-pages lookup applications).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/DN{1000}/Identifies the distinguished name of the entrys manager.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerCountryCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Personel System Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerSerialNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Bluepages - Manager Serial Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>middleInitial</Name>
                            <NativeSyntax>MAY/Directory String{32}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>middleName</Name>
                            <NativeSyntax>MAY/String/Identifies the entrys middle name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mobile</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys mobile or cellular phone number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nativeFirstName</Name>
                            <NativeSyntax>MAY/String/BluePages - First name in native language</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nativeLastName</Name>
                            <NativeSyntax>MAY/String/BluePages - Last name in native language</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesEmail</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Notes Cannonical Name - Sourced From NAB</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesId</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/BluePages - Notes canonical ID without the mail domain - Sourced from NAB.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesMailDomain</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Domain - Sourced From NAB</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesMailFile</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Custom - Blue Pages Attribute - Lotus Notes Mail File</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesMailServer</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Mail Server - Sourced From NAB</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesPublicKey</Name>
                            <NativeSyntax>MAY/Binary{4096}/Bluepages - Notes Certificate - Sourced from NAB</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesShortName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Lotus Notes Short Name - Sourced From NAB</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectClass</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MUST/OID/The values of the objectClass attribute describe the kind of object which an entry represents.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Entry is found in ODM - Y or N</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>organizationalStatus</Name>
                            <NativeSyntax>MAY/Directory String/Specifies a category by which a person is often referred to in an organization.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>otherMailbox</Name>
                            <NativeSyntax>MAY/Directory String/Specifies values for electronic mailbox types other than X.400 and rfc822.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/This attribute contains the name of an organization (organizationName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pager</Name>
                            <NativeSyntax>MAY/Telephone Number{32}/Identifies the entrys pager phone number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pagerId</Name>
                            <NativeSyntax>MAY/Directory String{64}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pagerServiceProvider</Name>
                            <NativeSyntax>MAY/Directory String{240}/BPR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pagerType</Name>
                            <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordHistoryForChanges</Name>
                            <NativeSyntax>MAY/Directory String{256}/Password History for Change Events</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordHistoryForResets</Name>
                            <NativeSyntax>MAY/Directory String{256}/Password History for Reset Events</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL on account of not having been changed in 186 days</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsReset</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this password has been reset, not changed</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Boolean{16}/Password Is Reset By IIP Administrator - for ED team use only</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckout</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Boolean{5}/Bluepages - Indicates this entrys password has been set to NULL due to 5 unsuccesful logins</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordModifyTimestamp</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Last time the users password was changed.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pdif</Name>
                            <NativeSyntax>MAY/Directory String{1}/Bluepages - Indicates If HR-Sourced CallUp data usedin this entry was modified by the CallUp Admins - Sourced From CallUp(PDIF)</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personalTitle</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String/Specifies a personal title for a person. Examples of personal titles are  Mr, Ms, Dr, Prof and Rev.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>phoneMailNumber</Name>
                            <NativeSyntax>MAY/Telephone Number{32}/BPR3 Addition - The Phone Mail Box of a Person</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>photo</Name>
                            <NativeSyntax>MAY/Binary/Contains a photo, in binary form, of the entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{128}/Physcial delivery office number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postOfficeBox</Name>
                            <NativeSyntax>MAY/Directory String/Post office box number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalAddress</Name>
                            <NativeSyntax>MAY/Directory String/Identifies the entry\27s mailing address. This field is intended to include multiple lines. When represented in LDIF format, each line should be separated by a dollar sign (\24).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalCode</Name>
                            <NativeSyntax>MAY/Directory String/Postal code.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredDeliveryMethod</Name>
                            <NativeSyntax>MAY/Directory String/Identifies the entry\27s preferred contact or delivery method.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredFirstName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/BPR3 Addition - Used to hold the part of a persons name which is not their surname nor middle name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/Preferred email address for Single Sign On</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLanguage</Name>
                            <NativeSyntax>MAY/Directory String/A persons preferred written or spoken language</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLastName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/String/BPR3 Addition - Duplicates the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>previousManagerSerial</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/IA5 String{16}/Previous Manager Serial Number - for ED team use only</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryNode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryUserId</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{16}/Custom - BluePages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>registeredAddress</Name>
                            <NativeSyntax>MAY/String/This attribute contains a postal address for receiving telegrams or expedited documents. The recipient\27s signature is usually required on delivery.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>roomNumber</Name>
                            <NativeSyntax>MAY/Directory String/Specifies the room number of an object. Note that the commonName attribute should be used for naming room  objects.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretary</Name>
                            <NativeSyntax>MAY/DN{1000}/Identifies the entrys secretary or administrative assistant.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretaryCountryCode</Name>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Personel System Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretarySerialNumber</Name>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Employee Serial Number</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>seeAlso</Name>
                            <NativeSyntax>MAY/String/Identifies another directory server entry that may contain information related to this entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String/This attribute contains the serial number of a device.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Shift code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MUST/String/This is the X.500 surname attribute, which contains the family name of a person.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>st</Name>
                            <NativeSyntax>MAY/String/This attribute contains the full name of a state or province (stateOrProvinceName).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>street</Name>
                            <NativeSyntax>MAY/Directory String/This attribute contains the physical address of the object to which the entry corresponds, such as an address for package delivery (streetAddress).</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Telephone number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>teletexTerminalIdentifier</Name>
                            <NativeSyntax>MAY/Directory String/Teletex terminal identifier.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telexNumber</Name>
                            <NativeSyntax>MAY/Directory String/Telex number.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>territory</Name>
                            <NativeSyntax>MAY/Directory String{64}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>thumbNailLogo</Name>
                            <NativeSyntax>MAY/Binary/Thumbnail logo assoicated with a user.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>thumbNailPhoto</Name>
                            <NativeSyntax>MAY/Binary/Thumbnail photo associated with a user.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Telephone Number{32}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timeStampBPGuiRI</Name>
                            <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the BPGui Reimagined application</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timeStampOnboard</Name>
                            <NativeSyntax>MAY/Directory String{32}/The LOM server timestamp for the onboard application</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timeStampWorkday</Name>
                            <NativeSyntax>MAY/Directory String{20}/The LOM server timestamp for the HRMS Workday application</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for BluePages</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the feed program</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampHRMS</Name>
                            <NativeSyntax>MAY/Directory String{256}/The LOM server timestamp for the HRMS application</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                            <NativeSyntax>MAY/String/This attribute contains the title, such as Vice President, of a person in their organizational context. The personalTitle attribute would be used for a persons title independent of their job function.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tradeArea</Name>
                            <NativeSyntax>MAY/Directory String{16}/Custom - Blue Pages Attribute</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{256}/Typically a user shortname or userid.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uniqueIdentifier</Name>
                            <NativeSyntax>MAY/Directory String/Specifies a unique identifier for an object represented in the Directory. The domain within which the identifier is unique, and the exact semantics of the identifier, are for local definition.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userCertificate</Name>
                            <NativeSyntax>MAY/Binary/Used to represent certificates from one or more Certification Authorities representing a user.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPKCS12</Name>
                            <NativeSyntax>MAY/Binary/PKCS \2312 PFX PDU for exchange of personal identity information</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPassword</Name>
                            <NativeSyntax>MAY/Binary/Holds a password value for a distinguished name.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userSMIMECertificate</Name>
                            <NativeSyntax>MAY/Binary/Signed message used to support S/MIME</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ventureCode</Name>
                            <NativeSyntax>MAY/Directory String{5}/IBM Venture Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{240}/Bluepages - Work Location Code</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/DN{240}/Bluepages - DN of the ibmWorkLocation entry which corresponds to the workLoc attribute in of this same ibmPerson entry - Generated from workLoc value by Feed</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                            <Syntax>java.lang.String</Syntax>
                            <NativeSyntax>MAY/Directory String{1}/PR3 Addition</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x121Address</Name>
                            <NativeSyntax>MAY/IA5 String/Defines the X.121 address of the entry.</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x500UniqueIdentifier</Name>
                            <NativeSyntax>MAY/Binary/Used to distinguish between objects when a distinguished name has been reused. This is a different attribute type from both the uid and uniqueIdentifier types.</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateaddress1</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateaddress2</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatelocalityname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatenode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatepostalcode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatest</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateuserid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupcountrycode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupserialnumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>contractorcompany</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>contractorrecordexpiration</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coredataintegrity</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costcenter</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costcentereffectivedate</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>department</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryalias</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailaddress</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeecountrycode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeetype</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entrytype</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimiletelephonenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimiletieline</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmserialnumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infotelephonenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalmaildrop</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ismanager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobresponsibilities</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managercountrycode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerserialnumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mobile</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesMailFile</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesMailServer</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesemail</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmaildomain</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesshortname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckOut</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordModifyTimestamp</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordisreset</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personaltitle</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLastName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredfirstname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>previousManagerSerial</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primarynode</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryuserid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialnumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephonenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>true</AdvancedLinkMode>
                        <Script><![CDATA[var mgrSerial = work.getString("IAMmanagerEmployeeNumber");
var mgrCnt = work.getString("IAMmanagerCountryCode");
var filter = "(uid=" + mgrSerial + mgrCnt + ")";
task.logmsg("filter="+filter);
ret.filter = filter;
]]></Script>
                        <LinkCriteriaItem>
                            <Key>15a1c9bd4ea</Key>
                            <Operator>equals</Operator>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_initialize">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>before_initialize</Name>
                            <Script>task.logmsg("Initializing LookUpBluePage");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>connect_init</Name>
                            <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to Blue Page Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IAM_AssignManager " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading Blue Page User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_ok</Name>
                            <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> Manager found on BP for user - "+work.getAttribute("userCode"));
task.logmsg("Manager Serial Number and Country Code matched on BP for user -  "+work.getAttribute("userCode"));
work.setAttribute("managerFound","true");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> Manager Serial Number and Country Code didn't match on BP for user - "+work.getAttribute("userCode"));
task.logmsg("No match found on BP. Skipping");
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Branch name="IF">
                    <ModTime>1496236348223</ModTime>
                    <Connector name="getManagerUser">
                        <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                        <ModTime>1496236333753</ModTime>
                        <ConnectorMode>Lookup</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                            <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                            <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                            <parameter encrypted="true" name="ideasPassword"/>
                            <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                            <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                            <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                            <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>managerCode</Name>
                                <Type>simple</Type>
                                <Simple>code</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>code</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>company</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>country</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>identityUID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>lastName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>name</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitId</Name>
                                <Syntax>java.lang.Long</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userType</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>code</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>company</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>country</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>dn</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>identityUID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>lastName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>name</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitCode</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitId</Name>
                                <Syntax>java.lang.Long</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>orgUnitName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>phoneNumber</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>userType</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>159cf64ce70</Key>
                                <Attribute>identityUID</Attribute>
                                <Operator>equals</Operator>
                                <Value>$managerUID</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script>task.logmsg("Initializing getManagerUser");</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Could not be opened");report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IAM_AssignManager " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_ok">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_ok</Name>
                                <Script>task.logmsg("managerCode="+work.managerCode);</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_nomatch">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>lookup_nomatch</Name>
                                <Script><![CDATA[task.logmsg("Manager not found in IGI. Skiping "+work.userCode);
report_out.newLine();
report_out.write(new Date()+" <Info> Manager not found in IGI. Skiping: "+work.userCode);
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <LookupLimit>10</LookupLimit>
                    </Connector>
                    <Connector name="updateIGIUser">
                        <InheritFrom>system:/Connectors/isig.CustomUser</InheritFrom>
                        <ModTime>1496236348223</ModTime>
                        <ConnectorMode>Update</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="ideasApplication">@SUBSTITUTE{property.IGIBPSync:ISIGApplicationName}</parameter>
                            <parameter name="ideasConnectorClass">@SUBSTITUTE{property.IGIBPSync:ISIGConnectorClassName}</parameter>
                            <parameter name="ideasFactoryInitial">@SUBSTITUTE{property.IGIBPSync:ISIGFactoryClassName}</parameter>
                            <parameter encrypted="true" name="ideasPassword"/>
                            <parameter name="ideasProviderUrl">@SUBSTITUTE{property.IGIBPSync:ISIGURL}</parameter>
                            <parameter name="ideasReaml">@SUBSTITUTE{property.IGIBPSync:ISIGREALM}</parameter>
                            <parameter name="ideasUser">@SUBSTITUTE{property.IGIBPSync:ISIGUSER}</parameter>
                            <parameter name="ideasUserType">@SUBSTITUTE{property.IGIBPSync:ISIGUserType}</parameter>
                        </Configuration>
                        <ComputeChanges>false</ComputeChanges>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>optional.IAMerSupervisor</Name>
                                <Type>simple</Type>
                                <Add>false</Add>
                                <Simple>managerCode</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>159cf644b55</Key>
                                <Attribute>code</Attribute>
                                <Operator>equals</Operator>
                                <Value>$userCode</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="before_initialize">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>before_initialize</Name>
                                <Script>task.logmsg("Initializing UpdateIGIPerson");</Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="close_fail">
                                <Name>close_fail</Name>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>connect_init</Name>
                                <Script><![CDATA[task.logmsg("Debug-Error: Error while connecting to IGI.");
report_out.newLine();
report_out.write(new Date()+" <Exception>            : " + "Connection to IGI Users Could not be opened");report_out.newLine();
report_out.write(new Date()+"<Exception>            : " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+"<Message>             : " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
//system.abortAssemblyLine("Error connecting to file");
//system.skipTo("SetError");

error_work = system.newEntry();

status = "Failed"
message= ("IAM_AssignManager " + error.getAttribute("exception") + " - " + error.getAttribute("message"));

error_work.setAttribute("callmessage",message);
error_work.setAttribute("callstatus",status);
//Convert date date to same as the Oracle date value

var dttm = java.sql.Timestamp(java.util.Date().getTime());
var sdttm = dttm.toString();
sdttm = sdttm.substring(0,19);
curdate = system.parseDate((sdttm),"yyyy-MM-dd HH:mm:ss");

subject = ("IAM_AssignManager " + curdate);
error_work.setAttribute("callsubject",subject);

task.setWork(error_work);
task.shutdown();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in reading IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="default_ok">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>default_ok</Name>
                                <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> IGI User Updated 	   - "+work.getAttribute("userCode"));
task.logmsg("IGI User Updated 	   - "+work.getAttribute("userCode"));]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="update_fail">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>update_fail</Name>
                                <Script><![CDATA[system.dumpEntry(error);
report_out.newLine();
report_out.write(new Date()+" <Exception>				: " + "Error in Updating IGI User");report_out.newLine();
report_out.write(new Date()+" <Exception>           	: " + error.getAttribute("exception").getValue());report_out.newLine();
report_out.write(new Date()+" <Message>				: " + error.getAttribute("message").getValue());report_out.newLine();
report_out.newLine();report_out.newLine();
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="update_multiple">
                                <InheritFrom>[no inheritance]</InheritFrom>
                                <Name>update_multiple</Name>
                                <Script><![CDATA[report_out.newLine();
report_out.write(new Date()+" <Info> Multiple Entries found having Code:		"+work.getAttribute("userCode"));
task.logmsg("Multiple Entries found having Code:		"+work.getAttribute("userCode"))]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>managerFound</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>true</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="Delete an Account">
            <ModTime>1729441627857</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499946215620</ModTime>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="username">muralidk@in.ibm.com</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>15d3bc2df13</Key>
                            <Attribute>id</Attribute>
                            <Operator>equals</Operator>
                            <Value>$erpagerdutyid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script><![CDATA[work.removeAllAttributes();
setStatusSuccessful();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
work.setProperty(com.ibm.di.dispatcher.Defs.CACHE_CONNECTORS, "false");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="DumpWorkEntry">
                    <ModTime>1499946172839</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toDeltaString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="Create New Account">
            <ModTime>1729441628018</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499933046044</ModTime>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="username">muralidk@in.ibm.com</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>addonly_ok</Name>
                            <Script><![CDATA[work.removeAllAttributes();
setStatusSuccessful();
id = thisConnector.connector.getParam("id");
work.erpagerdutyid=id;
log("id is : " + id);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script><![CDATA[work.removeAllAttributes();
setStatusSuccessful();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
work.setProperty(com.ibm.di.dispatcher.Defs.CACHE_CONNECTORS, "false");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <Script name="DumpWorkEntry">
                    <ModTime>1499930523719</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toDeltaString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="0_TestAL">
            <ModTime>1729441627747</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>prolog0</Name>
                    <Script><![CDATA[var adapterVersion = "1.0";
log("INFO","Adapter Version - 1.0");

// Read AL parameters

// ITIM Account Objectclass
var gITIMAccountObjectclass = "erICBSPagerDutyAdapterAccount";

// Read AL parameters
log("TCB: ************" + task.getTCB() + "\n OP Entry:" + task.getOpEntry());
//var gOperationType = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");
var gOperationType = "search";]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="SetupData" state="Enabled"/>
                    <Component name="PagerDutyConnector" state="Enabled"/>
                    <Component name="setupWork" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="SetupData">
                    <ModTime>1499931836894</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[work.setAttribute("erpagerdutyemail","mukamble@in.ibm.com");
work.setAttribute("erpagerdutyname","Mukesh B. Kamble");
work.setAttribute("erpagerdutyjobtitle","");
work.setAttribute("erpagerdutyrole","user");
work.setAttribute("erpagerdutyteams","");]]></parameter>
                </Script>
                <Connector name="PagerDutyConnector">
                    <InheritFrom>/Connectors/PagerDutyConnector</InheritFrom>
                    <ModTime>1499946202478</ModTime>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="token">ETZXRLSTVzVgeHBHaJyM</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = "eruid=" + conn.getString("email");</Script>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyemail</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>erpagerdutyemail</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.id</Script>
                            <Simple>erpagerdutyid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyjobtitle</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.job_title</Script>
                            <Simple>erpagerdutyjobtitle</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyname</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.name</Script>
                            <Simple>erpagerdutyname</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyrole</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.role</Script>
                            <Simple>erpagerdutyrole</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>erpagerdutyteams</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.teams</Script>
                            <Simple>erpagerdutyteams</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>eruid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.email</Script>
                            <Simple>id</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>objectclass</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = gITIMAccountObjectclass;</Script>
                            <Simple>objectclass</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>15d369a0555</Key>
                            <Attribute>id</Attribute>
                            <Operator>equals</Operator>
                            <Value>$erpagerdutyid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="addonly_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>addonly_ok</Name>
                            <Script><![CDATA[setStatusSuccessful();
id = thisConnector.connector.getParam("id");
work.erpagerdutyid=id;
log("id is : " + id);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>default_fail</Name>
                            <Script>processError();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="delete_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>delete_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>get_ok</Name>
                            <Script>setStatusSuccessful();</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_ok">
                            <InheritFrom>[no inheritance]</InheritFrom>
                            <Name>update_ok</Name>
                            <Script><![CDATA[var change = thisConnector.connector.getParam("change");

if(change==false){
	var id = thisConnector.connector.getParam("failedRoleRemoval");
	task.logmsg("Setting warning**********");	
	setStatusWarning("Role value on end point is different than requested removal",id);
	work["erpagerdutyrole"] = id;
	work["erpagerdutyrole"].setValueOper(0,com.ibm.di.entry.AttributeValue.AV_UNCHANGED);				
}else {
	setStatusSuccessful();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                </Connector>
                <ALMap name="setupWork">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <ModTime>1499876387642</ModTime>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>erpagerdutyid</Name>
                            <Type>advanced</Type>
                            <Script>"PSAN9J9"</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Disabled</State>
                </ALMap>
                <Script name="DumpWorkEntry">
                    <ModTime>1499873545685</ModTime>
                    <parameter name="script"><![CDATA[// Dump the work entry
log(work.toString());]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    <AssemblyLine name="41">
            <ModTime>1730297073922</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                    <Component name="EmptyScript" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1730297073922</ModTime>
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502391250521</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

attTypeNode("eruid", errors, "string");
attTypeNode("erpassword", errors, "password");

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502390927305</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();
		
		if (classType == "service") {
			continue;
		}

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1503487106103</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
try {
	_zipper.zip(toFolder + adapterName + ".jar", files);
} catch (ex) {
	errors.push(ex);
}]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
                <Script name="EmptyScript">
                    <ModTime>1730297073922</ModTime>
                    <parameter name="script"><![CDATA[defaultLogLevel = "INFO";
function logmsg(lvl, msg) {
	var lvl = (msg) ? lvl : defaultLogLevel;
	var msg = (msg) ? msg : lvl;
	task.logmsg(lvl, msg);
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="exportAdapter 20241102 1942">
            <ModTime>1730297073922</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs"><![CDATA[AdapterKitLib
zipperObj]]></parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <Name>epilog</Name>
                    <Script>reportAnyErrors();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Global vars and functions" state="Enabled"/>
                    <Component name="Check for missing properties" state="Enabled"/>
                    <Component name="Properties to variables" state="Enabled"/>
                    <Component name="Read properties" state="Enabled"/>
                    <Component name="Copy Config for AL names" state="Enabled"/>
                    <Component name="Write schema dsml file" state="Enabled"/>
                    <Component name="Write service def file" state="Enabled"/>
                    <Component name="Write service form file" state="Enabled"/>
                    <Component name="Write user account form file" state="Enabled"/>
                    <Component name="Write CustomLabels properties file" state="Enabled"/>
                    <Component name="Write mapping file" state="Enabled"/>
                    <Component name="Write targetProfile json" state="Enabled"/>
                    <Component name="Create jar file" state="Enabled"/>
                    <Component name="Report success" state="Enabled"/>
                    <Component name="EmptyScript" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ModTime>1730297073922</ModTime>
                <Script name="Global vars and functions">
                    <InheritFrom>/Scripts/Global vars and functions</InheritFrom>
                    <ModTime>1502274462987</ModTime>
                </Script>
                <Script name="Check for missing properties">
                    <ModTime>1487773758035</ModTime>
                    <parameter name="script"><![CDATA[checkForMissingProperties();

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Properties to variables">
                    <InheritFrom>/Scripts/Properties to Variables</InheritFrom>
                    <ModTime>1494853873240</ModTime>
                </Script>
                <Script name="Read properties">
                    <ModTime>1486482085517</ModTime>
                    <parameter name="script"><![CDATA[keys = system.getTDIProperties().getPropertyStore("AdapterKit").keys();
propNames = [];
while (keys.hasNext()) {
	propNames.push(keys.next().trim());
}

// Get all AL names
assemblyLines = {};
operations = {};
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("al.")) {
		propVal = system.getTDIProperty("AdapterKit", propName);
		if (propVal != null && propVal.trim() != "") {
			parts = system.splitString(propVal, ";");

			alName = parts[0];
			desc = (parts.length > 1) ? parts[1] : parts[0];
			operation = propName.substring(3).trim();
			
			op = {assemblyLine: alName, 
					operation: operation,
					description: desc};
			
			operations[alName] = op;
			assemblyLines[operation] = op;
		}	
	}	
}]]></parameter>
                </Script>
                <Script name="Copy Config for AL names">
                    <ModTime>1499681424014</ModTime>
                    <parameter name="script"><![CDATA[for (thisAL in operations) {
	try {
		inFileName = fromFolder + adapterConfig;
		fromFile = system.openFileForInput(inFileName);
	} catch (ex) {
		msg = "Error opening Config xml file " + inFileName + " - " + ex;
		errors.push(msg);
	}	

/* Not writing anymore
	try {
		outFileName = toFolder + thisAL + ".xml";
		toFile = system.openFileForOutput(toFolder + thisAL + ".xml");
	} catch (ex) {
		msg = "Error creating output file " + outFileName + " - " + ex;
		errors.push(msg);
	}
*/	

	outFileName = thisAL + ".xml";
	
	if (errors.length > 0) {
		try {
			fromFile.close();
		} catch (ex) {
			// do nothing
		}
		try {
//			toFile.close();
		} catch (ex) {
			// do nothing
		}
		
		return;
	}
	
	lines = [];
	try {
		do {
			line = fromFile.readLine();
			if (line != null) {
				lines.push(line);
//				toFile.write(line);
//				toFile.newLine();
			}
		} while (line != null);
	} catch (ex) {
		msg = "Error writing AL file " + toFile + " - " + ex;
		errors.push(msg);
	}
		
	fromFile.close();
//	toFile.close();
	files[outFileName] = lines.join("\n");
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write schema dsml file">
                    <ModTime>1502391250521</ModTime>
                    <parameter name="script"><![CDATA[classes = {}; // for use later in other files, like service.def
groupAttributes = []; // used to write account form file

e = system.newEntry();
e.enableDOM();

e.dsml = null;
e.dsml["directory-schema"] = null;

dirSchema = e.dsml["directory-schema"];

count = {attributes: 0, classes: 0};

attTypeNode("eruid", errors, "string");
attTypeNode("erpassword", errors, "password");

// Add all the attribute definitions
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		count.attributes++;
		dirSchema.appendChild(attTypeNode(attName, errors));
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		if (parts.length != 3) {
			msg = "Class property name incorrect: " + propName
					+ " - It should be three parts separated by '.'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;
		}

		count.classes++;
		classType = parts[1].toLowerCase();
		if (!"user".equals(classType) && !"group".equals(classType) 
			&& !"service".equals(classType)) {
			msg = "Class property name incorrect: " + propName
					+ " - It must be for 'user', 'group' or 'service'\n"
					+ "     for example: class.service.erMyServiceClass";
			log("ERROR", msg);
			errors.push(msg);
			continue;		
		}
		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		classes[classType] = {
			className: className,
			label: parts[0]
		};

		dirSchema.appendChild(classNode(className, classType, errors, groupAttributes));
	}
}

if (count.attributes < 2) {
	msg = "You must define attribute.* properties in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}
if (count.classes < 2) {
	msg = "You must define class.* properties for both the User/Accout object and the Service itself in the AdapterKit.properties file";
	log("ERROR", msg);
	errors.push(msg);
}

if (errors.length > 0) { system.exitFlow(); } 

task.logmsg("\n\n\n------> schema.dsml\n" + e.toXML());
if (!writeFiles) { return; } 

writeXMLFile("schema.dsml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service def file">
                    <ModTime>1502278858739</ModTime>
                    <parameter name="script"><![CDATA[e.removeAllAttributes();

e.Service = null;
e.Service.@erserviceproviderfactory = "com.ibm.itim.remoteservices.provider.itdiprovider.ItdiServiceProviderFactory";
e.Service.@name = adapterName;
//e.Service["@mlns:svc"] = "urn:com:ibm:itim:service:1";
//e.Service["@xsi:schemaLocation"] = "urn:com:ibm:itim:service:1 service.xsd";

e.Service.appendChild(newTypeNode("user", classes));
e.Service.appendChild(newTypeNode("service", classes));

for (alName in assemblyLines) {
	if (assemblyLines[alName]) {
		e.Service.appendChild(newOperationNode(alName, assemblyLines[alName]))
	}	
}

// write properties
e.Service.properties = null;
props = e.Service.properties;
foundURL = false;
foundCategory = false;
foundVersion = false;
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
	if (propName.startsWith("property.")) {
		pName = propName.substring(9).trim();
		propVal = system.getTDIProperty(propName).trim();
		props.appendChild(newPropertyNode(propName, propVal));
		foundURL = foundURL || 
					pName.equals("com.ibm.itim.itdi.properties.RMI_URL");
		foundCategory = foundCategory ||
					pName.equals("AdapterCategory");
		foundVersion = foundVersion ||
					pName.equals("AdapterVersion");
	}
}
if (!foundURL) {
	props.appendChild(newPropertyNode("com.ibm.itim.itdi.properties.RMI_URL", 
										"rmi://localhost:1199/ITDIDispatcher"));
}
if (!foundCategory) {
	props.appendChild(newPropertyNode("AdapterCategory", adapterCategory));
}
if (!foundVersion) {
	props.appendChild(newPropertyNode("ProfileVersion", adapterVersion));
}

gdef = e.Service.GroupDefinition = groupDefinitionNode();

task.logmsg("\n\n\n------> service.def\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile("service.def", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write service form file">
                    <ModTime>1502283319403</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (isForIGI()) { return; } 

e.removeAllAttributes();

e = serviceForm();

task.logmsg("\n\n\n------> Service Form: " + adapterName + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(classes.service.className + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write user account form file">
                    <ModTime>1502288057201</ModTime>
                    <parameter name="script"><![CDATA[// Only write the service for for IIM and PIM
//if (!isForIIM()) { return; } 

e.removeAllAttributes();
userClass = classes.user.className;

e.page = null;
e.page.body = null;
e.page.body.form = null;
e.page.body.form.@action = "formvalidator0"; 

form = e.page.body.form;

form.appendChild(formElement("eruid", true, "required", "true"));
for (attName in atts) {
	att = atts[attName];
	form.appendChild(formElement(attName, att));
}

task.logmsg("\n\n\n------> User Account Form: " + userClass + ".txt\n" + e.toXML()); 
if (!writeFiles) { return; } 

writeXMLFile(userClass + ".xml", e);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write CustomLabels properties file">
                    <ModTime>1502289335684</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = "CustomLabels.properties";
lines = [];
lines.push(adapterName + "=" + adapterDescription);
for (attName in atts) {
	att = atts[attName];
	lines.push(attName + "=" + att.label);
}
for (className in classes) {
	if (className == "user" ||
		className == "group" ||
		className == "service") {
		cls = classes[className];
		lines.push(cls.className + "=" + cls.label + " class");
		lines.push(cls.className.substring(2) + "=" + cls.label)
	}	
}

lines.push("pdmaintab=" + adapterName + " Service");
lines.push("tab.erpdconnection=Connection");
lines.push("tab.dispatcherattributes=Dispatcher Attributes");

files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write mapping file">
                    <ModTime>1502290039852</ModTime>
                    <parameter name="script"><![CDATA[task.logmsg("\n\n\n------> CustomLabels.properties: " ); 
if (!writeFiles) { return; } 

fileName = adapterName + "Mapping.def";
lines = [];
lines.push("Account|" + classes.user.className);
lines.push("eruid=eruid");
for (attName in atts) {
	att = atts[attName];
	lines.push("=" + att.name);
}
files[fileName] = lines.join("\n");

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Write targetProfile json">
                    <ModTime>1502390927305</ModTime>
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[if (!isForIGI()) { return; } 

tp = {
	name : adapterName,
	description : adapterDescription,
	providerType : "SDI",
	providerConfig : {
		changePassword: changePasswordALDefined()
	},
	resourceTypes : []
};
types = tp.resourceTypes;

processTargetSchema();

// Add all the attribute definitions
tpAtts = [];
for (i = 0; i < propNames.length; i++) {
	propName = propNames[i];
//	log("---> " + propName);
	if (propName.startsWith("attribute.")) {
		attName = propName.substring(10);
		propVal = system.getTDIProperty(propName);
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: syntaxToType[attDef.syntax],
				multiValued: attDef.multiValued,
				description: attDef.label,
				required: attDef.required,
				caseExact: attDef.caseExact,
				mutability: attDef.mutability,
				returned: attDef.returned,
				uniqueness: attDef.uniqueness
			}
			tpAtts.push(att);
		}
	} else
	if (propName.startsWith("class.")) {
		parts = system.splitString(propName, ".");
		classType = parts[1].toLowerCase();
		
		if (classType == "service") {
			continue;
		}

		// Make first character uppercase
		useClassType = classType.substring(0,1).toUpperCase()
					+ classType.substring(1);

		className = parts[2];
		propValue = system.getTDIProperty(propName);
		parts = system.splitString(propValue, ";");
		
		types.push(resourceType(className, 
								useClassType, 
								"Security adapter view of a " + useClassType, 
								errors));
		
		// get membership attribute
		classAtts = classAttributes[className];
		memberAtt = {name: "<none>"};
		for (j = 0; j < classAtts.length; j++) {
			attDef = atts[classAtts[j]];
			if (typeof attDef == "undefined") {
				continue;
			}
			if (attDef.membership == true) {
				memberAtt = attDef;
				break;
			}
		}
		
		rt = {
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + ":"
						+ ":2.0:" + useClassType,
			attributeMapping: {
				commonAttributes: {
					meta: {
						created: "",
						lastModified: ""
					}
				},
				coreAttributes: {
					displayName: memberAtt.name,
					members: [ {
						type: "",
						value: memberAtt.name
					}]
				},
				objectProfile: adapterName + useClassType
			},
			definition: {
				id: "urn:ibm:idbrokerage:params:scim:schemas:extension:"
						+ adapterName + useClassType + ":"
						+ ":2.0:" + useClassType,
				name: adapterName + useClassType + "Extension",
				description: adapterName + " " + useClassType + " resourceType",
				attributes: allAttributesForClass(className)
			}
		}
		classDef = classes[className];
		for (cProp in classDef) {
			rt[cProp] = classDef[cProp];
		}
		
		classType_lc = classType.toLowerCase();
		if (classType_lc == "group") {
			tp[classType.toLowerCase() + "Extensions"] = [rt];
		} else 
		if (classType_lc == "user"){
			tp[classType.toLowerCase() + "Extension"] = rt;
		}
	}
}

if (errors.length > 0) { system.exitFlow(); } 

tsId = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
targetSchema.schema = tsId;
targetSchema.definition.id = tsId;
tp.targetSchema = targetSchema;
		

task.logmsg("\n\n\n------> targetProfile.jsonl\n" + toJson(tp, null, 4).replaceAll("\n,",","));
if (!writeFiles) { return; } 

writeJSONFile("targetProfile.json", tp);

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
                </Script>
                <Script name="Create jar file">
                    <ModTime>1503487106103</ModTime>
                    <parameter name="script"><![CDATA[//toFolder = "X:/TDI/ISIM _ IIM _ Identity Manager/adapters/_temp/";
log("Creating JAR file: " + toFolder + adapterName + ".jar");
try {
	_zipper.zip(toFolder + adapterName + ".jar", files);
} catch (ex) {
	errors.push(ex);
}]]></parameter>
                </Script>
                <Script name="Report success">
                    <ModTime>1487772963870</ModTime>
                    <parameter name="script">log("********* All " + adapterType + " Adapter files created *********");</parameter>
                </Script>
                <Script name="EmptyScript">
                    <ModTime>1730297073922</ModTime>
                    <parameter name="script"><![CDATA[defaultLogLevel = "INFO";
function logmsg(lvl, msg) {
	var lvl = (msg) ? lvl : defaultLogLevel;
	var msg = (msg) ? msg : lvl;
	task.logmsg(lvl, msg);
}]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
    </Folder>
    <Folder name="Connectors">
        <Connector name="RoleInputFile">
            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
            <ModTime>1729441627649</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="filePath">@SUBSTITUTE{property.PIMOULoader:pim.role.input.filepath}</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                <parameter name="csvColumnSeparator">,</parameter>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <RowLocking>SERIALIZABLE</RowLocking>
                <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>Customer Name</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Description</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Members</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Owner</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>Customer Name</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Description</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Members</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>Role Owner</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
        <Connector name="PagerDutyConnector">
            <InheritFrom>system:/Connectors/ibmdi.ScriptConnector</InheritFrom>
            <ModTime>1729441627599</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="$form$"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig Cycle="8" UUID="fc9590fe-9b28-4eea-a7b2-30eb7a1bf0f5" created="Fri Jul 07 15:16:48 IST 2017" createdBy="adminibm" main="Form" modified="Wed Jul 12 16:19:04 IST 2017" modifiedBy="adminibm" version="7.1.1">
    <Form name="Form">
        <ModTime>1499856533677</ModTime>
        <FormItemNames>
            <ListItem>$GLOBAL.script</ListItem>
            <ListItem>keepGlobalState</ListItem>
            <ListItem>$GLOBAL.includeFiles</ListItem>
            <ListItem>includePrologs</ListItem>
            <ListItem>$GLOBAL.debug</ListItem>
            <ListItem>$GLOBAL.help</ListItem>
            <ListItem>url</ListItem>
            <ListItem>username</ListItem>
            <ListItem>limit</ListItem>
            <ListItem>token</ListItem>
            <ListItem>type</ListItem>
        </FormItemNames>
        <FormSectionNames>
            <ListItem>General</ListItem>
            <ListItem>Advanced</ListItem>
        </FormSectionNames>
        <FormItem name="includePrologs">
            <parameter name="description">pro_desc</parameter>
            <parameter name="label">pro_label</parameter>
            <parameter name="script">selectGlobalProlog</parameter>
            <parameter name="scriptLabel">pro_script_label</parameter>
            <parameter name="scripthelp">pro_script_help</parameter>
            <parameter name="syntax">textarea</parameter>
        </FormItem>
        <FormItem name="keepGlobalState">
            <parameter name="description">SCRIPT_CONN_KEEP_GLOBAL_STATE_DESC</parameter>
            <parameter name="label">SCRIPT_CONN_KEEP_GLOBAL_STATE_LABEL</parameter>
            <parameter name="syntax">boolean</parameter>
        </FormItem>
        <FormItem name="limit">
            <ModTime>1499756585985</ModTime>
            <parameter name="label">Search Results Limit</parameter>
            <parameter name="syntax">string</parameter>
        </FormItem>
        <FormItem name="password">
            <ModTime>1499421063873</ModTime>
            <parameter name="description">Password</parameter>
            <parameter name="label">Password</parameter>
            <parameter name="syntax">password</parameter>
        </FormItem>
        <FormItem name="token">
            <ModTime>1499855605361</ModTime>
            <parameter name="label">API Authorization Token</parameter>
            <parameter name="syntax">password</parameter>
        </FormItem>
        <FormItem name="type">
            <ModTime>1499856533677</ModTime>
            <Values>
                <ListItem>users</ListItem>
                <ListItem>groups</ListItem>
            </Values>
            <parameter name="label">Data Type</parameter>
            <parameter name="syntax">droplist</parameter>
        </FormItem>
        <FormItem name="url">
            <ModTime>1499421019745</ModTime>
            <parameter name="description">Application URL</parameter>
            <parameter name="label">URL</parameter>
        </FormItem>
        <FormItem name="username">
            <ModTime>1499421047202</ModTime>
            <parameter name="description">User Name</parameter>
            <parameter name="label">User Name</parameter>
        </FormItem>
        <FormSection name="Advanced">
            <FormSectionNames>
                <ListItem>$GLOBAL.userComment</ListItem>
                <ListItem>$GLOBAL.script</ListItem>
            </FormSectionNames>
            <parameter name="initiallyExpanded">false</parameter>
            <parameter name="title">Advanced</parameter>
        </FormSection>
        <FormSection name="General">
            <FormSectionNames>
                <ListItem>url</ListItem>
                <ListItem>token</ListItem>
                <ListItem>limit</ListItem>
                <ListItem>type</ListItem>
            </FormSectionNames>
        </FormSection>
        <parameter name="title">PagerDuty Connector</parameter>
    </Form>
</MetamergeConfig>]]></parameter>
                <parameter name="includeFiles"/>
                <parameter name="limit">40</parameter>
                <parameter name="password">Token token=3sY3HG8ThVyTvfuWSxao</parameter>
                <parameter name="script"><![CDATA[// PagerDuty connector V1.0
// Place initialization code before function declarations
//
var version = "20170711 12:27";
var http = system.getConnector("ibmdi.HTTPClient");
var index = 0;
var initialize_status = false;
var users = null;
var params = { 
			url: "",
			token: "",
			limit: "40",
			type:""
	};
var roleList = [		
		"admin",
		"observer",
		"owner",
		"user"
	];
var operation = task.getTCB().getProperty("$metamerge.tcb.alSettings").getString("OperationType");
var script = system.getScriptText("adapterLib");
eval(script);
function initialize()
{	
	for (var propName in params ){
		params[propName] = connector.getParam(propName);
		http.setParam(propName, params[propName]);
	}
	http.initialize(null);
	initialize_status = true;
	connector.setParam("version", version);
}
function terminate()
{
	http.terminate();
	initialize_status = false;
}
function selectEntries()
{
	index = 0;
	users = [];
	var type = params["type"];
	if(type == "users") {
		var searchLimit = http.getParam("limit");
		var authorization = http.getParam("token");
		var details = {
			url: params.url + "/users/?limit=" + searchLimit,
			Authorization: "Token token=" + authorization,
			accept: "application/vnd.pagerduty+json;version=2"
		}
		users = makecall(details);
	}	
}

function getNextEntry ()
{
	var type = params["type"];
	var dataEntry;
	if (type == "users") {
		if (index >= users.length) {
			result.setStatus (0);
			return;
		} else {
			var currentUser = users[index];
			dataEntry = JsonToPagerDutyEntry(currentUser);
			index++;
		}
	} else 
	if (type == "groups") {
		if (index >= roleList.length) {
			result.setStatus (0);
			return;
		}
		dataEntry = system.newEntry();
		dataEntry.addAttributeValue("erpagerdutyrole", roleList[index]);
		index++;
	}
	entry.merge(dataEntry);
	result.setStatus(1);
}

function putEntry ()
{
	if(operation == "modify"){
		if (entry["erpagerdutyrole"].getValueOper(0)==com.ibm.di.entry.AttributeValue.AV_DELETE){
			connector.setParam("errmsg", "Cannot initiate role removal request, since ID does not exist on end point " + entry["erpagerdutyid"]);
			connector.setParam("change", "false");
			connector.setParam("failedRoleRemoval", entry["erpagerdutyrole"]);
			return;
		}
		connector.setParam("change", "add");
	}
	var userEntry = entryToPagerDutyObj();
	var authorization = http.getParam("token");
	var details = {
		url: params.url + "/users",
		Authorization: "Token token=" + authorization,
		accept: "application/vnd.pagerduty+json;version=2",
		body: toJson({user:userEntry}),
		method: "POST"
	}
	details["Content-Type"] = "application/json";
	var jobj = makecall(details);
	connector.setParam("id", jobj.id);
	i=42;
}

function modEntry ()
{
	var crit = search.getCriteria();
	if(crit.size() == 0){
		throw "No Link Criteria Defined";
	}
	var id = crit.get(0).value;

	var userEntry = entryToPagerDutyObj();
	var authorization = http.getParam("token");
	var details = {
		url: params.url + "/users/" +id,
		Authorization: "Token token=" + authorization,
		accept: "application/vnd.pagerduty+json;version=2",
		body: toJson({user:userEntry}),
		method: "PUT"
	}
	details["Content-Type"] = "application/json";
	var jobj = makecall(details);
	i=42;
}

function deleteEntry ()
{
	var authorization = http.getParam("token");
	var crit = search.getCriteria();
	if(crit.size() == 0){
		throw "No Link Criteria Defined";
	}
	var id = crit.get(0).value;
	var details = {
		url: params.url + "/users/" + id,
		Authorization: "Token token=" + authorization,
		accept: "application/vnd.pagerduty+json;version=2",
		method: "DELETE"
	}
	makecall(details);
	i=42;
}

function findEntry ()
{
	var authorization = http.getParam("token");
	var crit = search.getCriteria();
	if(crit.size() == 0){
		throw "No Link Criteria Defined";
	}
	var id = crit.get(0).value;
	var details = {
		url: params.url + "/users/" + id,
		Authorization: "Token token=" + authorization,
		accept: "application/vnd.pagerduty+json;version=2"
	}
	users = makecall(details);
	i=42;
}

function makecall(details)
{
	var postData = system.newEntry();
	for (var propName in details ){
		postData["http."+propName] = details[propName];
	}
	var response = http.queryReply(postData);
	checkHttpResponse(response);
	var responseCode = response["http.responseCode"].getValue();
	if(responseCode == "204"){
		return;
	}
	var json = response.getString("http.bodyAsString");
	var jobj = fromJson(json);
	if(jobj.error && jobj.error.code == 2100) {
		result.setStatus(0);
		return;
	}
	if (typeof jobj.users != "undefined"){
		return jobj.users;
	} else 
	if (typeof jobj.user != "undefined"){
		return jobj.user;
	} else{
		return jobj;
	}
}

function checkHttpResponse(connObj)
{
	var responseCode = connObj["http.responseCode"].getValue();
	log("responseCode="+responseCode);
	if (responseCode != "200" && responseCode != "201" && responseCode != "204")
	{
		log("error ="+connObj["http.bodyAsString"]);
		if (responseCode == "400")
		{
			throw "Request failed:" + "Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will not work.";
		}
		else if (responseCode == "401")
		{
			system.throwException("Request failed:" + "Caller did not supply credentials or did not provide the correct credentials. If you are using an API key, it may be invalid or your Authorization header may be malformed.");
		}
		else if (responseCode == "402")
		{
			system.throwException("Request failed:" + "Account does not have the abilities to perform the action. Please review the response for the required abilities. You can also use the Abilities API to determine what features are available to your account.");
		}
		else if (responseCode == "403")
		{
			system.throwException("Request failed:" + "Caller is not authorized to view the requested resource. While your authentication is valid, the authenticated user or token does not have permission to perform this action.");
		}
		else if (responseCode == "404")
		{
			//system.throwException("Not Found.");
		}
		else if (responseCode == "429")
		{
			system.throwException("Request failed:" + "Too many requests have been made, the rate limit has been reached.");
		}
		else
			system.throwException("Request failed:" + "Unknown");
	}
}
/***
 * Converts a JSON object structure to entry
 * If you have multi-layer JSON object, this function will flatten
 * your JSON object and make all subelements an entry attribute.
 * 
 */
function JsonToEntry (jsonObj){
	var jsonEntry = system.newEntry();
	for (var key in jsonObj){
		var item = jsonObj[key];
		if (!item){
			jsonEntry.addAttributeValue(key, null);
		}
		else if (typeof item === 'com.ibm.json.java.JSONObject'){
			jsonEntry.merge(JsonToEntry(item));
		}
		else if (typeof item === 'com.ibm.json.java.JSONArray'){
			for (itemVal in item){
				if (typeof itemVal === 'com.ibm.json.java.JSONObject'){
					jsonEntry.merge(JsonToEntry(itemVal));
				}
				else{
					jsonEntry.addAttributeValue(key, itemVal.toString());
				}
			}
		}
		else{
			jsonEntry.addAttributeValue(key, item.toString());
		}
	}
	return jsonEntry;
}

/***
 * Converts a JSON object structure to entry
 * If you have multi-layer JSON object, this function will flatten
 * your JSON object and make all subelements an entry attribute.
 * 
 */
function JsonToPagerDutyEntry(jsonObj){
	var jsonEntry = system.newEntry();
	for(var key in jsonObj){
		var item = jsonObj[key];
		if(!item){
			jsonEntry.addAttributeValue(key, null);
		}
		else if(key == "teams") {
			if(typeof item == 'com.ibm.json.java.JSONObject'){
				var teams = "";
				var teamsEntry = JsonToEntry(item);
				jsonEntry.addAttributeValue("teams", teamsEntry.getString("summary"));
			}
		} else
		{
			if(key.toString() == "name" || key.toString() == "id" || key.toString() == "email" || key.toString() == "job_title" || key.toString() == "role") {
				jsonEntry.addAttributeValue(key, item.toString());
				task.logmsg("INFO","key item "+key+"; "+item)
			}
		}
	}
	return jsonEntry;
}

function entryToPagerDutyObj() {

	// Get the names of all Attributes in work as a String array
	var attName = entry.getAttributeNames();
	var userEntry = {};
	// Loop through all the Attributes in work
	for (i = 0; i < attName.length; i++) {
		var key = attName[i];
		var item = entry.getString(key);
		if( item  != null && item !=""){
			switch(key) {
				case "erpagerdutyname":
				userEntry.name = item;
				break;
				case "erpagerdutyemail":
				userEntry.email = item;
				break;
				case "erpagerdutyjobtitle":
				userEntry.job_title = item;
				break;
				case "erpagerdutyrole":
				if (operation == "modify"){
					if (entry["erpagerdutyrole"].getValueOper(0)==com.ibm.di.entry.AttributeValue.AV_ADD){
						userEntry.role = item;
					} else
					{
						if(users.role == item){
							log("remove user role, setting to no_access: " + item);
							userEntry.role = "no_access";
						}else
						{
							connector.setParam("errmsg", "Role value on end point is different than requested removal " + item);
							connector.setParam("change", "false");
							connector.setParam("failedRoleRemoval", entry["erpagerdutyrole"]);
						}
					}
				} else
				if (operation == "add"){	
					userEntry.role = item;
				}	
				break;
				case "erpagerdutyteams":
				userEntry.teams = item;
				break;						
			}
		}
	}
	userEntry.type="user";
	return userEntry;
}]]></parameter>
                <parameter name="type">users</parameter>
                <parameter name="url">https://api.pagerduty.com</parameter>
                <parameter name="username">muralidk@in.ibm.com</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <RowLocking>SERIALIZABLE</RowLocking>
                <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
        <Connector name="PIM LDAPConnector">
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1729441627889</ModTime>
            <ConnectorMode>AddOnly</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="ldapPassword">@SUBSTITUTE{property.PIMOULoader:pim.ldap.password}</parameter>
                <parameter name="ldapSearchBase">@SUBSTITUTE{property.PIMOULoader:pim.ldap.searchbase}</parameter>
                <parameter name="ldapUrl">@SUBSTITUTE{property.PIMOULoader:pim.ldap.url}</parameter>
                <parameter name="ldapUsername">@SUBSTITUTE{property.PIMOULoader:pim.ldap.username}</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings/>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
        <Connector name="BROKER_LDAP">
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1729441627633</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="ldapPassword">igi</parameter>
                <parameter name="ldapSearchBase">ou=services, erglobalid=00000000000000000000, ou=ACME, DC=COM</parameter>
                <parameter name="ldapUrl">ldap://10.40.59.245:389</parameter>
                <parameter name="ldapUsername">cn=root</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <RowLocking>SERIALIZABLE</RowLocking>
                <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance/>
        </Connector>
    </Folder>
    <Folder name="Parsers"/>
    <Folder name="Scripts">
        <Script name="zipperObj">
            <ModTime>1730901530178</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[_zipperObj = function(useBuffer) {
	this.name = "_zipperObj";
	this.BUFFER = useBuffer || 2048;
	this.data = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, this.BUFFER);

	this.unzip = function(filePath) {
		try {
			this.log("-------");
			this.log("Unzipping " + filePath);
			var dest = null; // BufferedOutputStream 
			var inf = new java.io.File(filePath);
			if (!inf.exists()) {
				throw "Input jar file does not exist: " + filePath;
			}
			var fis = new java.io.FileInputStream(filePath);
			var zis = new java.util.zip.ZipInputStream(new java.io.BufferedInputStream(fis));
			var entry; // ZipEntry
			while ((entry = zis.getNextEntry()) != null) {
				// write the files to the disk
				var outf = new java.io.File(toFolder + entry.getName());
				if (entry.isDirectory()) {
					if (outf.mkdir()) {
						this.log("Creating folder " + outf);
					}
				} else {
					for (var parent = outf.getParentFile(); parent != null; parent = parent.getParentFile()) {
						if (parent.mkdir()) {
							this.log("Creating folder " + parent);							
						}
					}
				}
			}

			zis.close();
			fis = new java.io.FileInputStream(filePath);
			zis = new java.util.zip.ZipInputStream(new java.io.BufferedInputStream(fis));
			while ((entry = zis.getNextEntry()) != null) {
				var count;
				// write the files to the disk
				outf = new java.io.File(toFolder + entry.getName());
				if (!entry.isDirectory()) {
					this.log("Extracting: " + entry.getName() + " method: " + entry.getMethod());
					var fos = new java.io.FileOutputStream(toFolder + entry.getName());
					var dest = new java.io.BufferedOutputStream(fos, this.BUFFER);
					while ((count = zis.read(this.data, 0, this.BUFFER)) != -1) {
						dest.write(this.data, 0, count);
					}
					dest.flush();
					dest.close();
				}
			}
			zis.close();
		} catch (e) {
			throw "Error unzipping - " +  e;
		}
	}
	
	this.zip = function(zipFilePath, contents) {
		try {
			var fos = new java.io.FileOutputStream(zipFilePath);
			zos = new java.util.zip.ZipOutputStream(fos);
			zos.setLevel(8);
			
			var entry = new java.util.zip.ZipEntry(adapterName + "/");
			zos.putNextEntry(entry);
			zos.closeEntry();
		
			for (var entryName in files) {
				var entry = new java.util.zip.ZipEntry(adapterName + "/" + entryName); 
				var data = files[entryName];
			
				zos.putNextEntry(entry);
				zos.write(data.getBytes());
				zos.closeEntry();
			}
			
			zos.finish();
			zos.close();
		} catch(ex) {
			throw "Error creating jar - " + ex;
		}
	}
	
	this.log = function(lvl, msg) {
		if (typeof lvl == "undefined") {
			lvl = "INFO";
			msg = "";
		} else
		if (typeof msg == "undefined") {
			msg = lvl;
			lvl = "INFO";
		}
		task.logmsg(lvl, "<" + this.name + ">" + msg);
		java.lang.System.out.println(lvl + " - " + msg);
	}
	
	return this;
}

_zipper = new _zipperObj();]]></parameter>
        </Script>
        <Script name="zipperObj 20170628 2049">
            <ModTime>1729441627462</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[_zipperObj = function(useBuffer) {
	this.BUFFER = useBuffer || 2048;
	this.data = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, this.BUFFER);

	this.unzip = function(filePath) {
		try {
			this.log("-------");
			this.log("Unzipping " + filePath);
			var dest = null; // BufferedOutputStream 
			var inf = new java.io.File(filePath);
			if (!inf.exists()) {
				throw "Input jar file does not exist: " + filePath;
			}
			var fis = new java.io.FileInputStream(filePath);
			var zis = new java.util.zip.ZipInputStream(new java.io.BufferedInputStream(fis));
			var entry; // ZipEntry
			while ((entry = zis.getNextEntry()) != null) {
				// write the files to the disk
				var outf = new java.io.File(toFolder + entry.getName());
				if (entry.isDirectory()) {
					if (outf.mkdir()) {
						this.log("Creating folder " + outf);
					}
				} else {
					for (var parent = outf.getParentFile(); parent != null; parent = parent.getParentFile()) {
						if (parent.mkdir()) {
							this.log("Creating folder " + parent);							
						}
					}
				}
			}

			zis.close();
			fis = new java.io.FileInputStream(filePath);
			zis = new java.util.zip.ZipInputStream(new java.io.BufferedInputStream(fis));
			while ((entry = zis.getNextEntry()) != null) {
				var count;
				// write the files to the disk
				outf = new java.io.File(toFolder + entry.getName());
				if (!entry.isDirectory()) {
					this.log("Extracting: " + entry.getName() + " method: " + entry.getMethod());
					var fos = new java.io.FileOutputStream(toFolder + entry.getName());
					var dest = new java.io.BufferedOutputStream(fos, this.BUFFER);
					while ((count = zis.read(this.data, 0, this.BUFFER)) != -1) {
						dest.write(this.data, 0, count);
					}
					dest.flush();
					dest.close();
				}
			}
			zis.close();
		} catch (e) {
			this.log("ERROR: "+  e);
		}
	}
	
	this.zip = function(zipFilePath, contents) {
		try {
			var fos = new java.io.FileOutputStream(zipFilePath);
			zos = new java.util.zip.ZipOutputStream(fos);
			zos.setLevel(8);
			
			var entry = new java.util.zip.ZipEntry(adapterName + "/");
			zos.putNextEntry(entry);
			zos.closeEntry();
		
			for (var entryName in files) {
				var entry = new java.util.zip.ZipEntry(adapterName + "/" + entryName); 
				var data = files[entryName];
			
				zos.putNextEntry(entry);
				zos.write(data.getBytes());
				zos.closeEntry();
			}
			
			zos.finish();
			zos.close();
		} catch(ex) {
			this.log("Error creating jar - " + ex);
		}
	}
	
	this.log = function(lvl, msg) {
		if (typeof lvl == "undefined") {
			lvl = "INFO";
			msg = "";
		} else
		if (typeof msg == "undefined") {
			msg = lvl;
			lvl = "INFO";
		}
		task.logmsg(lvl, msg);
		java.lang.System.out.println(lvl + " - " + msg);
	}
	
	return this;
}

_zipper = new _zipperObj();]]></parameter>
        </Script>
        <Script name="ts">
            <ModTime>1729441627812</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[{
"targetSchema": {
        "schema": "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
        "definition": {
            "name": "Target definition",
            "id": "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
            "description": "ICBSJIRAAdapterProfile Target definition",
            "attributes": [
                {
                    "name": "erservicename",
                    "type": "string",
                    "multiValued": false,
                    "description": "erservicename",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "always",
                    "uniqueness": "none"
                },
                {
                    "name": "eritdiurl",
                    "type": "string",
                    "multiValued": false,
                    "description": "URL of SDI dispatcher",
                    "required": true,
                    "caseExact": false,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiraadminpassword",
                    "type": "string",
                    "multiValued": false,
                    "description": "JIRA Admin Password",
                    "required": true,
                    "caseExact": true,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiraadminusername",
                    "type": "string",
                    "multiValued": false,
                    "description": "JIRA Admin User Name",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiraalfilesystempath",
                    "type": "string",
                    "multiValued": false,
                    "description": "File system path",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiradisablealcache",
                    "type": "boolean",
                    "multiValued": false,
                    "description": "Enable cache",
                    "required": false,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiramaxconnectioncnt",
                    "type": "string",
                    "multiValued": false,
                    "description": "Max connection count",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjirasearchlimit",
                    "type": "string",
                    "multiValued": false,
                    "description": "JIRA Search Limit",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                },
                {
                    "name": "erjiraurl",
                    "type": "string",
                    "multiValued": false,
                    "description": "JIRA API URL",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                }
            ]
        }
    }
}]]></parameter>
        </Script>
        <Script name="serviceFormXML">
            <ModTime>1729441627915</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[<page>
  <body>
    <tabbedForm>
      <tab index="0" selected="true">
        <title>$AdapterName</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],0);</url>
        <formElement direction="inherit" required="true" label="$erservicename" name="data.erservicename">
          <input type="text" size="50" name="data.erservicename"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
        <formElement direction="inherit" label="$description" name="data.description">
          <input type="text" size="50" name="data.description"/>
        </formElement>
        <formElement direction="inherit" label="$eritdiurl" name="data.eritdiurl">
          <input type="text" size="50" name="data.eritdiurl" value="rmi://localhost:1099/ITDIDispatcher"/>
        </formElement>
        <formElement label="$erresourceurl" name="data.erurl" required="true">
          <input name="data.erurl" size="50" type="text" value="ldap://localhost:389"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
      </tab>
      <tab index="1" selected="false">
        <title>$servicestatustab</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],1);</url>
        <formElement direction="inherit" label="$eradapterlaststatustime" name="data.eradapterlaststatustime" isReadOnlyAlways="true">
          <dateInput/>
          <!--<input type="text" name="data.eradapterlaststatustime"/> -->
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatus" name="data.eradapterresourcestatus" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterresourcestatus">
            <option value="2">$resourcestatusunk</option>
            <option value="0">$resourcestatusup</option>
            <option value="1">$resourcestatusdown</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourceversion" name="data.eradapterresourceversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourceversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterprofileversion"
                   name="data.eradapterprofileversion" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterprofileversion">
            <option value="0">$ProfileVersion</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterversion" name="data.eradapterversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterconnectorversion" name="data.eradapterconnectorversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterconnectorversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatusmsg" name="data.eradapterresourcestatusmsg" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourcestatusmsg" />
        </formElement>
        <formElement direction="inherit" label="$eradaptertdiversion" name="data.eradaptertdiversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradaptertdiversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterdispatcherversion" name="data.eradapterdispatcherversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterdispatcherversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterplatform" name="data.eradapterplatform" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapterplatform"/> -->
          <textarea cols="" name="data.eradapterplatform" rows="">
          </textarea>
        </formElement>
        <formElement direction="inherit" label="$eradapteraccount" name="data.eradapteraccount" isReadOnlyAlways="true">
          <input type="text" name="data.eradapteraccount"/>
        </formElement>
        <formElement direction="inherit" label="$eradapteruptime" name="data.eradapteruptime" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapteruptime"/> -->
          <dateInput/>
        </formElement>
        <formElement direction="inherit" label="$eradaptermemory" name="data.eradaptermemory" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradaptermemory"/> -->
          <textarea cols="" name="data.eradaptermemory" rows="">
          </textarea>
        </formElement>
      </tab>
    </tabbedForm>
  </body>
</page>]]></parameter>
        </Script>
        <Script name="serviceFormXML with special disp params 20170811 1356">
            <ModTime>1729441627844</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[<page>
  <body>
    <tabbedForm>
      <tab index="0" selected="true">
        <title>$AdapterName</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],0);</url>
        <formElement direction="inherit" required="true" label="$erservicename" name="data.erservicename">
          <input type="text" size="50" name="data.erservicename"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
        <formElement direction="inherit" label="$description" name="data.description">
          <input type="text" size="50" name="data.description"/>
        </formElement>
        <formElement direction="inherit" label="$eritdiurl" name="data.eritdiurl">
          <input type="text" size="50" name="data.eritdiurl" value="rmi://localhost:1099/ITDIDispatcher"/>
        </formElement>
        <formElement label="$erresourceurl" name="data.erurl" required="true">
          <input name="data.erurl" size="50" type="text" value="ldap://localhost:389"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
      </tab>
      <tab index="1" selected="false">
		<title>$tab.erpdconnection</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],1);</url>
      </tab>
	  <tab index="2" selected="false">
            <title>$tab.dispatcherattributes</title>
            <image/>
            <url>javascript:switchTabs(document.forms['body'],2);</url>
            <formElement direction="inherit"
               label="$eralfilesystempath" name="data.eralfilesystempath">
               <input name="data.alfilesystempath" type="text"/>
            </formElement>
            <formElement direction="inherit"
               label="$ermaxconnectioncnt" name="data.ermaxconnectioncnt">
               <input name="data.ermaxconnectioncnt" type="text"/>
               <constraint>
                  <type>INTEGER_ONLY</type>
                  <parameter>true</parameter>
               </constraint>
            </formElement>
            <formElement direction="inherit"
               label="$erdisablealcache" name="data.erdisablealcache">
               <checkbox name="checkbox" value="no"/>
            </formElement>                 
         </tab>
      <tab index="3" selected="false">
        <title>$servicestatustab</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],3);</url>
        <formElement direction="inherit" label="$eradapterlaststatustime" name="data.eradapterlaststatustime" isReadOnlyAlways="true">
          <dateInput/>
          <!--<input type="text" name="data.eradapterlaststatustime"/> -->
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatus" name="data.eradapterresourcestatus" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterresourcestatus">
            <option value="2">$resourcestatusunk</option>
            <option value="0">$resourcestatusup</option>
            <option value="1">$resourcestatusdown</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourceversion" name="data.eradapterresourceversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourceversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterprofileversion"
                   name="data.eradapterprofileversion" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterprofileversion">
            <option value="0">$ProfileVersion</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterversion" name="data.eradapterversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterconnectorversion" name="data.eradapterconnectorversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterconnectorversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatusmsg" name="data.eradapterresourcestatusmsg" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourcestatusmsg" />
        </formElement>
        <formElement direction="inherit" label="$eradaptertdiversion" name="data.eradaptertdiversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradaptertdiversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterdispatcherversion" name="data.eradapterdispatcherversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterdispatcherversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterplatform" name="data.eradapterplatform" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapterplatform"/> -->
          <textarea cols="" name="data.eradapterplatform" rows="">
          </textarea>
        </formElement>
        <formElement direction="inherit" label="$eradapteraccount" name="data.eradapteraccount" isReadOnlyAlways="true">
          <input type="text" name="data.eradapteraccount"/>
        </formElement>
        <formElement direction="inherit" label="$eradapteruptime" name="data.eradapteruptime" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapteruptime"/> -->
          <dateInput/>
        </formElement>
        <formElement direction="inherit" label="$eradaptermemory" name="data.eradaptermemory" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradaptermemory"/> -->
          <textarea cols="" name="data.eradaptermemory" rows="">
          </textarea>
        </formElement>
      </tab>
    </tabbedForm>
  </body>
</page>]]></parameter>
        </Script>
        <Script name="serviceFormXML with one more tab">
            <ModTime>1729441627406</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[<page>
  <body>
    <tabbedForm>
      <tab index="0" selected="true">
        <title>$AdapterName</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],0);</url>
        <formElement direction="inherit" required="true" label="$erservicename" name="data.erservicename">
          <input type="text" size="50" name="data.erservicename"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
        <formElement direction="inherit" label="$description" name="data.description">
          <input type="text" size="50" name="data.description"/>
        </formElement>
        <formElement direction="inherit" label="$eritdiurl" name="data.eritdiurl">
          <input type="text" size="50" name="data.eritdiurl" value="rmi://localhost:1099/ITDIDispatcher"/>
        </formElement>
        <formElement label="$erresourceurl" name="data.erurl" required="true">
          <input name="data.erurl" size="50" type="text" value="ldap://localhost:389"/>
          <constraint>
            <type>REQUIRED</type>
            <parameter>true</parameter>
          </constraint>
        </formElement>
      </tab>
      <tab index="1" selected="false">
		<title>$tab.erpdconnection</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],1);</url>
      </tab>
      <tab index="s" selected="false">
        <title>$servicestatustab</title>
        <image/>
        <url>javascript:switchTabs(document.forms['body'],2);</url>
        <formElement direction="inherit" label="$eradapterlaststatustime" name="data.eradapterlaststatustime" isReadOnlyAlways="true">
          <dateInput/>
          <!--<input type="text" name="data.eradapterlaststatustime"/> -->
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatus" name="data.eradapterresourcestatus" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterresourcestatus">
            <option value="2">$resourcestatusunk</option>
            <option value="0">$resourcestatusup</option>
            <option value="1">$resourcestatusdown</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourceversion" name="data.eradapterresourceversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourceversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterprofileversion"
                   name="data.eradapterprofileversion" isReadOnlyAlways="true">
          <select width="300" style="width:300px" name="data.eradapterprofileversion">
            <option value="0">$ProfileVersion</option>
          </select>
        </formElement>
        <formElement direction="inherit" label="$eradapterversion" name="data.eradapterversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterconnectorversion" name="data.eradapterconnectorversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterconnectorversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterresourcestatusmsg" name="data.eradapterresourcestatusmsg" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterresourcestatusmsg" />
        </formElement>
        <formElement direction="inherit" label="$eradaptertdiversion" name="data.eradaptertdiversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradaptertdiversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterdispatcherversion" name="data.eradapterdispatcherversion" isReadOnlyAlways="true">
          <input type="text" name="data.eradapterdispatcherversion"/>
        </formElement>
        <formElement direction="inherit" label="$eradapterplatform" name="data.eradapterplatform" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapterplatform"/> -->
          <textarea cols="" name="data.eradapterplatform" rows="">
          </textarea>
        </formElement>
        <formElement direction="inherit" label="$eradapteraccount" name="data.eradapteraccount" isReadOnlyAlways="true">
          <input type="text" name="data.eradapteraccount"/>
        </formElement>
        <formElement direction="inherit" label="$eradapteruptime" name="data.eradapteruptime" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradapteruptime"/> -->
          <dateInput/>
        </formElement>
        <formElement direction="inherit" label="$eradaptermemory" name="data.eradaptermemory" isReadOnlyAlways="true">
          <!--<input type="text" name="data.eradaptermemory"/> -->
          <textarea cols="" name="data.eradaptermemory" rows="">
          </textarea>
        </formElement>
      </tab>
    </tabbedForm>
  </body>
</page>]]></parameter>
        </Script>
        <Script name="adapterLib">
            <ModTime>1729441627584</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[if (typeof adapterLibLoaded != "undefined") {
	return;
}

adapterLibLoaded = true;

//vrs = "20170223 1212"; // started on library
vrs = "20170503 1123"; // added dumpAll() and adapter status functions

// Logs, Logs, they're big they're heavy, they're wood.  Logs, logs, they're better than bad they're good!'
// Logs to a file named after the AL (history of 5)
var logHistory = 5;
var alreadyRolled = false;
function log(lvl, msg) {
	var nowstr = system.formatDate(new java.util.Date(), "yyyyMMdd HHmmss.SSS Z");
	
	if (typeof(lvl) == "undefined") {
		msg = "";
		lvl = "INFO";
	} else
	if (typeof(msg) == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	task.logmsg(lvl,msg);
	
	lvl = (lvl + "    ").substring(0, 5);
	
	var outmsg = nowstr + " | " + lvl + " | " + msg;
	java.lang.System.out.println(outmsg);

	var filePath = "logs/" + task.getShortName() + ".log";

	if (!alreadyRolled) {
		alreadyRolled = true;
		rollLogFiles(filePath);
	}
	
	var logFile = system.openFileForAppend(filePath);
	logFile.write(outmsg);
	logFile.newLine();
	logFile.close();
}

// Rolls historical log files
function rollLogFiles(filePath) {
	var file = new java.io.File(filePath + "." + logHistory);
	if (file.exists() && file.isFile()) {
		if (!file["delete"]()) {
			log("ERROR", "Cannot delete " + filePath + "." + history);
			return;
		}
	}
	
	for (var i = (logHistory-1); i >= 0; i--) {
		var usePath = filePath;
		if (i > 0) {
			usePath += "." + i;
		}
		var fromFile = new java.io.File(usePath);
		var toFile = new java.io.File(filePath + "." + (i+1));
		if (fromFile.exists() && !fromFile.renameTo(toFile)) {
			log("ERROR", "Cannot incrementally rename log file: " + fromFile);
		}
	}
}

function initStatusCode() {

    // Init status code to successful
    work.setProperty(Packages.com.ibm.di.dispatcher.Defs.STATUSCODE, new Packages.java.lang.Integer(
        Packages.com.ibm.itim.remoteservices.provider.Status.SUCCESSFUL));
}

function setStatusUnSuccessful() {
    work.setProperty(Packages.com.ibm.di.dispatcher.Defs.STATUSCODE, new Packages.java.lang.Integer(
        Packages.com.ibm.itim.remoteservices.provider.Status.UNSUCCESSFUL));
}

function processError() {
    work.removeAllAttributes();
    work.setProperty(Packages.com.ibm.di.dispatcher.Defs.STATUSCODE, 
        new Packages.java.lang.Integer(Packages.com.ibm.itim.remoteservices.provider.Status.UNSUCCESSFUL));
    if( error.getString("class") == "javax.naming.CommunicationException"){
 		work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASONCODE, 
        	new Packages.java.lang.Integer(Packages.com.ibm.itim.remoteservices.provider.Reason.COMMUNICATION_ERROR));
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASON_MESSAGE, 
            Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.CONNECTOR_CONNECTION_ERROR);
    }
    else if( error.getString("class") == "javax.naming.AuthenticationException") {
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASONCODE, 
            new Packages.java.lang.Integer(Packages.com.ibm.itim.remoteservices.provider.Reason.AUTHENTICATION_ERROR));
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASON_MESSAGE, 
            Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_INVALID_LOGIN_CREDENTIALS);
    }
    else if(error.getString("class") == "javax.naming.NameNotFoundException") {
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASONCODE, 
            new Packages.java.lang.Integer(Packages.com.ibm.itim.remoteservices.provider.Reason.NAME_NOT_FOUND_ERROR));
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASON_MESSAGE,getErrorReasonMessage());
    }
    else      {
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASONCODE, 
            new Packages.java.lang.Integer(Packages.com.ibm.itim.remoteservices.provider.Reason.PROCESSING_ERROR));
        work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASON_MESSAGE,getErrorReasonMessage());
    }
    var v = new Packages.java.util.Vector();
    v.add(gOperationType + " Error: " + error.toString());
    work.setProperty(Packages.com.ibm.di.dispatcher.Defs.REASON_MESSAGE_ARGS, v);
    var e = new Packages.com.ibm.di.exception.ITDIAgentException(gOperationType + " Error");
    e.setEntry(work);
    
    log("ERROR", work.toJSON());

    log("DEBUG", "Process Error: Throwing ITDI Exception");
    system.dumpEntry(work);
    throw e;
}


function getErrorReasonMessage() {
    var rmsg = "";
    if (gOperationType == "add") 
        rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_ADD_FAILED;
    else if (gOperationType == "modify") 
        rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_MOD_FAILED;
    else if (gOperationType == "delete") 
     rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_DEL_FAILED;
    else if (gOperationType == "suspend") 
       rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_SUSPEND_FAILED;
    else if (gOperationType == "restore") 
        rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_RESTORE_FAILED;
    else if (gOperationType == "changepassword") 
        rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_MOD_FAILED;
    else if (gOperationType == "search") 
        rmsg = Packages.com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_SRCH_FAILED;
    else task.logmsg("ERROR", "getErrorReasonMessage: Invalid operation type " + gOperationType);
    log("ERROR","getErrorReasonMessage: ReasonMessage: " + rmsg);
    return rmsg;
}

// Dumps out all Entry objects for the AL
function dumpAll() {
	log("================= OpEntry ==================>> \n" 
		+ task.getOpEntry() + "\n"
		+ "================= WORK (IWE) ==================>> \n"
		+ work );
}]]></parameter>
        </Script>
        <Script name="adapterLib OLD">
            <ModTime>1729854325234</ModTime>
            <parameter name="autoInclude">false</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[function initStatusCode() {
    // Init status code to successful
    work.setProperty(com.ibm.di.dispatcher.Defs.STATUSCODE, new java.lang.Integer(
        com.ibm.itim.remoteservices.provider.Status.SUCCESSFUL));
}

function setStatusUnSuccessful() {
    work.setProperty(com.ibm.di.dispatcher.Defs.STATUSCODE, new java.lang.Integer(
        com.ibm.itim.remoteservices.provider.Status.UNSUCCESSFUL));
}

function processError() {
    work.removeAllAttributes();

    work.setProperty(com.ibm.di.dispatcher.Defs.STATUSCODE, 
        new java.lang.Integer(com.ibm.itim.remoteservices.provider.Status.UNSUCCESSFUL));

    if( error.getString("class") == "javax.naming.CommunicationException")
    {
        work.setProperty(com.ibm.di.dispatcher.Defs.REASONCODE, 
            new java.lang.Integer(com.ibm.itim.remoteservices.provider.Reason.COMMUNICATION_ERROR));
        work.setProperty(com.ibm.di.dispatcher.Defs.REASON_MESSAGE, 
            com.ibm.di.dispatcher.DispatcherReasonMessage.CONNECTOR_CONNECTION_ERROR);

    }
    else if( error.getString("class") == "javax.naming.AuthenticationException")
    {
        work.setProperty(com.ibm.di.dispatcher.Defs.REASONCODE, 
            new java.lang.Integer(com.ibm.itim.remoteservices.provider.Reason.AUTHENTICATION_ERROR));
        work.setProperty(com.ibm.di.dispatcher.Defs.REASON_MESSAGE, 
            com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_INVALID_LOGIN_CREDENTIALS);
    }
    else if(error.getString("class") == "javax.naming.NameNotFoundException")
    {
        work.setProperty(com.ibm.di.dispatcher.Defs.REASONCODE, 
            new java.lang.Integer(com.ibm.itim.remoteservices.provider.Reason.NAME_NOT_FOUND_ERROR));
        work.setProperty(com.ibm.di.dispatcher.Defs.REASON_MESSAGE,getErrorReasonMessage());
    }
    else
    {
        work.setProperty(com.ibm.di.dispatcher.Defs.REASONCODE, 
            new java.lang.Integer(com.ibm.itim.remoteservices.provider.Reason.PROCESSING_ERROR));
        work.setProperty(com.ibm.di.dispatcher.Defs.REASON_MESSAGE,getErrorReasonMessage());
    }

    var v = new java.util.Vector();
    v.add(gOperationType + " Error: " + error.toString());
    work.setProperty(com.ibm.di.dispatcher.Defs.REASON_MESSAGE_ARGS, v);

    var e = new com.ibm.di.exception.ITDIAgentException(gOperationType + " Error");
    e.setEntry(work);
    task.logmsg("DEBUG", "Process Error: Throwing ITDI Exception");
    system.dumpEntry(work);
    throw e;
}

function getErrorReasonMessage() {
    var rmsg = "";
    if (gOperationType == "add") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_ADD_FAILED;
    else if (gOperationType == "modify") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_MOD_FAILED;
    else if (gOperationType == "delete") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_DEL_FAILED;
    else if (gOperationType == "suspend") 
       rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_SUSPEND_FAILED;
    else if (gOperationType == "restore") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_RESTORE_FAILED;
    else if (gOperationType == "changepassword") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_MOD_FAILED;
    else if (gOperationType == "search") 
        rmsg = com.ibm.di.dispatcher.DispatcherReasonMessage.ADAPTER_SRCH_FAILED;
    else task.logmsg("DEBUG", "getErrorReasonMessage: Invalid operation type " + gOperationType);

    task.logmsg("DEBUG","getErrorReasonMessage: ReasonMessage: " + rmsg);
    return rmsg;
}]]></parameter>
        </Script>
        <Script name="ScriptLib">
            <ModTime>1729441627422</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//vrs = "20170821 0719"; // Create the library
vrs = "20170822 0707"; // Add report and ensure unique global id

function tlog(lvl, msg) {
	if (typeof(msg) == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	
    task.logmsg(lvl , msg);
    java.lang.System.out.println(lvl + " : " + msg);
} 

tlog("Script Lib v." + vrs);

function findContainerDN(pimldap, containerStr) {
	
	// IBM/IAMaaS_CustomerAll/North America_IGA_Cust2/North America_IGA_Linux_Cust2
	var parts = system.splitString(containerStr, "/");
	var e = pimldap.findEntry("ou", parts[0]);
	if (e == null) {
		throw "Can not find ou='" + parts[index] + "' at root.";
	}
	var parentDN = e.getString("$dn");
	var index = 1;
	do {
		var sc = system.newSearchCriteria();
		sc.setType(sc.SEARCH_AND);
		sc.addCriteria("ou", sc.EXACT, parts[index]);
		sc.addCriteria("erparent", sc.EXACT, parentDN);
		e = pimldap.findEntry(sc);
		if (e == null) {
			throw "Can not find ou='" + parts[index] + "' under erparent " + parentDN;
		}
		parentDN = e.getString("$dn");
		index++;
	} while (index < parts.length);
	return parentDN;
}

function createGlobalID() {
	// erglobalid=1145631404670185734
	var id = "0";
	for (var i=0; id.length < 19; i++) {
		id += Math.floor(Math.random() * 10);
	}
	return id;
}

function createUniqueGlobalID(pimldap){
	
	var found = false;
	while (found != true) {
		var erglobalid = createGlobalID();
		// just fo testing
		//erglobalid = "0000402380724635772";
		task.logmsg("DEBUG" , "erglobalid=" + erglobalid);
		
		//DC=COM
		e = pimldap.findEntry("erglobalid", erglobalid);
		if (e == null) {
			found = true;
			task.logmsg("DEBUG" , "New valid random erglobalid='" + erglobalid + "'!");
		}
		else {
			task.logmsg("DEBUG" , "FOUND DN=''" + e.getString("$dn")  + "''!  Try next random erglobalid...");
		}
	}
	return erglobalid;
}

var rfile = null;
var now = system.formatDate(new java.util.Date(), "yyyyMMdd'_'HHmm'");
function report(lvl, msg) {
	if (rfile == null) {
		var rfilepath = "PIMOULoader/Output/PIMOULoader";		
		rfilepath = rfilepath + "_" + now + ".log";
		rfile = system.openFileForOutput(rfilepath);
	}
	
	if (typeof(msg) == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	
	if (lvl == "ERROR") {
		rfile.write("(ERROR) ");
	}
	rfile.write(msg);
	rfile.newLine();
}

function closereport() {
	try {
		rfile.close();
	} catch (ex) {
		// do nothing
	}
}]]></parameter>
        </Script>
        <Script name="ScriptLib 20170821 1236">
            <ModTime>1729441627771</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[vrs = "20170821 0719"; // Create the library

function tlog(lvl, msg) {
	if (typeof(msg) == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	
    task.logmsg(lvl , msg);
    java.lang.System.out.println(lvl + " : " + msg);
} 

tlog("Script Lib v." + vrs);

function findContainerDN(pimldap, containerStr) {
	
	// IBM/IAMaaS_CustomerAll/North America_IGA_Cust2/North America_IGA_Linux_Cust2
	var parts = system.splitString(containerStr, "/");
	var e = pimldap.findEntry("ou", parts[0]);
	if (e == null) {
		throw "Can not find ou='" + parts[index] + "' at root.";
	}
	var parentDN = e.getString("$dn");
	var index = 1;
	do {
		var sc = system.newSearchCriteria();
		sc.setType(sc.SEARCH_AND);
		sc.addCriteria("ou", sc.EXACT, parts[index]);
		sc.addCriteria("erparent", sc.EXACT, parentDN);
		e = pimldap.findEntry(sc);
		if (e == null) {
			throw "Can not find ou='" + parts[index] + "' under erparent " + parentDN;
		}
		parentDN = e.getString("$dn");
		index++;
	} while (index < parts.length);
	return parentDN;
}

function createGlobalID() {
	// erglobalid=1145631404670185734
	var id = "0000";
	for (var i=0; id.length < 19; i++) {
		id += Math.floor(Math.random() * 10);
	}
	return id;
}]]></parameter>
        </Script>
        <Script name="Properties to Variables">
            <ModTime>1729441627377</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[errors = [];

adapterName = system.getTDIProperty("adapter.name").trim();
adapterConfig = system.getTDIProperty("adapter.config").trim();
adapterType = system.getTDIProperty("adapter.type").trim().toUpperCase();
adapterCategory = system.getTDIProperty("adapter.category").trim().toLowerCase();
adapterCategory = adapterCategory.substring(0,1).toUpperCase()
					+ adapterCategory.substring(1);
adapterVersion = system.getTDIProperty("adapter.version").trim();
adapterDescription = system.getTDIProperty("adapter.description").trim();

fromFolder = system.getTDIProperty("adapter.source.folder").trim();
toFolder = system.getTDIProperty("adapter.destination.folder").trim();

if (!fromFolder.endsWith("/") && !fromFolder.endsWith("\\")) {
	fromFolder += "/";
}
if (!toFolder.endsWith("/") && !toFolder.endsWith("\\")) {
	toFolder += "/";
}

if (errors.length > 0) { system.exitFlow(); }]]></parameter>
        </Script>
        <Script name="Global vars and functions">
            <ModTime>1729441627763</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Define some functions used by this AL
atts = {};
classes = {};

adapterName = system.getTDIProperty("adapter.name").trim();

// Returns a FormElement node for the Service form XML
function formElementNode(pDef) {
	var n = system.newAttribute("FormElement");
	n.@direction = "inherit";
	n.@label = "$" + pDef.name;
	n.@name = "data." + pDef.name;
	if (pDef.required == true) {
		n.@required = "true";
	}
	
	var input = system.newAttribute("input");
	input.@name = "data." + pDef.name;
	input.@type = pDef.type;
	if (pDef.required == true) {
		input.constraint = null;
		input.constraint.type = "REQUIRED";
		input.parameter = true;
	}
	n.appendChild(input);
	
	return n;
}

// Returns the Service form xml
function serviceForm() {
	var serviceXML = system.getScriptText("serviceFormXML");
	var e = com.ibm.di.entry.Entry.fromXML(serviceXML, "*", "");
	var tabs = e.getElementsByTagName("tab");
	tabs[0].title = adapterName;
	
	var ctab = tabs[1];
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "text",
				required: false
			}
			for (var p in parts) {
				if (p.indexOf("password") >= 0) {
					pDef.type = "password";
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				}
			}
			ctab.appendChild(formElementNode(pDef));
		}
	}
	
	return e;
}

// Returns the membership attribute tagged for user or group class
// and flags an error if this is not defined.
function getMemAttr(classType) {
	var attName = membershipAttributes[classType];
	if (typeof attName == "undefined") {
		errors.push("No attribute assigned to " + classType + " has been tagged as 'membership' related");
		return "*no " + classType + " attribute tagged with 'membership'*";
	}
	return attName;
}

// Returns an Attribute node for the GroupDefinition in service.def
function groupAttNode(name, value) {
	var gan = system.newAttribute("Attribute");
	gan.@name = name;
	gan.@value = value;
	return gan;
}

// Returns a GroupDefinition node for service.def
function groupDefinitionNode() {
	var gdef = system.newAttribute("GroupDefinition");
	gdef.@profileName = adapterName;
	gdef.@className = classes["group"];
	gdef.@accountAttribute = getMemAttr("user");
	var groupId = getMemAttr("group");
	gdef.@rdnAttribute = groupId;
	
	gdef.AttributeMap = null;
	gdef.AttributeMap.appendChild(groupAttNode("erGroupId", groupId));
	gdef.AttributeMap.appendChild(groupAttNode("erGroupName", groupId));
	
	gdef.properties = null;
	var prop = system.newAttribute("property");
	prop.@name = "Managed";
	prop.value = false;
	gdef.properties.appendChild(prop);
	
	return gdef;
}

// Returns the details of an attribute property value
function getDetails(parts, errors) {
	var det = {
				multi: false, 
				oid: "1.3.6.1.4.1.1466.115.121.1.15",
				required: false, 
				caseExact: false,
				description: parts[0],
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none"
			 }; 
	var oid = "";
	for (var i = 1; i < parts.length; i++) {
		p = parts[i].trim().toLowerCase();
		if (p.startsWith("readw")) {
			det.mutability = "readWrite";
		} else 
		if (p.startsWith("writeo")) {
			det.mutability = "writeOnly";
		} else 
		if (p.startsWith("im")) {
			det.mutability = "immutable";
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.type = p;
		} else 
		if (p.startsWith("mem")) {
			det.membership = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.oid = syntax[p];
			det.type = p;
		} else {
			var msg = "Invalid attribute flag: " + p + "  for " + parts[0];
			log("ERROR", msg);
			errors.push(msg);
		}
	}
	
	return det;
}

// Creates and returns an attribute-type node 
function attTypeNode(attName, errors, type) {
	type = type || "string";
	var propVal = system.getTDIProperty("AdapterKit", "attribute." + attName);
	if (propVal == null || propVal.trim() == "") {
		propVal = attName + "; " + type;
	}
	var parts = system.splitString(propVal, ";");
	var att = system.newAttribute("attribute-type");
	if (parts.length < 1 || parts.length > 4) {
		errors.push("Invalid property value for attribute." + attName
						+ ": " + propVal);
		return att;
	}

	var attDetails = getDetails(parts, errors);
	
	att["@single-value"] = attDetails.multi ? "false" : "true";
	att.name = attName;
	att.description = parts[0];
	att["object-identifier"] = attName.toLowerCase() + "-oid";
	att.syntax = attDetails.oid;
	
	task.logmsg("Defining attribute: " + attName);
	attDef = {
		name: attName,
		multiValued: attDetails.multi,
		label: parts[0],
		type: attDetails.type,
		syntax: attDetails.syntax,
		required: false,
		caseExact: false,
		mutability: "readWrite",
		returned: "default",
		uniqueness: "none"
	}
	
	if (attDetails.membership) {
		attDef.membership = attDetails.membership;
	}
	
	atts[attName] = attDef;
	
	return att;
}

classForAttributes = {};
classAttributes = {};
keyAttribute = {};
membershipAttributes = {};
// Returns the class node for the schema.dsml file
function classNode(className, classType, errors, groupAtts) {
	var cl = system.newAttribute("class");
	var propVal = system.getTDIProperty("AdapterKit", "class." + classType + "." + className);
	if (propVal == null || propVal.trim() == "") {
		errors.push("Missing property value for class." + className);
		return cl;
	}
	var parts = system.splitString(propVal, ";");
	
	var useClassType = classType.substring(0, 1).toUpperCase() + classType.substring(1);
	
	var found = {};
	cl.@superior = "top";
	cl.name = className;
	cl.description = parts[0];
	cl["object-identifier"] = className.toLowerCase() + "-oid";
	
	var classDef = {
			name: useClassType,
			schemas: ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
			id: className,
			description: parts[0],
			schema: "urn:ietf:params:scim:schemas:core:2.0:" + useClassType,
			schemaExtensions: [{
				schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + className 
							+ ":2.0:" + useClassType,
				required: false
			}],
			meta: {
				location: "/v2/ResourceTypes/" + useClassType,
				resourceType: "ResourceType"
			}
		};
	classes[className] = classDef;
	
	for (var i = 1; i < parts.length; i++) {
		var part = parts[i].trim();
		var p = part.indexOf("(");
		var req = "n";
		if (p > 0) {
			req = part.substring(p+1, p+2).toLowerCase();
			part = part.substring(0, p);
		}

		found[part] = true;

		var att = system.newAttribute("attribute");
		var attName = part.trim();
		att.@ref = attName;
		attRequired = (req == "r" || req == "k");
		attIsKey = (req == "k");
		if (attIsKey) {
			keyAttribute[classType] = attName;
		}
		att.@required = attRequired ? "true" : "false";
		cl.appendChild(att);
		
		var aDef = atts[attName];
		if (aDef) {
			aDef.className = className;
			aDef.required = attRequired;
			aDef.isKey = attIsKey;

			if (aDef.membership == true) {
				membershipAttributes[classType] = attName;
			}
		}
		

		classForAttributes[attName] = className;
		if (typeof classAttributes[className] == "undefined") {
			classAttributes[className] = [];
		}
		classAttributes[className].push(attName);
				
		if ("group".equals(classType)) {
			groupAtts.push(attName);
		}
	}
	
	var mandatory = mandatoryAtts[classType];
	for (var attName in mandatory) {
		if (!found[attName]) {
			var thisAtt = mandatory[attName];
			cl.appendChild(newAttributeNode(attName, thisAtt.required));
			classForAttributes[attName] = className;
			if (typeof classAttributes[className] == "undefined") {
				classAttributes[className] = [];
			}
			classAttributes[className].push(attName);
			var aDef = atts[attName];
			if (aDef) {
				aDef.className = className;
				for (var thisProp in thisAtt) {
					aDef[thisProp] = thisAtt[thisProp];
				}
			}
		}
	}
	
	return cl;
}

// Returns an 'attribute' node
function newAttributeNode(attName, required) {
	var att = system.newAttribute("attribute");
	att.@ref = attName;
	att.@required = required ? "true" : "false";
	return att;
}

// Returns a 'type' node for the service.def file
function newTypeNode(classType, classes) {
	var className = classes[classType].className;
	var type = system.newAttribute("type");
	type.@name = className;
	type.@category = (classType == "user") ? "account" : "service";
	type.@location = "schema.dsml";
	type.@profile = (classType == "user") ? className.substring(2) : adapterName;
	type.key = null;
	type.key.field = (classType == "user") ? "eruid" : "erservicename";
	type.form = null;
	type.form.@location = className + ".xml";
	
	return type;
}

// Returns a dispatcherParameter node
function dispatcherParameter(paramName, defaultVal) {
	var dp = system.newAttribute("dispatcherParameter");
	dp.@name = paramName;
	if (defaultVal.startsWith("$")) {
		dp["default"] = defaultVal;
	} else {
		dp.@source = defaultVal
	}
	return dp;
}

// Returns and input node
function inputNode(nodeName, source) {
	var node = system.newAttribute("input");
	node.@name = nodeName;
	node.@source = source;
	return node;
}

// Returns 'operation' node for service.def file
function newOperationNode(alName, alDetails) {
	var op = system.newAttribute("operation");
	op.@cn = alDetails.assemblyLine;
	op.name = alDetails.operation;
	op.description = alDetails.description;
	op.assemblyLine = alDetails.assemblyLine + ".xml";
	
	if (isForIIM() 
		&& (alDetails.operation == "modify" || alDetails.operation == "delete")) {
		op.appendChild(inputNode("$dn", "entrydn"));
	}
	
	var keyAttName = keyAttribute["user"];
	if (keyAttName) {
		op.appendChild(inputNode(keyAttName, keyAttName));
	} else {
		op.appendChild(inputNode("eruid", "eruid"));
	}
	
	op.appendChild(dispatcherParameter("OperationType", "$(OO!operation)"));
//	op.appendChild(dispatcherParameter("erUID", "$(SO!erServiceUid)"));
//	op.appendChild(dispatcherParameter("erPassword", "$(SO!erPassword)"));	
	op.appendChild(dispatcherParameter("DisableAlCachPerService", 
										"$(SO!erTDICustomDisableALCache)"));
	op.appendChild(dispatcherParameter("ALFileSystemPath", 
										"erTDICustomALFileSystemPath"));
	op.appendChild(dispatcherParameter("MaxConnectionCnt", 
										"$(SO!erTDICustomMaxConnectionCnt)"));
	
	op.connector = null;
	op.connector.@name = "NameOfConnectorInAL";
	op.connector.parameter = "Label for this parameter in the UI";
	op.connector.parameter.@name = "InternalParamNameInTDI";
	op.connector.parameter.@source = "internalIIM/BrokerParameterName";
	return op;
}

// Returns a formElement node for a Form
function formElement(fieldName, reqOrAttObj, typeText, paramText) {
	if (typeof reqOrAttObj == "object") {
		var required = false;
		var attObj = reqOrAttObj;	
	} else {
		var required = reqOrAttObj || false;
		var attObj = null;
	}	
	
	var fe = system.newAttribute("formElement");
	fe.@direction = "inherit";
	fe.@name = "data." + fieldName;
	if (attObj && attObj.label) {
		fe.@label = attObj.label;
	} else {
		fe.@label = "$" + fieldName;
	}	
	if (required) { fe.@required = "true"; }
	
	fe.input = null;
	fe.input.@name = "data." + fieldName;
	fe.input.@type = "text";
	fe.input["@size"] = "50";
	
	if (typeText || paramText) {
		fe.constraint = null;
		if (typeText) { fe.constraint.type = typeText; } 
		if (paramText) { fe.constraint.parameter = paramText; } 
	}
	
	if (attObj && attObj.membership && attObj.multiValued) {
		fe.searchFilter = null;
		fe.searchFilter.@type = "select";
		fe.searchFilter.@multiple = "true";
		var sf = fe.searchFilter;
		
		sf.filter="(objectClass=" + classes.group.className + ")";
		sf.base = "contextual";
		sf.attribute = groupAttributes[0];
		sf.width = "300";
		sf.showQueryUI = "false"
		sf.paginateResults = "false";
	}
	
	return fe;
}

// Returns a 'property' node
function newPropertyNode(propName, propVal) {
	var pnode = system.newAttribute("property");
	pnode.@name = propName;
	pnode.value = propVal;
	return pnode;
}

// Returns true if adapterType is IIM
function isForIIM() {
	return ("ITIM".equals(adapterType)
			|| "ISIM".equals(adapterType)
			|| "IIM".equals(adapterType)
			|| "IM".equals(adapterType));
}

// Returns true if adapterType is PIM
function isForPIM() {
	return "PIM".equals(adapterType) || "IPIM".equals(adapterType);
}

// Returns true if adapterType is IGI
function isForIGI() {
	return "IGI".equals(adapterType) || "GI".equals(adapterType);
}

// Returns a targetProfile.json userExtension
function userExtension(attName, errors, attributes) {
	var obj = { userExtension: {} };
	var ue = obj.userExtension;
	var className = classForAttributes[attName];
	ue.schema = "";
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.userExtension;
	return ue;
}

// Returns a targetProfile.json resourceType
function resourceType(className, classType, classDescription, errors) {
	var isTarget = (classType == "Service");
	var useClassType = (isTarget) ? "Target" : classType;
	
	useClassType = useClassType.substring(0,1).toUpperCase() + useClassType.substring(1);
	
	var rt = {};
	rt.schemas = ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"];
	rt.id = adapterName + useClassType;
	rt.name = useClassType;
	rt.endpoint = useClassType + "s";
	rt.description = classDescription;
	rt.schema = "urn:ietf:params:scim:schemas:core:2.0:" 
					+ useClassType;
	rt.schemaExtensions = [];
	if (!isTarget) {
		rt.schemaExtensions.push({
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + adapterName + useClassType + ":2.0:" + useClassType,
			required: false
		});
	}
	rt.meta = {
		location : "/v2/ResourceTypes/" + useClassType,
		resourceType: "ResourceType"
	}
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.resourceType;
	return rt;
}

// Returns an array of attributes for the passed class name
function allAttributesForClass(className) {
	var arr = [];
	for (var i = 0; i < classAttributes[className].length; i++) {
		var attName = classAttributes[className][i];
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: attDef.type,
				multiValued: attDef.multiValued || false,
				description: attDef.label || "",
				required: attDef.required || false,
				caseExact: attDef.caseExact || false,
				mutability: attDef.mutability || "readWrite",
				returned: attDef.returned || "default",
				uniqueness: attDef.uniqueness || "none"
			};
			arr.push(att);
		}	
	}
	
	return arr;
}

// process targetSchema
targetSchema = {
	schema: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
	definition: {
		id: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
		description: "ICBSJIRAAdapterProfile Target definition",
		attributes: [
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "erservicename",
			returned: "always",
			required: true,
			caseExact: true,
			multiValued: false,
			type: "string",
			name: "erservicename"
		},
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "URL of SDI dispatcher",
			returned: "default",
			required: true,
			caseExact: false,
			multiValued: false,
			type: "string",
			name: "eritdiurl"
		}
		],
		name: "Target definition"
	}
}

function processTargetSchema() {
	targetSchema.schema = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
	targetSchema.definition.id = targetSchema.schema;
	targetSchema.definition.descript = adapterDescription;
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "string",
				multiValued: false,
				caseExact: false,
				description: parts[0].trim(),
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none",
				required: false
			}
			for (var p in parts) {
				if (typeof syntax[p] != "undefined") {
					pDef.type = p;
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				} else
				if (p.indexOf("case") >= 0) {
					pDef.caseExact = true;
				}
			}
			targetSchema.definition.attributes.push(pDef);
		}
	}
}

function processTargetSchemaOLD() {
	for (var cType in mandatoryAtts) {
		var cAtts = mandatoryAtts[cType];
		for (var attName in cAtts) {
			if (typeof atts[attName] == "undefined") {
				atts[attName] = cAtts[attName];
			}
		}
	}	
	
	var targetAtts = targetSchema.definition.attributes;
	for (var i = 0; i < targetAtts.length; i++) {
		var thisAtt = targetAtts[i];
		var attName = thisAtt.name;
		if (typeof atts[thisAtt] == "undefined") {
			log("Processing attribute: " + attName);
			atts[attName] = thisAtt;
		}
	}
}]]></parameter>
        </Script>
        <Script name="Global vars and functions 20170810 2109">
            <ModTime>1729441627779</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Define some functions used by this AL
atts = {};
classes = {};

adapterName = system.getTDIProperty("adapter.name").trim();

// Returns a FormElement node for the Service form XML
function formElementNode(pDef) {
	var n = system.newAttribute("FormElement");
	n.@direction = "inherit";
	n.@label = "$" + pDef.name;
	n.@name = "data." + pDef.name;
	if (pDef.required == true) {
		n.@required = "true";
	}
	
	var input = system.newAttribute("input");
	input.@name = "data." + pDef.name;
	input.@type = pDef.type;
	if (pDef.required == true) {
		input.constraint = null;
		input.constraint.type = "REQUIRED";
		input.parameter = true;
	}
	n.appendChild(input);
	
	return n;
}

// Returns the Service form xml
function serviceForm() {
	var serviceXML = system.getScriptText("serviceFormXML");
	var e = com.ibm.di.entry.Entry.fromXML(serviceXML, "*", "");
	var tabs = e.getElementsByTagName("tab");
	tabs[0].title = adapterName;
	
	var ctab = tabs[1];
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "text",
				required: false
			}
			for (var p in parts) {
				if (p.indexOf("password") >= 0) {
					pDef.type = "password";
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				}
			}
			ctab.appendChild(formElementNode(pDef));
		}
	}
	
	return e;
}

// Returns the membership attribute tagged for user or group class
// and flags an error if this is not defined.
function getMemAttr(classType) {
	var attName = membershipAttributes[classType];
	if (typeof attName == "undefined") {
		errors.push("No attribute assigned to " + classType + " has been tagged as 'membership' related");
		return "*no " + classType + " attribute tagged with 'membership'*";
	}
	return attName;
}

// Returns an Attribute node for the GroupDefinition in service.def
function groupAttNode(name, value) {
	var gan = system.newAttribute("Attribute");
	gan.@name = name;
	gan.@value = value;
	return gan;
}

// Returns a GroupDefinition node for service.def
function groupDefinitionNode() {
	var gdef = system.newAttribute("GroupDefinition");
	gdef.@profileName = adapterName;
	gdef.@className = classes["group"];
	gdef.@accountAttribute = getMemAttr("user");
	var groupId = getMemAttr("group");
	gdef.@rdnAttribute = groupId;
	
	gdef.AttributeMap = null;
	gdef.AttributeMap.appendChild(groupAttNode("erGroupId", groupId));
	gdef.AttributeMap.appendChild(groupAttNode("erGroupName", groupId));
	
	gdef.properties = null;
	var prop = system.newAttribute("property");
	prop.@name = "Managed";
	prop.value = false;
	gdef.properties.appendChild(prop);
	
	return gdef;
}

// Returns the details of an attribute property value
function getDetails(parts, errors) {
	var det = {
				multi: false, 
				oid: "1.3.6.1.4.1.1466.115.121.1.15",
				required: false, 
				caseExact: false,
				description: parts[0],
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none"
			 }; 
	var oid = "";
	for (var i = 1; i < parts.length; i++) {
		p = parts[i].trim().toLowerCase();
		if (p.startsWith("readw")) {
			det.mutability = "readWrite";
		} else 
		if (p.startsWith("writeo")) {
			det.mutability = "writeOnly";
		} else 
		if (p.startsWith("im")) {
			det.mutability = "immutable";
		} else 

		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("password")) {
			det.type = "password";
		} else
		if (p.startsWith("mem")) {
			det.membership = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.oid = syntax[p];
			det.type = p;
		} else {
			var msg = "Invalid attribute flag: " + p + "  for " + parts[0];
			log("ERROR", msg);
			errors.push(msg);
		}
	}
	
	return det;
}

// Creates and returns an attribute-type node 
function attTypeNode(attName, errors, type) {
	type = type || "string";
	var propVal = system.getTDIProperty("AdapterKit", "attribute." + attName);
	if (propVal == null || propVal.trim() == "") {
		propVal = attName + "; " + type;
	}
	var parts = system.splitString(propVal, ";");
	var att = system.newAttribute("attribute-type");
	if (parts.length < 1 || parts.length > 4) {
		errors.push("Invalid property value for attribute." + attName
						+ ": " + propVal);
		return att;
	}

	var attDetails = getDetails(parts, errors);
	
	att["@single-value"] = attDetails.multi ? "false" : "true";
	att.name = attName;
	att.description = parts[0];
	att["object-identifier"] = attName.toLowerCase() + "-oid";
	att.syntax = attDetails.oid;
	
	task.logmsg("Defining attribute: " + attName);
	attDef = {
		name: attName,
		multiValued: attDetails.multi,
		label: parts[0],
		type: attDetails.type,
		syntax: attDetails.syntax,
		required: false,
		caseExact: false,
		mutability: "readWrite",
		returned: "default",
		uniqueness: "none"
	}
	
	if (attDetails.membership) {
		attDef.membership = attDetails.membership;
	}
	
	atts[attName] = attDef;
	
	return att;
}

classForAttributes = {};
classAttributes = {};
keyAttribute = {};
membershipAttributes = {};
// Returns the class node for the schema.dsml file
function classNode(className, classType, errors, groupAtts) {
	var cl = system.newAttribute("class");
	var propVal = system.getTDIProperty("AdapterKit", "class." + classType + "." + className);
	if (propVal == null || propVal.trim() == "") {
		errors.push("Missing property value for class." + className);
		return cl;
	}
	var parts = system.splitString(propVal, ";");
	
	var useClassType = classType.substring(0, 1).toUpperCase() + classType.substring(1);
	
	var found = {};
	cl.@superior = "top";
	cl.name = className;
	cl.description = parts[0];
	cl["object-identifier"] = className.toLowerCase() + "-oid";
	
	var classDef = {
			name: useClassType,
			schemas: ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
			id: className,
			description: parts[0],
			schema: "urn:ietf:params:scim:schemas:core:2.0:" + useClassType,
			schemaExtensions: [{
				schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + className 
							+ ":2.0:" + useClassType,
				required: false
			}],
			meta: {
				location: "/v2/ResourceTypes/" + useClassType,
				resourceType: "ResourceType"
			}
		};
	classes[className] = classDef;
	
	for (var i = 1; i < parts.length; i++) {
		var part = parts[i].trim();
		var p = part.indexOf("(");
		var req = "n";
		if (p > 0) {
			req = part.substring(p+1, p+2).toLowerCase();
			part = part.substring(0, p);
		}

		found[part] = true;

		var att = system.newAttribute("attribute");
		var attName = part.trim();
		att.@ref = attName;
		attRequired = (req == "r" || req == "k");
		attIsKey = (req == "k");
		if (attIsKey) {
			keyAttribute[classType] = attName;
		}
		att.@required = attRequired ? "true" : "false";
		cl.appendChild(att);
		
		var aDef = atts[attName];
		if (aDef) {
			aDef.className = className;
			aDef.required = attRequired;
			aDef.isKey = attIsKey;

			if (aDef.membership == true) {
				membershipAttributes[classType] = attName;
			}
		}
		

		classForAttributes[attName] = className;
		if (typeof classAttributes[className] == "undefined") {
			classAttributes[className] = [];
		}
		classAttributes[className].push(attName);
				
		if ("group".equals(classType)) {
			groupAtts.push(attName);
		}
	}
	
	var mandatory = mandatoryAtts[classType];
	for (var attName in mandatory) {
		if (!found[attName]) {
			var thisAtt = mandatory[attName];
			cl.appendChild(newAttributeNode(attName, thisAtt.required));
			classForAttributes[attName] = className;
			if (typeof classAttributes[className] == "undefined") {
				classAttributes[className] = [];
			}
			classAttributes[className].push(attName);
			var aDef = atts[attName];
			if (aDef) {
				aDef.className = className;
				for (var thisProp in thisAtt) {
					aDef[thisProp] = thisAtt[thisProp];
				}
			}
		}
	}
	
	return cl;
}

// Returns an 'attribute' node
function newAttributeNode(attName, required) {
	var att = system.newAttribute("attribute");
	att.@ref = attName;
	att.@required = required ? "true" : "false";
	return att;
}

// Returns a 'type' node for the service.def file
function newTypeNode(classType, classes) {
	var className = classes[classType].className;
	var type = system.newAttribute("type");
	type.@name = className;
	type.@category = (classType == "user") ? "account" : "service";
	type.@location = "schema.dsml";
	type.@profile = (classType == "user") ? className.substring(2) : adapterName;
	type.key = null;
	type.key.field = (classType == "user") ? "eruid" : "erservicename";
	type.form = null;
	type.form.@location = className + ".xml";
	
	return type;
}

// Returns a dispatcherParameter node
function dispatcherParameter(paramName, defaultVal) {
	var dp = system.newAttribute("dispatcherParameter");
	dp.@name = paramName;
	if (defaultVal.startsWith("$")) {
		dp["default"] = defaultVal;
	} else {
		dp.@source = defaultVal
	}
	return dp;
}

// Returns and input node
function inputNode(nodeName, source) {
	var node = system.newAttribute("input");
	node.@name = nodeName;
	node.@source = source;
	return node;
}

// Returns 'operation' node for service.def file
function newOperationNode(alName, alDetails) {
	var op = system.newAttribute("operation");
	op.@cn = alDetails.assemblyLine;
	op.name = alDetails.operation;
	op.description = alDetails.description;
	op.assemblyLine = alDetails.assemblyLine + ".xml";
	
	if (isForIIM() 
		&& (alDetails.operation == "modify" || alDetails.operation == "delete")) {
		op.appendChild(inputNode("$dn", "entrydn"));
	}
	
	var keyAttName = keyAttribute["user"];
	if (keyAttName) {
		op.appendChild(inputNode(keyAttName, keyAttName));
	} else {
		op.appendChild(inputNode("eruid", "eruid"));
	}
	
	op.appendChild(dispatcherParameter("OperationType", "$(OO!operation)"));
//	op.appendChild(dispatcherParameter("erUID", "$(SO!erServiceUid)"));
//	op.appendChild(dispatcherParameter("erPassword", "$(SO!erPassword)"));	
	op.appendChild(dispatcherParameter("DisableAlCachPerService", 
										"$(SO!erTDICustomDisableALCache)"));
	op.appendChild(dispatcherParameter("ALFileSystemPath", 
										"erTDICustomALFileSystemPath"));
	op.appendChild(dispatcherParameter("MaxConnectionCnt", 
										"$(SO!erTDICustomMaxConnectionCnt)"));
	
	op.connector = null;
	op.connector.@name = "NameOfConnectorInAL";
	op.connector.parameter = "Label for this parameter in the UI";
	op.connector.parameter.@name = "InternalParamNameInTDI";
	op.connector.parameter.@source = "internalIIM/BrokerParameterName";
	return op;
}

// Returns a formElement node for a Form
function formElement(fieldName, reqOrAttObj, typeText, paramText) {
	if (typeof reqOrAttObj == "object") {
		var required = false;
		var attObj = reqOrAttObj;	
	} else {
		var required = reqOrAttObj || false;
		var attObj = null;
	}	
	
	var fe = system.newAttribute("formElement");
	fe.@direction = "inherit";
	fe.@name = "data." + fieldName;
	if (attObj && attObj.label) {
		fe.@label = attObj.label;
	} else {
		fe.@label = "$" + fieldName;
	}	
	if (required) { fe.@required = "true"; }
	
	fe.input = null;
	fe.input.@name = "data." + fieldName;
	fe.input.@type = "text";
	fe.input["@size"] = "50";
	
	if (typeText || paramText) {
		fe.constraint = null;
		if (typeText) { fe.constraint.type = typeText; } 
		if (paramText) { fe.constraint.parameter = paramText; } 
	}
	
	if (attObj && attObj.membership && attObj.multiValued) {
		fe.searchFilter = null;
		fe.searchFilter.@type = "select";
		fe.searchFilter.@multiple = "true";
		var sf = fe.searchFilter;
		
		sf.filter="(objectClass=" + classes.group.className + ")";
		sf.base = "contextual";
		sf.attribute = groupAttributes[0];
		sf.width = "300";
		sf.showQueryUI = "false"
		sf.paginateResults = "false";
	}
	
	return fe;
}

// Returns a 'property' node
function newPropertyNode(propName, propVal) {
	var pnode = system.newAttribute("property");
	pnode.@name = propName;
	pnode.value = propVal;
	return pnode;
}

// Returns true if adapterType is IIM
function isForIIM() {
	return ("ITIM".equals(adapterType)
			|| "ISIM".equals(adapterType)
			|| "IIM".equals(adapterType)
			|| "IM".equals(adapterType));
}

// Returns true if adapterType is PIM
function isForPIM() {
	return "PIM".equals(adapterType) || "IPIM".equals(adapterType);
}

// Returns true if adapterType is IGI
function isForIGI() {
	return "IGI".equals(adapterType) || "GI".equals(adapterType);
}

// Returns a targetProfile.json userExtension
function userExtension(attName, errors, attributes) {
	var obj = { userExtension: {} };
	var ue = obj.userExtension;
	var className = classForAttributes[attName];
	ue.schema = "";
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.userExtension;
	return ue;
}

// Returns a targetProfile.json resourceType
function resourceType(className, classType, classDescription, errors) {
	var isTarget = (classType == "Service");
	var useClassType = (isTarget) ? "Target" : classType;
	
	useClassType = useClassType.substring(0,1).toUpperCase() + useClassType.substring(1);
	
	var rt = {};
	rt.schemas = ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"];
	rt.id = adapterName + useClassType;
	rt.name = useClassType;
	rt.endpoint = useClassType + "s";
	rt.description = classDescription;
	rt.schema = "urn:ietf:params:scim:schemas:core:2.0:" 
					+ useClassType;
	rt.schemaExtensions = [];
	if (!isTarget) {
		rt.schemaExtensions.push({
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + adapterName + useClassType + ":2.0:" + useClassType,
			required: false
		});
	}
	rt.meta = {
		location : "/v2/ResourceTypes/" + useClassType,
		resourceType: "ResourceType"
	}
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.resourceType;
	return rt;
}

// Returns an array of attributes for the passed class name
function allAttributesForClass(className) {
	var arr = [];
	for (var i = 0; i < classAttributes[className].length; i++) {
		var attName = classAttributes[className][i];
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: attDef.type,
				multiValued: attDef.multiValued || false,
				description: attDef.label || "",
				required: attDef.required || false,
				caseExact: attDef.caseExact || false,
				mutability: attDef.mutability || "readWrite",
				returned: attDef.returned || "default",
				uniqueness: attDef.uniqueness || "none"
			};
			arr.push(att);
		}	
	}
	
	return arr;
}

// process targetSchema
targetSchema = {
	schema: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
	definition: {
		id: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
		description: "ICBSJIRAAdapterProfile Target definition",
		attributes: [
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "erservicename",
			returned: "always",
			required: true,
			caseExact: true,
			multiValued: false,
			type: "string",
			name: "erservicename"
		},
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "URL of SDI dispatcher",
			returned: "default",
			required: true,
			caseExact: false,
			multiValued: false,
			type: "string",
			name: "eritdiurl"
		}
		],
		name: "Target definition"
	}
}

function processTargetSchema() {
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "string",
				multiValued: false,
				caseExact: false,
				description: parts[0].trim(),
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none",
				required: false
			}
			for (var p in parts) {
				if (p.indexOf("password") >= 0) {
					pDef.type = "password";
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				} else
				if (p.indexOf("case") >= 0) {
					pDef.caseExact = true;
				}
			}
			targetSchema.definition.attributes.push(pDef);
		}
	}
}

function processTargetSchemaOLD() {
	for (var cType in mandatoryAtts) {
		var cAtts = mandatoryAtts[cType];
		for (var attName in cAtts) {
			if (typeof atts[attName] == "undefined") {
				atts[attName] = cAtts[attName];
			}
		}
	}	
	
	var targetAtts = targetSchema.definition.attributes;
	for (var i = 0; i < targetAtts.length; i++) {
		var thisAtt = targetAtts[i];
		var attName = thisAtt.name;
		if (typeof atts[thisAtt] == "undefined") {
			log("Processing attribute: " + attName);
			atts[attName] = thisAtt;
		}
	}
}]]></parameter>
        </Script>
        <Script name="Global vars and functions 20170810 1357">
            <ModTime>1729441627665</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Define some functions used by this AL
atts = {};
classes = {};

adapterName = system.getTDIProperty("adapter.name").trim();

// Returns a FormElement node for the Service form XML
function formElementNode(pDef) {
	var n = system.newAttribute("FormElement");
	n.@direction = "inherit";
	n.@label = "$" + pDef.name;
	n.@name = "data." + pDef.name;
	if (pDef.required == true) {
		n.@required = "true";
	}
	
	var input = system.newAttribute("input");
	input.@name = "data." + pDef.name;
	input.@type = pDef.type;
	if (pDef.required == true) {
		input.constraint = null;
		input.constraint.type = "REQUIRED";
		input.parameter = true;
	}
	n.appendChild(input);
	
	return n;
}

// Returns the Service form xml
function serviceForm() {
	var serviceXML = system.getScriptText("serviceFormXML");
	var e = com.ibm.di.entry.Entry.fromXML(serviceXML, "*", "");
	var tabs = e.getElementsByTagName("tab");
	tabs[0].title = adapterName;
	
	var ctab = tabs[1];
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "text",
				required: false
			}
			for (var p in parts) {
				if (p.indexOf("password") >= 0) {
					pDef.type = "password";
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				}
			}
			ctab.appendChild(formElementNode(pDef));
		}
	}
	
	return e;
}

// Returns the membership attribute tagged for user or group class
// and flags an error if this is not defined.
function getMemAttr(classType) {
	var attName = membershipAttributes[classType];
	if (typeof attName == "undefined") {
		errors.push("No attribute assigned to " + classType + " has been tagged as 'membership' related");
		return "*no " + classType + " attribute tagged with 'membership'*";
	}
	return attName;
}

// Returns an Attribute node for the GroupDefinition in service.def
function groupAttNode(name, value) {
	var gan = system.newAttribute("Attribute");
	gan.@name = name;
	gan.@value = value;
	return gan;
}

// Returns a GroupDefinition node for service.def
function groupDefinitionNode() {
	var gdef = system.newAttribute("GroupDefinition");
	gdef.@profileName = adapterName;
	gdef.@className = classes["group"];
	gdef.@accountAttribute = getMemAttr("user");
	var groupId = getMemAttr("group");
	gdef.@rdnAttribute = groupId;
	
	gdef.AttributeMap = null;
	gdef.AttributeMap.appendChild(groupAttNode("erGroupId", groupId));
	gdef.AttributeMap.appendChild(groupAttNode("erGroupName", groupId));
	
	gdef.properties = null;
	var prop = system.newAttribute("property");
	prop.@name = "Managed";
	prop.value = false;
	gdef.properties.appendChild(prop);
	
	return gdef;
}

// Returns the details of an attribute property value
function getDetails(parts, errors) {
	var det = {
				multi: false, 
				oid: "1.3.6.1.4.1.1466.115.121.1.15",
				required: false, 
				caseExact: false,
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none"
			 }; 
	var oid = "";
	for (var i = 1; i < parts.length; i++) {
		p = parts[i].trim().toLowerCase();
		if (p.startsWith("readw")) {
			det.mutability = "readWrite";
		} else 
		if (p.startsWith("writeo")) {
			det.mutability = "writeOnly";
		} else 
		if (p.startsWith("im")) {
			det.mutability = "immutable";
		} else 

		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (p.startsWith("mem")) {
			det.membership = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.oid = syntax[p];
			det.type = p;
		} else {
			var msg = "Invalid attribute flag: " + p + "  for " + parts[0];
			log("ERROR", msg);
			errors.push(msg);
		}
	}
	
	return det;
}

// Creates and returns an attribute-type node 
function attTypeNode(attName, errors) {
	var propVal = system.getTDIProperty("AdapterKit", "attribute." + attName);
	if (propVal == null || propVal.trim() == "") {
		propVal = attName + "; string";
	}
	var parts = system.splitString(propVal, ";");
	var att = system.newAttribute("attribute-type");
	if (parts.length < 1 || parts.length > 4) {
		errors.push("Invalid property value for attribute." + attName
						+ ": " + propVal);
		return att;
	}

	var attDetails = getDetails(parts, errors);
	
	att["@single-value"] = attDetails.multi ? "false" : "true";
	att.name = attName;
	att.description = parts[0];
	att["object-identifier"] = attName.toLowerCase() + "-oid";
	att.syntax = attDetails.oid;
	
	task.logmsg("Defining attribute: " + attName);
	attDef = {
		name: attName,
		multiValued: attDetails.multi,
		label: parts[0],
		type: attDetails.type,
		syntax: attDetails.syntax,
		required: false,
		caseExact: false,
		mutability: "readWrite",
		returned: "default",
		uniqueness: "none"
	}
	
	if (attDetails.membership) {
		attDef.membership = attDetails.membership;
	}
	
	atts[attName] = attDef;
	
	return att;
}

classForAttributes = {};
classAttributes = {};
keyAttribute = {};
membershipAttributes = {};
// Returns the class node for the schema.dsml file
function classNode(className, classType, errors, groupAtts) {
	var cl = system.newAttribute("class");
	var propVal = system.getTDIProperty("AdapterKit", "class." + classType + "." + className);
	if (propVal == null || propVal.trim() == "") {
		errors.push("Missing property value for class." + className);
		return cl;
	}
	var parts = system.splitString(propVal, ";");
	
	var useClassType = classType.substring(0, 1).toUpperCase() + classType.substring(1);
	
	var found = {};
	cl.@superior = "top";
	cl.name = className;
	cl.description = parts[0];
	cl["object-identifier"] = className.toLowerCase() + "-oid";
	
	var classDef = {
			name: useClassType,
			schemas: ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
			id: className,
			description: parts[0],
			schema: "urn:ietf:params:scim:schemas:core:2.0:" + useClassType,
			schemaExtensions: [{
				schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + className 
							+ ":2.0:" + useClassType,
				required: false
			}],
			meta: {
				location: "/v2/ResourceTypes/" + useClassType,
				resourceType: "resourceType"
			}
		};
	classes[className] = classDef;
	
	for (var i = 1; i < parts.length; i++) {
		var part = parts[i].trim();
		var p = part.indexOf("(");
		var req = "n";
		if (p > 0) {
			req = part.substring(p+1, p+2).toLowerCase();
			part = part.substring(0, p);
		}

		found[part] = true;

		var att = system.newAttribute("attribute");
		var attName = part.trim();
		att.@ref = attName;
		attRequired = (req == "r" || req == "k");
		attIsKey = (req == "k");
		if (attIsKey) {
			keyAttribute[classType] = attName;
		}
		att.@required = attRequired ? "true" : "false";
		cl.appendChild(att);
		
		var aDef = atts[attName];
		if (aDef) {
			aDef.className = className;
			aDef.required = attRequired;
			aDef.isKey = attIsKey;

			if (aDef.membership == true) {
				membershipAttributes[classType] = attName;
			}
		}
		

		classForAttributes[attName] = className;
		if (typeof classAttributes[className] == "undefined") {
			classAttributes[className] = [];
		}
		classAttributes[className].push(attName);
				
		if ("group".equals(classType)) {
			groupAtts.push(attName);
		}
	}
	
	var mandatory = mandatoryAtts[classType];
	for (var attName in mandatory) {
		if (!found[attName]) {
			var thisAtt = mandatory[attName];
			cl.appendChild(newAttributeNode(attName, thisAtt.required));
			classForAttributes[attName] = className;
			if (typeof classAttributes[className] == "undefined") {
				classAttributes[className] = [];
			}
			classAttributes[className].push(attName);
			var aDef = atts[attName];
			if (aDef) {
				aDef.className = className;
				for (var thisProp in thisAtt) {
					aDef[thisProp] = thisAtt[thisProp];
				}
			}
		}
	}
	
	return cl;
}

// Returns an 'attribute' node
function newAttributeNode(attName, required) {
	var att = system.newAttribute("attribute");
	att.@ref = attName;
	att.@required = required ? "true" : "false";
	return att;
}

// Returns a 'type' node for the service.def file
function newTypeNode(classType, classes) {
	var className = classes[classType].className;
	var type = system.newAttribute("type");
	type.@name = className;
	type.@category = (classType == "user") ? "account" : "service";
	type.@location = "schema.dsml";
	type.@profile = (classType == "user") ? className.substring(2) : adapterName;
	type.key = null;
	type.key.field = (classType == "user") ? "eruid" : "erservicename";
	type.form = null;
	type.form.@location = className + ".xml";
	
	return type;
}

// Returns a dispatcherParameter node
function dispatcherParameter(paramName, defaultVal) {
	var dp = system.newAttribute("dispatcherParameter");
	dp.@name = paramName;
	if (defaultVal.startsWith("$")) {
		dp["default"] = defaultVal;
	} else {
		dp.@source = defaultVal
	}
	return dp;
}

// Returns and input node
function inputNode(nodeName, source) {
	var node = system.newAttribute("input");
	node.@name = nodeName;
	node.@source = source;
	return node;
}

// Returns 'operation' node for service.def file
function newOperationNode(alName, alDetails) {
	var op = system.newAttribute("operation");
	op.@cn = alDetails.assemblyLine;
	op.name = alDetails.operation;
	op.description = alDetails.description;
	op.assemblyLine = alDetails.assemblyLine + ".xml";
	
	if (isForIIM() 
		&& (alDetails.operation == "modify" || alDetails.operation == "delete")) {
		op.appendChild(inputNode("$dn", "entrydn"));
	}
	
	var keyAttName = keyAttribute["user"];
	if (keyAttName) {
		op.appendChild(inputNode(keyAttName, keyAttName));
	} else {
		op.appendChild(inputNode("eruid", "eruid"));
	}
	
	op.appendChild(dispatcherParameter("OperationType", "$(OO!operation)"));
//	op.appendChild(dispatcherParameter("erUID", "$(SO!erServiceUid)"));
//	op.appendChild(dispatcherParameter("erPassword", "$(SO!erPassword)"));	
	op.appendChild(dispatcherParameter("DisableAlCachPerService", 
										"$(SO!erTDICustomDisableALCache)"));
	op.appendChild(dispatcherParameter("ALFileSystemPath", 
										"erTDICustomALFileSystemPath"));
	op.appendChild(dispatcherParameter("MaxConnectionCnt", 
										"$(SO!erTDICustomMaxConnectionCnt)"));
	
	op.connector = null;
	op.connector.@name = "NameOfConnectorInAL";
	op.connector.parameter = "Label for this parameter in the UI";
	op.connector.parameter.@name = "InternalParamNameInTDI";
	op.connector.parameter.@source = "internalIIM/BrokerParameterName";
	return op;
}

// Returns a formElement node for a Form
function formElement(fieldName, reqOrAttObj, typeText, paramText) {
	if (typeof reqOrAttObj == "object") {
		var required = false;
		var attObj = reqOrAttObj;	
	} else {
		var required = reqOrAttObj || false;
		var attObj = null;
	}	
	
	var fe = system.newAttribute("formElement");
	fe.@direction = "inherit";
	fe.@name = "data." + fieldName;
	if (attObj && attObj.label) {
		fe.@label = attObj.label;
	} else {
		fe.@label = "$" + fieldName;
	}	
	if (required) { fe.@required = "true"; }
	
	fe.input = null;
	fe.input.@name = "data." + fieldName;
	fe.input.@type = "text";
	fe.input["@size"] = "50";
	
	if (typeText || paramText) {
		fe.constraint = null;
		if (typeText) { fe.constraint.type = typeText; } 
		if (paramText) { fe.constraint.parameter = paramText; } 
	}
	
	if (attObj && attObj.membership && attObj.multiValued) {
		fe.searchFilter = null;
		fe.searchFilter.@type = "select";
		fe.searchFilter.@multiple = "true";
		var sf = fe.searchFilter;
		
		sf.filter="(objectClass=" + classes.group.className + ")";
		sf.base = "contextual";
		sf.attribute = groupAttributes[0];
		sf.width = "300";
		sf.showQueryUI = "false"
		sf.paginateResults = "false";
	}
	
	return fe;
}

// Returns a 'property' node
function newPropertyNode(propName, propVal) {
	var pnode = system.newAttribute("property");
	pnode.@name = propName;
	pnode.value = propVal;
	return pnode;
}

// Returns true if adapterType is IIM
function isForIIM() {
	return ("ITIM".equals(adapterType)
			|| "ISIM".equals(adapterType)
			|| "IIM".equals(adapterType)
			|| "IM".equals(adapterType));
}

// Returns true if adapterType is PIM
function isForPIM() {
	return "PIM".equals(adapterType) || "IPIM".equals(adapterType);
}

// Returns true if adapterType is IGI
function isForIGI() {
	return "IGI".equals(adapterType) || "GI".equals(adapterType);
}

// Returns a targetProfile.json userExtension
function userExtension(attName, errors, attributes) {
	var obj = { userExtension: {} };
	var ue = obj.userExtension;
	var className = classForAttributes[attName];
	ue.schema = "";
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.userExtension;
	return ue;
}

// Returns a targetProfile.json resourceType
function resourceType(className, classType, classDescription, errors) {
	var isTarget = (classType == "Service");
	var useClassType = (isTarget) ? "Target" : classType;
	
	useClassType = useClassType.substring(0,1).toUpperCase() + useClassType.substring(1);
	
	var rt = {};
	rt.schemas = ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"];
	rt.id = className;
	rt.name = useClassType;
	rt.endpoint = useClassType + "s";
	rt.description = classDescription;
	rt.schema = "urn:ietf:params:scim:schemas:core:2.0:" + useClassType;
	rt.schemaExtensions = [];
	if (!isTarget) {
		rt.schemaExtensions.push({
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + className + ":2.0:" + useClassType,
			requred: false
		});
	}
	rt.meta = {
		location : "/v2/ResourceTypes/" + useClassType,
		resourceType: "resourceType"
	}
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.resourceType;
	return rt;
}

// Returns an array of attributes for the passed class name
function allAttributesForClass(className) {
	var arr = [];
	for (var i = 0; i < classAttributes[className].length; i++) {
		var attName = classAttributes[className][i];
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: attDef.type,
				multiValued: attDef.multiValued || false,
				description: attDef.label || "",
				required: attDef.required || false,
				caseExact: attDef.caseExact || false,
				mutability: attDef.mutability || "readWrite",
				returned: attDef.returned || "default",
				uniqueness: attDef.uniqueness || "none"
			};
			arr.push(att);
		}	
	}
	
	return arr;
}

// process targetSchema
targetSchema = {
        schema: "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target",
        definition: {
            name: "Target definition",
            id: "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target",
            description: adapterName + " Target definition",
            attributes: [
                {
                    name: "erservicename",
                    type: "string",
                    multiValued: false,
                    description: "erservicename",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "always",
                    uniqueness: "none"
                },
                {
                    name: "description",
                    type: "string",
                    multiValued: false,
                    description: "description",
                    required: false,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "always",
                    uniqueness: "none"
                },
                {
                    name: "eritdiurl",
                    type: "string",
                    multiValued: false,
                    description: "URL of SDI dispatcher",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "default",
                    uniqueness: "none"
                },
                {
                    name: "ergroupsContainerDN",
                    type: "string",
                    multiValued: false,
                    description: "ergroupsContainerDN",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "default",
                    uniqueness: "none"
                },
                {
                    name: "erLdapGrpRDN",
                    type: "string",
                    multiValued: false,
                    description: "erLdapGrpRDN",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "default",
                    uniqueness: "none"
                },
                {
                    name: "erLdapUserRDN",
                    type: "string",
                    multiValued: false,
                    description: "erLdapUserRDN",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "default",
                    uniqueness: "none"
                },
                {
                    name: "erpassword",
                    type: "string",
                    multiValued: false,
                    description: "A password used to authenticate a user.",
                    required: false,
                    caseExact: true,
                    mutability: "writeOnly",
                    returned: "never",
                    uniqueness: "none"
                },
                {
                    name: "erServiceUid",
                    type: "string",
                    multiValued: false,
                    description: "erServiceUid",
                    required: true,
                    caseExact: false,
                    mutability: "readWrite",
                    returned: "default",
                    uniqueness: "none"
                }
			]
		}
	};
	
function processTargetSchema() {
	for (var cType in mandatoryAtts) {
		var cAtts = mandatoryAtts[cType];
		for (var attName in cAtts) {
			if (typeof atts[attName] == "undefined") {
				atts[attName] = cAtts[attName];
			}
		}
	}	
	
	var targetAtts = targetSchema.definition.attributes;
	for (var i = 0; i < targetAtts.length; i++) {
		var thisAtt = targetAtts[i];
		var attName = thisAtt.name;
		if (typeof atts[thisAtt] == "undefined") {
			log("Processing attribute: " + attName);
			atts[attName] = thisAtt;
		}
	}
}]]></parameter>
        </Script>
        <Script name="Global vars and functions 20170727 1043">
            <ModTime>1729441627601</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[// Define some functions used by this AL
atts = {};
classes = {};

adapterName = system.getTDIProperty("adapter.name").trim();

// Returns a FormElement node for the Service form XML
function formElementNode(pDef) {
	var n = system.newAttribute("FormElement");
	n.@direction = "inherit";
	n.@label = "$" + pDef.name;
	n.@name = "data." + pDef.name;
	if (pDef.required == true) {
		n.@required = "true";
	}
	
	var input = system.newAttribute("input");
	input.@name = "data." + pDef.name;
	input.@type = pDef.type;
	if (pDef.required == true) {
		input.constraint = null;
		input.constraint.type = "REQUIRED";
		input.parameter = true;
	}
	n.appendChild(input);
	
	return n;
}

// Returns the Service form xml
function serviceForm() {
	var serviceXML = system.getScriptText("serviceFormXML");
	var e = com.ibm.di.entry.Entry.fromXML(serviceXML, "*", "");
	var tabs = e.getElementsByTagName("tab");
	tabs[0].title = adapterName;
	
	var ctab = tabs[1];
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "text",
				required: false
			}
			for (var p in parts) {
				if (p.indexOf("password") >= 0) {
					pDef.type = "password";
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				}
			}
			ctab.appendChild(formElementNode(pDef));
		}
	}
	
	return e;
}

// Returns the membership attribute tagged for user or group class
// and flags an error if this is not defined.
function getMemAttr(classType) {
	var attName = membershipAttributes[classType];
	if (typeof attName == "undefined") {
		errors.push("No attribute assigned to " + classType + " has been tagged as 'membership' related");
		return "*no " + classType + " attribute tagged with 'membership'*";
	}
	return attName;
}

// Returns an Attribute node for the GroupDefinition in service.def
function groupAttNode(name, value) {
	var gan = system.newAttribute("Attribute");
	gan.@name = name;
	gan.@value = value;
	return gan;
}

// Returns a GroupDefinition node for service.def
function groupDefinitionNode() {
	var gdef = system.newAttribute("GroupDefinition");
	gdef.@profileName = adapterName;
	gdef.@className = classes["group"];
	gdef.@accountAttribute = getMemAttr("user");
	var groupId = getMemAttr("group");
	gdef.@rdnAttribute = groupId;
	
	gdef.AttributeMap = null;
	gdef.AttributeMap.appendChild(groupAttNode("erGroupId", groupId));
	gdef.AttributeMap.appendChild(groupAttNode("erGroupName", groupId));
	
	gdef.properties = null;
	var prop = system.newAttribute("property");
	prop.@name = "Managed";
	prop.value = false;
	gdef.properties.appendChild(prop);
	
	return gdef;
}

// Returns the details of an attribute property value
function getDetails(parts, errors) {
	var det = {
				multi: false, 
				oid: "1.3.6.1.4.1.1466.115.121.1.15",
				required: false, 
				caseExact: false,
				description: parts[0],
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none"
			 }; 
	var oid = "";
	for (var i = 1; i < parts.length; i++) {
		p = parts[i].trim().toLowerCase();
		if (p.startsWith("readw")) {
			det.mutability = "readWrite";
		} else 
		if (p.startsWith("writeo")) {
			det.mutability = "writeOnly";
		} else 
		if (p.startsWith("im")) {
			det.mutability = "immutable";
		} else 
		if (p.startsWith("multi")) {
			det.multi = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.type = p;
		} else 
		if (p.startsWith("mem")) {
			det.membership = true;
		} else 
		if (typeof syntax[p] != "undefined") {
			det.oid = syntax[p];
			det.type = p;
		} else {
			var msg = "Invalid attribute flag: " + p + "  for " + parts[0];
			log("ERROR", msg);
			errors.push(msg);
		}
	}
	
	return det;
}

// Creates and returns an attribute-type node 
function attTypeNode(attName, errors, type) {
	type = type || "string";
	var propVal = system.getTDIProperty("AdapterKit", "attribute." + attName);
	if (propVal == null || propVal.trim() == "") {
		propVal = attName + "; " + type;
	}
	var parts = system.splitString(propVal, ";");
	var att = system.newAttribute("attribute-type");
	if (parts.length < 1 || parts.length > 4) {
		errors.push("Invalid property value for attribute." + attName
						+ ": " + propVal);
		return att;
	}

	var attDetails = getDetails(parts, errors);
	
	att["@single-value"] = attDetails.multi ? "false" : "true";
	att.name = attName;
	att.description = parts[0];
	att["object-identifier"] = attName.toLowerCase() + "-oid";
	att.syntax = attDetails.oid;
	
	task.logmsg("Defining attribute: " + attName);
	attDef = {
		name: attName,
		multiValued: attDetails.multi,
		label: parts[0],
		type: attDetails.type,
		syntax: attDetails.syntax,
		required: false,
		caseExact: false,
		mutability: "readWrite",
		returned: "default",
		uniqueness: "none"
	}
	
	if (attDetails.membership) {
		attDef.membership = attDetails.membership;
	}
	
	atts[attName] = attDef;
	
	return att;
}

classForAttributes = {};
classAttributes = {};
keyAttribute = {};
membershipAttributes = {};
// Returns the class node for the schema.dsml file
function classNode(className, classType, errors, groupAtts) {
	var cl = system.newAttribute("class");
	var propVal = system.getTDIProperty("AdapterKit", "class." + classType + "." + className);
	if (propVal == null || propVal.trim() == "") {
		errors.push("Missing property value for class." + className);
		return cl;
	}
	var parts = system.splitString(propVal, ";");
	
	var useClassType = classType.substring(0, 1).toUpperCase() + classType.substring(1);
	
	var found = {};
	cl.@superior = "top";
	cl.name = className;
	cl.description = parts[0];
	cl["object-identifier"] = className.toLowerCase() + "-oid";
	
	var classDef = {
			name: useClassType,
			schemas: ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
			id: className,
			description: parts[0],
			schema: "urn:ietf:params:scim:schemas:core:2.0:" + useClassType,
			schemaExtensions: [{
				schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + className 
							+ ":2.0:" + useClassType,
				required: false
			}],
			meta: {
				location: "/v2/ResourceTypes/" + useClassType,
				resourceType: "ResourceType"
			}
		};
	classes[className] = classDef;
	
	for (var i = 1; i < parts.length; i++) {
		var part = parts[i].trim();
		var p = part.indexOf("(");
		var req = "n";
		if (p > 0) {
			req = part.substring(p+1, p+2).toLowerCase();
			part = part.substring(0, p);
		}

		found[part] = true;

		var att = system.newAttribute("attribute");
		var attName = part.trim();
		att.@ref = attName;
		attRequired = (req == "r" || req == "k");
		attIsKey = (req == "k");
		if (attIsKey) {
			keyAttribute[classType] = attName;
		}
		att.@required = attRequired ? "true" : "false";
		cl.appendChild(att);
		
		var aDef = atts[attName];
		if (aDef) {
			aDef.className = className;
			aDef.required = attRequired;
			aDef.isKey = attIsKey;

			if (aDef.membership == true) {
				membershipAttributes[classType] = attName;
			}
		}
		

		classForAttributes[attName] = className;
		if (typeof classAttributes[className] == "undefined") {
			classAttributes[className] = [];
		}
		classAttributes[className].push(attName);
				
		if ("group".equals(classType)) {
			groupAtts.push(attName);
		}
	}
	
	var mandatory = mandatoryAtts[classType];
	for (var attName in mandatory) {
		if (!found[attName]) {
			var thisAtt = mandatory[attName];
			cl.appendChild(newAttributeNode(attName, thisAtt.required));
			classForAttributes[attName] = className;
			if (typeof classAttributes[className] == "undefined") {
				classAttributes[className] = [];
			}
			classAttributes[className].push(attName);
			var aDef = atts[attName];
			if (aDef) {
				aDef.className = className;
				for (var thisProp in thisAtt) {
					aDef[thisProp] = thisAtt[thisProp];
				}
			}
		}
	}
	
	return cl;
}

// Returns an 'attribute' node
function newAttributeNode(attName, required) {
	var att = system.newAttribute("attribute");
	att.@ref = attName;
	att.@required = required ? "true" : "false";
	return att;
}

// Returns a 'type' node for the service.def file
function newTypeNode(classType, classes) {
	var className = classes[classType].className;
	var type = system.newAttribute("type");
	type.@name = className;
	type.@category = (classType == "user") ? "account" : "service";
	type.@location = "schema.dsml";
	type.@profile = (classType == "user") ? className.substring(2) : adapterName;
	type.key = null;
	type.key.field = (classType == "user") ? "eruid" : "erservicename";
	type.form = null;
	type.form.@location = className + ".xml";
	
	return type;
}

// Returns a dispatcherParameter node
function dispatcherParameter(paramName, defaultVal) {
	var dp = system.newAttribute("dispatcherParameter");
	dp.@name = paramName;
	if (defaultVal.startsWith("$")) {
		dp["default"] = defaultVal;
	} else {
		dp.@source = defaultVal
	}
	return dp;
}

// Returns and input node
function inputNode(nodeName, source) {
	var node = system.newAttribute("input");
	node.@name = nodeName;
	node.@source = source;
	return node;
}

// Returns 'operation' node for service.def file
function newOperationNode(alName, alDetails) {
	var op = system.newAttribute("operation");
	op.@cn = alDetails.assemblyLine;
	op.name = alDetails.operation;
	op.description = alDetails.description;
	op.assemblyLine = alDetails.assemblyLine + ".xml";
	
	if (isForIIM() 
		&& (alDetails.operation == "modify" || alDetails.operation == "delete")) {
		op.appendChild(inputNode("$dn", "entrydn"));
	}
	
	var keyAttName = keyAttribute["user"];
	if (keyAttName) {
		op.appendChild(inputNode(keyAttName, keyAttName));
	} else {
		op.appendChild(inputNode("eruid", "eruid"));
	}
	
	op.appendChild(dispatcherParameter("OperationType", "$(OO!operation)"));
//	op.appendChild(dispatcherParameter("erUID", "$(SO!erServiceUid)"));
//	op.appendChild(dispatcherParameter("erPassword", "$(SO!erPassword)"));	
	op.appendChild(dispatcherParameter("DisableAlCachPerService", 
										"$(SO!erTDICustomDisableALCache)"));
	op.appendChild(dispatcherParameter("ALFileSystemPath", 
										"erTDICustomALFileSystemPath"));
	op.appendChild(dispatcherParameter("MaxConnectionCnt", 
										"$(SO!erTDICustomMaxConnectionCnt)"));
	
	op.connector = null;
	op.connector.@name = "NameOfConnectorInAL";
	op.connector.parameter = "Label for this parameter in the UI";
	op.connector.parameter.@name = "InternalParamNameInTDI";
	op.connector.parameter.@source = "internalIIM/BrokerParameterName";
	return op;
}

// Returns a formElement node for a Form
function formElement(fieldName, reqOrAttObj, typeText, paramText) {
	if (typeof reqOrAttObj == "object") {
		var required = false;
		var attObj = reqOrAttObj;	
	} else {
		var required = reqOrAttObj || false;
		var attObj = null;
	}	
	
	var fe = system.newAttribute("formElement");
	fe.@direction = "inherit";
	fe.@name = "data." + fieldName;
	if (attObj && attObj.label) {
		fe.@label = attObj.label;
	} else {
		fe.@label = "$" + fieldName;
	}	
	if (required) { fe.@required = "true"; }
	
	fe.input = null;
	fe.input.@name = "data." + fieldName;
	fe.input.@type = "text";
	fe.input["@size"] = "50";
	
	if (typeText || paramText) {
		fe.constraint = null;
		if (typeText) { fe.constraint.type = typeText; } 
		if (paramText) { fe.constraint.parameter = paramText; } 
	}
	
	if (attObj && attObj.membership && attObj.multiValued) {
		fe.searchFilter = null;
		fe.searchFilter.@type = "select";
		fe.searchFilter.@multiple = "true";
		var sf = fe.searchFilter;
		
		sf.filter="(objectClass=" + classes.group.className + ")";
		sf.base = "contextual";
		sf.attribute = groupAttributes[0];
		sf.width = "300";
		sf.showQueryUI = "false"
		sf.paginateResults = "false";
	}
	
	return fe;
}

// Returns a 'property' node
function newPropertyNode(propName, propVal) {
	var pnode = system.newAttribute("property");
	pnode.@name = propName;
	pnode.value = propVal;
	return pnode;
}

// Returns true if adapterType is IIM
function isForIIM() {
	return ("ITIM".equals(adapterType)
			|| "ISIM".equals(adapterType)
			|| "IIM".equals(adapterType)
			|| "IM".equals(adapterType));
}

// Returns true if adapterType is PIM
function isForPIM() {
	return "PIM".equals(adapterType) || "IPIM".equals(adapterType);
}

// Returns true if adapterType is IGI
function isForIGI() {
	return "IGI".equals(adapterType) || "GI".equals(adapterType);
}

// Returns a targetProfile.json userExtension
function userExtension(attName, errors, attributes) {
	var obj = { userExtension: {} };
	var ue = obj.userExtension;
	var className = classForAttributes[attName];
	ue.schema = "";
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.userExtension;
	return ue;
}

// Returns a targetProfile.json resourceType
function resourceType(className, classType, classDescription, errors) {
	var isTarget = (classType == "Service");
	var useClassType = (isTarget) ? "Target" : classType;
	
	useClassType = useClassType.substring(0,1).toUpperCase() + useClassType.substring(1);
	
	var rt = {};
	rt.schemas = ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"];
	rt.id = adapterName + useClassType;
	rt.name = useClassType;
	rt.endpoint = useClassType + "s";
	rt.description = classDescription;
	rt.schema = "urn:ietf:params:scim:schemas:core:2.0:" 
					+ useClassType;
	rt.schemaExtensions = [];
	if (!isTarget) {
		rt.schemaExtensions.push({
			schema: "urn:ibm:idbrokerage:params:scim:schemas:extension:" + adapterName + useClassType + ":2.0:" + useClassType,
			required: false
		});
	}
	rt.meta = {
		location : "/v2/ResourceTypes/" + useClassType,
		resourceType: "ResourceType"
	}
	
//	var hEntry = com.ibm.di.entry.Entry.fromJSON(toJson(obj));
//	return hEntry.resourceType;
	return rt;
}

// Returns an array of attributes for the passed class name
function allAttributesForClass(className) {
	var arr = [];
	for (var i = 0; i < classAttributes[className].length; i++) {
		var attName = classAttributes[className][i];
		attDef = atts[attName];
		if (!attDef) {
			reportError("No definition for attribute: " 
						+ attName);
		} else {
			att = {
				name: attName,
				type: attDef.type,
				multiValued: attDef.multiValued || false,
				description: attDef.label || "",
				required: attDef.required || false,
				caseExact: attDef.caseExact || false,
				mutability: attDef.mutability || "readWrite",
				returned: attDef.returned || "default",
				uniqueness: attDef.uniqueness || "none"
			};
			arr.push(att);
		}	
	}
	
	return arr;
}

// process targetSchema
targetSchema = {
	schema: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
	definition: {
		id: "urn:ibm:idbrokerage:params:scim:schemas:ICBSJIRAAdapterProfile:2.0:Target",
		description: "ICBSJIRAAdapterProfile Target definition",
		attributes: [
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "erservicename",
			returned: "always",
			required: true,
			caseExact: true,
			multiValued: false,
			type: "string",
			name: "erservicename"
		},
		{
			uniqueness: "none",
			mutability: "readWrite",
			description: "URL of SDI dispatcher",
			returned: "default",
			required: true,
			caseExact: false,
			multiValued: false,
			type: "string",
			name: "eritdiurl"
		}
		],
		name: "Target definition"
	}
}

function processTargetSchema() {
	targetSchema.schema = "urn:ibm:idbrokerage:params:scim:schemas:" + adapterName + ":2.0:Target";
	targetSchema.definition.id = targetSchema.schema;
	targetSchema.definition.descript = adapterDescription;
	for (var i = 0; i < propNames.length; i++) {
		var pName = propNames[i];
		if (pName.startsWith("connection.")) {
			var pVal = system.getTDIProperty(pName);
			pName = pName.substring(11).trim();
			var parts = system.splitString(pVal, ";");
			var pDef = {
				name: pName,
				type: "string",
				multiValued: false,
				caseExact: false,
				description: parts[0].trim(),
				mutability: "readWrite",
				returned: "default",
				uniqueness: "none",
				required: false
			}
			for (var p in parts) {
				if (typeof syntax[p] != "undefined") {
					pDef.type = p;
				} else
				if (p.indexOf("req") >= 0) {
					pDef.required = true;
				} else
				if (p.indexOf("case") >= 0) {
					pDef.caseExact = true;
				}
			}
			targetSchema.definition.attributes.push(pDef);
		}
	}
}

function processTargetSchemaOLD() {
	for (var cType in mandatoryAtts) {
		var cAtts = mandatoryAtts[cType];
		for (var attName in cAtts) {
			if (typeof atts[attName] == "undefined") {
				atts[attName] = cAtts[attName];
			}
		}
	}	
	
	var targetAtts = targetSchema.definition.attributes;
	for (var i = 0; i < targetAtts.length; i++) {
		var thisAtt = targetAtts[i];
		var attName = thisAtt.name;
		if (typeof atts[thisAtt] == "undefined") {
			log("Processing attribute: " + attName);
			atts[attName] = thisAtt;
		}
	}
}]]></parameter>
        </Script>
        <Script name="AdapterKitLib">
            <ModTime>1729441627801</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//vrs = "20170207 1253"; // new library
vrs = "20170222 1511"; // started on importAdapter

task.logmsg("AdapterKitLib v. " + vrs);

// ------------------------------------------------------------------------------------------------
//                                 				GLOBAL VARIABLES

writeFiles = true;
files = {};

requiredProps = {};
requiredProps["adapter.name"] = true;
requiredProps["adapter.description"] = true;
requiredProps["adapter.type"] = true;
requiredProps["adapter.source.folder"] = true;
requiredProps["adapter.destination.folder"] = true;
requiredProps["adapter.category"] = true;
requiredProps["adapter.version"] = true;
requiredProps["al.add"] = true;
requiredProps["al.changePassword"] = true;
requiredProps["al.delete"] = true;
requiredProps["al.modify"] = true;
requiredProps["al.restore"] = true;
requiredProps["al.search"] = true;
requiredProps["al.suspend"] = true;
requiredProps["al.test"] = true;

syntax = {
	string: "1.3.6.1.4.1.1466.115.121.1.15",
	password: "1.3.6.1.4.1.1466.115.121.1.15",
	directorystring: "1.3.6.1.4.1.1466.115.121.1.15",
	octetstring: "1.3.6.1.4.1.1466.115.121.1.40",
	postaladdress: "1.3.6.1.4.1.1466.115.121.1.41",
	countrystring: "1.3.6.1.4.1.1466.115.121.1.11",
	numericstring: "1.3.6.1.4.1.1466.115.121.1.36",
	integer: "1.3.6.1.4.1.1466.115.121.1.27",
	number: "1.3.6.1.4.1.1466.115.121.1.27",
	generalizedtime: "1.3.6.1.4.1.1466.115.121.1.24",
	time: "1.3.6.1.4.1.1466.115.121.1.24",
	date: "1.3.6.1.4.1.1466.115.121.1.24",
	telephonenumber: "1.3.6.1.4.1.1466.115.121.1.50",
	telephone: "1.3.6.1.4.1.1466.115.121.1.50",
	binary: "1.3.6.1.4.1.1466.115.121.1.5",
	dn: "1.3.6.1.4.1.1466.115.121.1.12",
	jpeg: "1.3.6.1.4.1.1466.115.121.1.28"
}
syntax["boolean"] = "1.3.6.1.4.1.1466.115.121.1.7";

syntaxToType = {};
for (attType in syntax) {
	syntaxToType[syntax[attType]] = attType;
}

mandatoryAtts = {
	group: {
	},
	user: {
		eruid: {
			required: true,
			mutability: "immutable",
			uniqueness: "server",
			type: "string"
		},
		erpassword: {
			requried: false,
			mutability: "writeOnly",
			caseExact: true,
			returned: "never",
			type: "string"
		}
	},
	service: {
		erServiceName: {
			required: true,
			mutability: "readOnly",
			returned: "always",
			type: "string"
		},
		erLdapDisableALCache: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erLdapALFileSystemPath: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erLdapMaxConnectionCnt: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterAccount: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterConnectorVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterDispatcherVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterLastStatusTime: {
			required: false,
			mutability: "readWrite",
			type: "date"
		},
		erAdapterMemory: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterPlatform: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterProfileVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterResourceStatus: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterResourceStatusMsg: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterResourceVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterTdiVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterUpTime: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		}
	}
};

errors = [];
warnings = [];
messages = [];

// ------------------------------------------------------------------------------------------------
//                                 				FUNCTIONS

function log(lvl, msg) {
	if (typeof lvl == "undefined") {
		msg = "";
		lvl = "INFO";
	} else
	if (typeof msg == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	
	var nowstr = system.formatDate(new java.util.Date(), "yyyyMMdd HHmmss.SSS Z");
	
	java.lang.System.out.println(nowstr + " | " + lvl + " | " + msg);
	task.logmsg(lvl, msg);
}

// checks if any mandatory properties are not defined
function checkForMissingProperties() {
	var missing = [];
	for (var propName in requiredProps) {
		checkProp(propName, missing);
	}
	
	if (missing.length > 0) {
		var msg = "The following properties need to be defined in the AdapterKit.properties file:\n"
					+ missing.join("\n");
		log("ERROR", msg);
		errors.push(msg);
	}	
}

// Checks the specified property
function checkProp(propName, missing) {
	var val = system.getTDIProperty(propName);
	if (val == null) {
		missing.push("                             o " + propName);
	}
}



var _override = false;
function abortIfFileExists(filePath) {
	task.logmsg("OVERWRITING ON!!!");return;
	var file = new java.io.File(filePath);
	if (file.exists() && !_override) {
		throw "Output file already exists: ";
	}
}

function writeXMLFile(filePath, entry) {
	files[filePath] = '<?xml version="1.0" encoding="UTF-8"?>\n' + entry.toXML();
	return;
	
	try {
		abortIfFileExists(filePath);
		outFile = system.openFileForOutput(filePath);
		outFile.write(entry.toXML());
		outFile.close();
	} catch (ex) {
		reportError("Error writing " + filePath + " - " + ex);
	}
}

function writeJSONFile(filePath, jsobj) {
	files[filePath] = toJson(jsobj, null, 4).replaceAll("\n,",",");
	return;
	
	try {
		abortIfFileExists(filePath);
		outFile = system.openFileForOutput(filePath);
		outFile.write(entry.toXML());
		outFile.close();
	} catch (ex) {
		reportError("Error writing " + filePath + " - " + ex);
	}
}

// Reports an error
function reportError(msg) {
	log("ERROR", msg);
	errors.push(msg);
}

// Logs any errors or messages
function reportAnyErrors() {
	if (errors.length > 0) {
		log("ERROR", "One or more errors detected:\n** " + errors.join("\n** "))
	}
	if (warnings.length > 0) {
		log("WARN", "One or more warnings detected:\n.. " + warnings.join("\n.. "))
	}
	if (messages.length > 0) {
		log("Messages", "Note the following:\n   " + messages.join("\n   "))
	}
}

// Reads an XML file and converts it to a hierarchical Entry //@@TODO
function readXML(filePath) {
	try {
		var file = system.openFileForInput(filePath);
		var strBuf 
	} catch (ex) {
		reportError("Error reading " + filePath + " - " + ex);
	}
}

function changePasswordALDefined() {
	for (var thisAL in operations) {
		var op = operations[thisAL];
		if (op.operation == "changePassword") {
			return true;
		}
	}
	return false;
}

_padsize = 3;
_padstr = "                                                                ";
function stringify(jobj, lvl, outArr) {
	lvl = lvl || 0;
	outArr = outArr || [];
	
	if (jobj instanceof Array) {
		for (var i = 0; i < jobj.length; i++) {
			var prop = jobj[i];
			stringify(prop, lvl, outArr);
			if ((i+1) < jobj.length) {
				outArr.push(_padstr.substring(0, (lvl+2)*_padsize) + ",")
			}
		}
	} else
	if (typeof jobj == "object") {
		outArr.push(_padstr.substring(0, lvl*_padsize) + "{");
		var propNames = [];
		for (var propName in jobj) {
			propNames.push(propName);
		}
		var propNames = system.splitString(propNames.join(";"), ";");
		java.util.Arrays.sort(propNames);
		
		for (var propName in propNames) {
			var prop = jobj[propName];
			
			if (prop instanceof Array) {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ": [");
				stringify(prop, lvl+2, outArr)				
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + "]");
			} else
			if (typeof prop == "object") {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ":");
				stringify(prop, lvl+2, outArr)				
			} else 
			if (typeof prop == "string"){
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + propName + ": '" + prop + "'");
			} else
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + propName + ": " + prop);
		}
		outArr.push(_padstr.substring(0, lvl*_padsize) + "}");
	}
		
	if (lvl == 0) {
		task.logmsg("\n" + outArr.join("\n"));
	}
}]]></parameter>
        </Script>
        <Script name="AdapterKitLib 20170927 1043">
            <ModTime>1729441627414</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//vrs = "20170207 1253"; // new library
vrs = "20170222 1511"; // started on importAdapter

task.logmsg("AdapterKitLib v. " + vrs);

// ------------------------------------------------------------------------------------------------
//                                 				GLOBAL VARIABLES

writeFiles = true;
files = {};

requiredProps = {};
requiredProps["adapter.name"] = true;
requiredProps["adapter.description"] = true;
requiredProps["adapter.type"] = true;
requiredProps["adapter.source.folder"] = true;
requiredProps["adapter.destination.folder"] = true;
requiredProps["adapter.category"] = true;
requiredProps["adapter.version"] = true;
requiredProps["al.add"] = true;
requiredProps["al.changePassword"] = true;
requiredProps["al.delete"] = true;
requiredProps["al.modify"] = true;
requiredProps["al.restore"] = true;
requiredProps["al.search"] = true;
requiredProps["al.suspend"] = true;
requiredProps["al.test"] = true;

syntax = {
	string: "1.3.6.1.4.1.1466.115.121.1.15",
	password: "1.3.6.1.4.1.1466.115.121.1.15",
	directorystring: "1.3.6.1.4.1.1466.115.121.1.15",
	octetstring: "1.3.6.1.4.1.1466.115.121.1.40",
	postaladdress: "1.3.6.1.4.1.1466.115.121.1.41",
	countrystring: "1.3.6.1.4.1.1466.115.121.1.11",
	numericstring: "1.3.6.1.4.1.1466.115.121.1.36",
	integer: "1.3.6.1.4.1.1466.115.121.1.27",
	number: "1.3.6.1.4.1.1466.115.121.1.27",
	generalizedtime: "1.3.6.1.4.1.1466.115.121.1.24",
	time: "1.3.6.1.4.1.1466.115.121.1.24",
	date: "1.3.6.1.4.1.1466.115.121.1.24",
	telephonenumber: "1.3.6.1.4.1.1466.115.121.1.50",
	telephone: "1.3.6.1.4.1.1466.115.121.1.50",
	binary: "1.3.6.1.4.1.1466.115.121.1.5",
	dn: "1.3.6.1.4.1.1466.115.121.1.12",
	jpeg: "1.3.6.1.4.1.1466.115.121.1.28"
}
syntax["boolean"] = "1.3.6.1.4.1.1466.115.121.1.7";

syntaxToType = {};
for (attType in syntax) {
	syntaxToType[syntax[attType]] = attType;
}

mandatoryAtts = {
	group: {
	},
	user: {
		eruid: {
			required: true,
			mutability: "immutable",
			uniqueness: "server",
			type: "string"
		},
		erpassword: {
			requried: false,
			mutability: "writeOnly",
			caseExact: true,
			returned: "never",
			type: "string"
		}
	},
	service: {
		erServiceName: {
			required: true,
			mutability: "readOnly",
			returned: "always",
			type: "string"
		},
		erLdapDisableALCache: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erLdapALFileSystemPath: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erLdapMaxConnectionCnt: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterAccount: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterConnectorVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterDispatcherVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterLastStatusTime: {
			required: false,
			mutability: "readWrite",
			type: "date"
		},
		erAdapterMemory: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterPlatform: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterProfileVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterResourceStatus: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterResourceStatusMsg: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterResourceVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterTdiVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		},
		erAdapterUpTime: {
			required: false,
			mutability: "readWrite",
			type: "number"
		},
		erAdapterVersion: {
			required: false,
			mutability: "readWrite",
			type: "string"
		}
	}
};

errors = [];
warnings = [];
messages = [];

// ------------------------------------------------------------------------------------------------
//                                 				FUNCTIONS

function log(lvl, msg) {
	if (typeof lvl == "undefined") {
		msg = "";
		lvl = "INFO";
	} else
	if (typeof msg == "undefined") {
		msg = lvl;
		lvl = "INFO";
	}
	
	var nowstr = system.formatDate(new java.util.Date(), "yyyyMMdd HHmmss.SSS Z");
	
	java.lang.System.out.println(nowstr + " | " + lvl + " | " + msg);
	task.logmsg(lvl, msg);
}

// checks if any mandatory properties are not defined
function checkForMissingProperties() {
	var missing = [];
	for (var propName in requiredProps) {
		checkProp(propName, missing);
	}
	
	if (missing.length > 0) {
		var msg = "The following properties need to be defined in the AdapterKit.properties file:\n"
					+ missing.join("\n");
		log("ERROR", msg);
		errors.push(msg);
	}	
}

// Checks the specified property
function checkProp(propName, missing) {
	var val = system.getTDIProperty(propName);
	if (val == null) {
		missing.push("                             o " + propName);
	}
}



var _override = false;
function abortIfFileExists(filePath) {
	task.logmsg("OVERWRITING ON!!!");return;
	var file = new java.io.File(filePath);
	if (file.exists() && !_override) {
		throw "Output file already exists: ";
	}
}

function writeXMLFile(filePath, entry) {
	files[filePath] = '<?xml version="1.0" encoding="UTF-8"?>\n' + entry.toXML();
	return;
	
	try {
		abortIfFileExists(filePath);
		outFile = system.openFileForOutput(filePath);
		outFile.write(entry.toXML());
		outFile.close();
	} catch (ex) {
		reportError("Error writing " + filePath + " - " + ex);
	}
}

function writeJSONFile(filePath, jsobj) {
	files[filePath] = toJson(jsobj, null, 4).replaceAll("\n,",",");
	return;
	
	try {
		abortIfFileExists(filePath);
		outFile = system.openFileForOutput(filePath);
		outFile.write(entry.toXML());
		outFile.close();
	} catch (ex) {
		reportError("Error writing " + filePath + " - " + ex);
	}
}

// Reports an error
function reportError(msg) {
	log("ERROR", msg);
	errors.push(msg);
}

// Logs any errors or messages
function reportAnyErrors() {
	if (errors.length > 0) {
		log("ERROR", "One or more errors detected:\n** " + errors.join("\n** "))
	}
	if (warnings.length > 0) {
		log("WARN", "One or more warnings detected:\n.. " + warnings.join("\n.. "))
	}
	if (messages.length > 0) {
		log("Messages", "Note the following:\n   " + messages.join("\n   "))
	}
}

// Reads an XML file and converts it to a hierarchical Entry //@@TODO
function readXML(filePath) {
	try {
		var file = system.openFileForInput(filePath);
		var strBuf 
	} catch (ex) {
		reportError("Error reading " + filePath + " - " + ex);
	}
}

function changePasswordALDefined() {
	for (var thisAL in operations) {
		var op = operations[thisAL];
		if (op.operation == "changePassword") {
			return true;
		}
	}
	return false;
}

_padsize = 3;
_padstr = "                                                                ";
function stringify(jobj, lvl, outArr) {
	lvl = lvl || 0;
	outArr = outArr || [];
	
	if (jobj instanceof Array) {
		for (var i = 0; i < jobj.length; i++) {
			var prop = jobj[i];
			stringify(prop, lvl, outArr);
			if ((i+1) < jobj.length) {
				outArr.push(_padstr.substring(0, (lvl+2)*_padsize) + ",")
			}
		}
	} else
	if (typeof jobj == "object") {
		outArr.push(_padstr.substring(0, lvl*_padsize) + "{");
		var propNames = [];
		for (var propName in jobj) {
			propNames.push(propName);
		}
		var propNames = system.splitString(propNames.join(";"), ";");
		java.util.Arrays.sort(propNames);
		
		for (var propName in propNames) {
			var prop = jobj[propName];
			
			if (prop instanceof Array) {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ": [");
				stringify(prop, lvl+2, outArr)				
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + "]");
			} else
			if (typeof prop == "object") {
				outArr.push(_padstr.substring(0, lvl*_padsize) + propName + ":");
				stringify(prop, lvl+2, outArr)				
			} else 
			if (typeof prop == "string"){
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + propName + ": '" + prop + "'");
			} else
				outArr.push(_padstr.substring(0, (lvl)*_padsize) + propName + ": " + prop);
		}
		outArr.push(_padstr.substring(0, lvl*_padsize) + "}");
	}
		
	if (lvl == 0) {
		task.logmsg("\n" + outArr.join("\n"));
	}
}]]></parameter>
        </Script>
    </Folder>
    <JavaLibraries/>
    <JavaProperties/>
    <Folder name="Includes"/>
    <Folder name="Config">
        <LogConfig name="Logging"/>
        <InstanceProperties name="AutoStart">
            <AutoStart/>
        </InstanceProperties>
        <TombstonesConfig name="Tombstones"/>
        <SolutionInterface name="SolutionInterface">
            <ModTime>1490281067232</ModTime>
            <InstanceID>AdapterKit</InstanceID>
            <enabled>true</enabled>
        </SolutionInterface>
    </Folder>
    <Folder name="Functions"/>
    <Folder name="AttributeMaps">
        <ALMap name="LookUpBluePage_InputMap">
            <ModTime>1729441627889</ModTime>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>BPIsmanager</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>isManager</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPMail</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>mail</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPcommonname</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>conn.cn</Script>
                    <Simple>cn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPdepartmentNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>departmentNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPdiv</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>div</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPemailAddress</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>emailAddress</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPemployeeCountryCode</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>employeeCountryCode</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPgivenName</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>givenName</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPibmSerialNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>ibmSerialNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmanagerCountryCode</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>managerCountryCode</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmanagerSerialNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>managerSerialNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmobile</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>mobile</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPnotesEmail</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>notesEmail</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPnotesShortName</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>notesShortName</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPsn</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>sn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPtelephoneNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>telephoneNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPuid</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>uid</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPworkLoc</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>workLoc</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <State>Enabled</State>
        </ALMap>
        <ALMap name="LookUpBluePage_Input">
            <ModTime>1729441627995</ModTime>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>BPIsmanager</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>isManager</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPMail</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>mail</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPcommonname</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>conn.cn</Script>
                    <Simple>cn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPdepartmentNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>departmentNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPdiv</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>div</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPemailAddress</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>emailAddress</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPemployeeCountryCode</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>employeeCountryCode</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPgivenName</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>givenName</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPibmSerialNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>ibmSerialNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmanagerCountryCode</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>managerCountryCode</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmanagerSerialNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>managerSerialNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPmobile</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>mobile</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPnotesEmail</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>notesEmail</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPnotesShortName</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>notesShortName</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPsn</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>sn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPtelephoneNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>telephoneNumber</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPuid</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>uid</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>BPworkLoc</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>workLoc</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <State>Enabled</State>
        </ALMap>
        <ALMap name="InsertUser_Output">
            <ModTime>1729441627753</ModTime>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>code</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>code</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>company</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Company Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>email</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Email Address</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>identityUID</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>UID</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>lastName</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Last Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>name</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>First Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.CELLULARPHONE</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Mobile Phone Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.COMMON NAME</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Common Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.DEPARTMENT NUMBER</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Department Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.DIVISION</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Division</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.EMPLOYEE COUNTRY CODE</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Employee Country Code</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.EMPLOYEE NUMBER</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>generatedemployeeNo</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.ERLOCALE</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>erlocale</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.IAMCO</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>IAMCO</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.ISMANAGER</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>IsManager</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.MANAGER COUNTRY CODE</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Manager Country Code</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.MANAGER EMPLOYEE NUMBER</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Manager Employee Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.NOTE SHORT NAME</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Note Short Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.NOTES MAIL</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Notes Mail</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>optional.WORK LOCATION</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Work Location</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>orgUnitId</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>ouid</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>phoneNumber</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Telephone Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>userType</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Person Type</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <State>Enabled</State>
        </ALMap>
        <ALMap name="IGIQEV01_output_Output">
            <ModTime>1729441627535</ModTime>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>Common Name</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.commonName</Script>
                    <Simple>Common Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Company Name</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.company</Script>
                    <Simple>Company Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Department Number</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.departmentNumber</Script>
                    <Simple>Department Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Division</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>Division</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Email Address</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.email</Script>
                    <Simple>Email Address</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Employee Country Code</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.employeeCountryCode</Script>
                    <Simple>Employee Country Code</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Employee Number</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.employeeNumber</Script>
                    <Simple>Employee Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Employee Status Action</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.employeeStatusAction</Script>
                    <Simple>Employee Status Action</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>First Name</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.name</Script>
                    <Simple>First Name</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Last Name</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.lastName</Script>
                    <Simple>LastName</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Manager Country Code</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.managerCountryCode</Script>
                    <Simple>Manager Country Code</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Manager Employee Number</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.managerEmployeeNumber</Script>
                    <Simple>Manager Employee Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Middle Initial</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.middleintial=""</Script>
                    <Simple>Middle Initial</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Mobile Phone Number</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.mobileNumber</Script>
                    <Simple>Mobile Phone Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Telephone Number</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.phoneNumber</Script>
                    <Simple>Telephone Number</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>Work Location</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.workLocation</Script>
                    <Simple>Work Location</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>erlocale</Name>
                    <Type>advanced</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Script>work.erlocale</Script>
                    <Simple>erlocale</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <State>Enabled</State>
        </ALMap>
    </Folder>
    <Properties name="Properties">
        <Stores>
            <PropertyStore name="Solution-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Solution-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Global-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Global-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="System-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">System-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="PIMOULoader">
                <ModTime>1503315747277</ModTime>
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">PIMOULoader/PIMOULoader.properties</parameter>
                    <parameter name="collectionType">PIMOULoader</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Java-Properties">
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">@SUBSTITUTE{config.$directory}/AdapterKit.properties</parameter>
                    <parameter name="collectionType">Java-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="ISIG">
                <ModTime>1481862226352</ModTime>
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">ISIGADI/ISIG.properties</parameter>
                    <parameter name="collectionType">Default</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="IGIBPSync">
                <ModTime>1496665273344</ModTime>
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">C:\Users\rakesh_patil\Documents\TDI\workspace\IGIBPSync\Runtime-IGIBPSync\IGIBPSync.properties</parameter>
                    <parameter name="collectionType">IGIBPSync</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="AdapterKit">
                <ModTime>1499853872100</ModTime>
                <Parser/>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collection">AdapterKit/AdapterKit.properties</parameter>
                    <parameter name="collectionType">AdapterKit</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
        </Stores>
    </Properties>
    <Folder name="Schedules"/>
    <Folder name="Sequences"/>
</MetamergeConfig>